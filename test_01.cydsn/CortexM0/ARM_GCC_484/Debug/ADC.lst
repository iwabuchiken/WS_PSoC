ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000500u, 0x00001400u, 0x000014
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  29              		.cfi_def_cfa_offset 24
  30              		.cfi_offset 3, -24
  31              		.cfi_offset 4, -20
  32              		.cfi_offset 5, -16
  33              		.cfi_offset 6, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****         };
 136:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 4


 137:.\Generated_Source\PSoC4/ADC.c **** 
 138:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 139:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 140 0
  37 0002 0E20     		mov	r0, #14
  38 0004 0321     		mov	r1, #3
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 141:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 141 0
  42 000a 0E20     		mov	r0, #14
  43 000c 4C49     		ldr	r1, .L14
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 142:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC.c **** 
 144:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 145 0
  47 0012 0F22     		mov	r2, #15
  48 0014 4B4B     		ldr	r3, .L14+4
  49 0016 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  50              		.loc 1 146 0
  51 0018 4B4B     		ldr	r3, .L14+8
  52 001a 1A68     		ldr	r2, [r3]
 147:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 148:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  53              		.loc 1 148 0
  54 001c 4B4B     		ldr	r3, .L14+12
  55 001e 1B68     		ldr	r3, [r3]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  56              		.loc 1 146 0
  57 0020 002B     		cmp	r3, #0
  58 0022 01DA     		bge	.L12
  59 0024 4A4B     		ldr	r3, .L14+16
  60 0026 00E0     		b	.L2
  61              	.L12:
  62 0028 4A4B     		ldr	r3, .L14+20
  63              	.L2:
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  64              		.loc 1 146 0 is_stmt 0 discriminator 3
  65 002a 1A43     		orr	r2, r3
  66 002c 464B     		ldr	r3, .L14+8
  67 002e 1A60     		str	r2, [r3]
 149:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  68              		.loc 1 150 0 is_stmt 1 discriminator 3
  69 0030 494A     		ldr	r2, .L14+24
  70 0032 4A4B     		ldr	r3, .L14+28
  71 0034 1A60     		str	r2, [r3]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  72              		.loc 1 151 0 discriminator 3
  73 0036 4A4A     		ldr	r2, .L14+32
  74 0038 4A4B     		ldr	r3, .L14+36
  75 003a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 5


 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  76              		.loc 1 152 0 discriminator 3
  77 003c 0023     		mov	r3, #0
  78 003e 4A4A     		ldr	r2, .L14+40
  79 0040 1360     		str	r3, [r2]
 153:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  80              		.loc 1 153 0 discriminator 3
  81 0042 4A49     		ldr	r1, .L14+44
  82 0044 4A4A     		ldr	r2, .L14+48
  83 0046 1160     		str	r1, [r2]
 154:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  84              		.loc 1 154 0 discriminator 3
  85 0048 4A49     		ldr	r1, .L14+52
  86 004a 4B4A     		ldr	r2, .L14+56
  87 004c 1160     		str	r1, [r2]
 155:.\Generated_Source\PSoC4/ADC.c ****     
 156:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 157:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 158:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 159:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 160:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 161:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 162:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 163:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 164:.\Generated_Source\PSoC4/ADC.c **** 
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  88              		.loc 1 165 0 discriminator 3
  89 004e 4B4A     		ldr	r2, .L14+60
  90 0050 1360     		str	r3, [r2]
 166:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  91              		.loc 1 166 0 discriminator 3
  92 0052 4B4A     		ldr	r2, .L14+64
  93 0054 1360     		str	r3, [r2]
 167:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  94              		.loc 1 167 0 discriminator 3
  95 0056 1122     		mov	r2, #17
  96 0058 4A4B     		ldr	r3, .L14+68
  97 005a 1A60     		str	r2, [r3]
 168:.\Generated_Source\PSoC4/ADC.c **** 
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 170:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
  98              		.loc 1 170 0 discriminator 3
  99 005c 0222     		mov	r2, #2
 100 005e 4A4B     		ldr	r3, .L14+72
 101 0060 1A60     		str	r2, [r3]
 171:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 172:.\Generated_Source\PSoC4/ADC.c **** 
 173:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 174:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 102              		.loc 1 174 0 discriminator 3
 103 0062 4A4B     		ldr	r3, .L14+76
 104 0064 1968     		ldr	r1, [r3]
 105              	.LVL2:
 175:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 106              		.loc 1 175 0 discriminator 3
 107 0066 4A4A     		ldr	r2, .L14+80
 108 0068 0A40     		and	r2, r1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 6


 109              	.LVL3:
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 178:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 179:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 180:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 181:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 110              		.loc 1 181 0 discriminator 3
 111 006a 0121     		mov	r1, #1
 112 006c 0A43     		orr	r2, r1
 113              	.LVL4:
 182:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 183:.\Generated_Source\PSoC4/ADC.c ****     #else
 184:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 185:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 186:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC.c ****         #else
 188:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 189:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 190:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 191:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 192:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 193:.\Generated_Source\PSoC4/ADC.c ****     
 194:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 114              		.loc 1 194 0 discriminator 3
 115 006e 1A60     		str	r2, [r3]
 116              	.LVL5:
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 197:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 198:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 199:.\Generated_Source\PSoC4/ADC.c **** 
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 117              		.loc 1 200 0 discriminator 3
 118 0070 0023     		mov	r3, #0
 201:.\Generated_Source\PSoC4/ADC.c ****     {
 202:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 119              		.loc 1 202 0 discriminator 3
 120 0072 4848     		ldr	r0, .L14+84
 203:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 204:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 205:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 206:.\Generated_Source\PSoC4/ADC.c ****         
 207:.\Generated_Source\PSoC4/ADC.c ****         
 208:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 209:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 210:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 211:.\Generated_Source\PSoC4/ADC.c ****         */
 212:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 213:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 214:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 215:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 218:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 219:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 220:.\Generated_Source\PSoC4/ADC.c ****         {
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 7


 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 222:.\Generated_Source\PSoC4/ADC.c **** 
 223:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 224:.\Generated_Source\PSoC4/ADC.c ****             {
 225:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 229:.\Generated_Source\PSoC4/ADC.c ****             {
 230:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 231:.\Generated_Source\PSoC4/ADC.c ****             }
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 234:.\Generated_Source\PSoC4/ADC.c ****             else
 235:.\Generated_Source\PSoC4/ADC.c ****             {
 236:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 239:.\Generated_Source\PSoC4/ADC.c ****                 {
 240:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 241:.\Generated_Source\PSoC4/ADC.c ****                 }
 242:.\Generated_Source\PSoC4/ADC.c **** 
 243:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 244:.\Generated_Source\PSoC4/ADC.c ****                 {
 245:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 246:.\Generated_Source\PSoC4/ADC.c ****                 }
 247:.\Generated_Source\PSoC4/ADC.c ****             }
 248:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 249:.\Generated_Source\PSoC4/ADC.c **** 
 250:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 121              		.loc 1 250 0 discriminator 3
 122 0074 051C     		mov	r5, r0
 251:.\Generated_Source\PSoC4/ADC.c ****         {
 252:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 253:.\Generated_Source\PSoC4/ADC.c ****         }
 254:.\Generated_Source\PSoC4/ADC.c ****         else
 255:.\Generated_Source\PSoC4/ADC.c ****         {
 256:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 257:.\Generated_Source\PSoC4/ADC.c ****         }
 258:.\Generated_Source\PSoC4/ADC.c **** 
 259:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 260:.\Generated_Source\PSoC4/ADC.c ****         {
 261:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 262:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 263:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 264:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 265:.\Generated_Source\PSoC4/ADC.c ****             #else
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 267:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 268:.\Generated_Source\PSoC4/ADC.c ****         }
 269:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 270:.\Generated_Source\PSoC4/ADC.c ****         {
 271:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 272:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 273:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 274:.\Generated_Source\PSoC4/ADC.c ****             #else
 275:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 8


 276:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 277:.\Generated_Source\PSoC4/ADC.c ****         }
 278:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 123              		.loc 1 279 0 discriminator 3
 124 0076 484F     		ldr	r7, .L14+88
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 125              		.loc 1 200 0 discriminator 3
 126 0078 5FE0     		b	.L3
 127              	.LVL6:
 128              	.L11:
 202:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 129              		.loc 1 202 0
 130 007a 9A00     		lsl	r2, r3, #2
 131 007c 1258     		ldr	r2, [r2, r0]
 132 007e DC21     		mov	r1, #220
 133 0080 8901     		lsl	r1, r1, #6
 134 0082 1140     		and	r1, r2
 135              	.LVL7:
 204:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 136              		.loc 1 204 0
 137 0084 C618     		add	r6, r0, r3
 138 0086 367D     		ldrb	r6, [r6, #20]
 139 0088 3143     		orr	r1, r6
 140              	.LVL8:
 218:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 141              		.loc 1 218 0
 142 008a 032B     		cmp	r3, #3
 143 008c 1BD8     		bhi	.L4
 221:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 144              		.loc 1 221 0
 145 008e 9E00     		lsl	r6, r3, #2
 146 0090 424C     		ldr	r4, .L14+92
 147 0092 3619     		add	r6, r6, r4
 148 0094 3160     		str	r1, [r6]
 223:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 149              		.loc 1 223 0
 150 0096 D107     		lsl	r1, r2, #31
 151 0098 07D5     		bpl	.L5
 152              	.LVL9:
 225:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 153              		.loc 1 225 0
 154 009a 384A     		ldr	r2, .L14+60
 155 009c 1668     		ldr	r6, [r2]
 156              	.LVL10:
 157 009e 8021     		mov	r1, #128
 158 00a0 4902     		lsl	r1, r1, #9
 159 00a2 9940     		lsl	r1, r1, r3
 160 00a4 090C     		lsr	r1, r1, #16
 161 00a6 3143     		orr	r1, r6
 162 00a8 1160     		str	r1, [r2]
 163              	.LVL11:
 164              	.L5:
 228:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 165              		.loc 1 228 0
 166 00aa 9A00     		lsl	r2, r3, #2
 167 00ac 394C     		ldr	r4, .L14+84
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 9


 168 00ae 1259     		ldr	r2, [r2, r4]
 169 00b0 9107     		lsl	r1, r2, #30
 170 00b2 21D5     		bpl	.L6
 230:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 171              		.loc 1 230 0
 172 00b4 324A     		ldr	r2, .L14+64
 173 00b6 1668     		ldr	r6, [r2]
 174 00b8 8021     		mov	r1, #128
 175 00ba 4902     		lsl	r1, r1, #9
 176 00bc 9940     		lsl	r1, r1, r3
 177 00be 090C     		lsr	r1, r1, #16
 178 00c0 3143     		orr	r1, r6
 179 00c2 1160     		str	r1, [r2]
 180 00c4 18E0     		b	.L6
 181              	.LVL12:
 182              	.L4:
 236:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 183              		.loc 1 236 0
 184 00c6 8022     		mov	r2, #128
 185 00c8 D205     		lsl	r2, r2, #23
 186 00ca 1143     		orr	r1, r2
 187              	.LVL13:
 188 00cc 344A     		ldr	r2, .L14+96
 189 00ce 1160     		str	r1, [r2]
 238:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 190              		.loc 1 238 0
 191 00d0 9A00     		lsl	r2, r3, #2
 192 00d2 304C     		ldr	r4, .L14+84
 193 00d4 1259     		ldr	r2, [r2, r4]
 194 00d6 D107     		lsl	r1, r2, #31
 195 00d8 04D5     		bpl	.L7
 240:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 196              		.loc 1 240 0
 197 00da 2A4A     		ldr	r2, .L14+68
 198 00dc 1668     		ldr	r6, [r2]
 199              	.LVL14:
 200 00de 2021     		mov	r1, #32
 201 00e0 3143     		orr	r1, r6
 202 00e2 1160     		str	r1, [r2]
 203              	.L7:
 243:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 204              		.loc 1 243 0
 205 00e4 9A00     		lsl	r2, r3, #2
 206 00e6 2B4C     		ldr	r4, .L14+84
 207 00e8 1259     		ldr	r2, [r2, r4]
 208 00ea 9107     		lsl	r1, r2, #30
 209 00ec 04D5     		bpl	.L6
 245:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 210              		.loc 1 245 0
 211 00ee 254A     		ldr	r2, .L14+68
 212 00f0 1668     		ldr	r6, [r2]
 213 00f2 4021     		mov	r1, #64
 214 00f4 3143     		orr	r1, r6
 215 00f6 1160     		str	r1, [r2]
 216              	.L6:
 250:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 217              		.loc 1 250 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 10


 218 00f8 9A00     		lsl	r2, r3, #2
 219 00fa 5159     		ldr	r1, [r2, r5]
 220 00fc 8A05     		lsl	r2, r1, #22
 221 00fe 02D5     		bpl	.L13
 252:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 222              		.loc 1 252 0
 223 0100 8022     		mov	r2, #128
 224 0102 5200     		lsl	r2, r2, #1
 225 0104 01E0     		b	.L8
 226              	.L13:
 256:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 227              		.loc 1 256 0
 228 0106 8022     		mov	r2, #128
 229 0108 5201     		lsl	r2, r2, #5
 230              	.L8:
 231              	.LVL15:
 259:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 232              		.loc 1 259 0
 233 010a CC05     		lsl	r4, r1, #23
 234 010c 04D4     		bmi	.L9
 266:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 235              		.loc 1 266 0
 236 010e 5900     		lsl	r1, r3, #1
 237 0110 0026     		mov	r6, #0
 238 0112 244C     		ldr	r4, .L14+100
 239 0114 0E53     		strh	r6, [r1, r4]
 240 0116 03E0     		b	.L10
 241              	.L9:
 275:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 242              		.loc 1 275 0
 243 0118 5900     		lsl	r1, r3, #1
 244 011a 0026     		mov	r6, #0
 245 011c 214C     		ldr	r4, .L14+100
 246 011e 0E53     		strh	r6, [r1, r4]
 247              	.L10:
 248              		.loc 1 279 0
 249 0120 2149     		ldr	r1, .L14+104
 250 0122 4A43     		mul	r2, r1
 251              	.LVL16:
 252 0124 8021     		mov	r1, #128
 253 0126 C900     		lsl	r1, r1, #3
 254 0128 5218     		add	r2, r2, r1
 280:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 255              		.loc 1 280 0
 256 012a D117     		asr	r1, r2, #31
 257 012c 490D     		lsr	r1, r1, #21
 258 012e 8A18     		add	r2, r1, r2
 259 0130 D212     		asr	r2, r2, #11
 279:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 260              		.loc 1 279 0
 261 0132 12B2     		sxth	r2, r2
 262 0134 9900     		lsl	r1, r3, #2
 263 0136 CA51     		str	r2, [r1, r7]
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 264              		.loc 1 200 0
 265 0138 0133     		add	r3, r3, #1
 266              	.LVL17:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 11


 267              	.L3:
 200:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 268              		.loc 1 200 0 is_stmt 0 discriminator 1
 269 013a 042B     		cmp	r3, #4
 270 013c 9DD9     		bls	.L11
 281:.\Generated_Source\PSoC4/ADC.c ****     }
 282:.\Generated_Source\PSoC4/ADC.c **** }
 271              		.loc 1 282 0 is_stmt 1
 272              		@ sp needed
 273 013e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 274              	.L15:
 275              		.align	2
 276              	.L14:
 277 0140 00000000 		.word	ADC_ISR
 278 0144 20001A40 		.word	1075445792
 279 0148 00001A40 		.word	1075445760
 280 014c 80031A40 		.word	1075446656
 281 0150 402E1013 		.word	319827520
 282 0154 402E0013 		.word	318778944
 283 0158 A8000080 		.word	-2147483480
 284 015c 04001A40 		.word	1075445764
 285 0160 0000FF07 		.word	134152192
 286 0164 18001A40 		.word	1075445784
 287 0168 1C001A40 		.word	1075445788
 288 016c E9030400 		.word	263145
 289 0170 10001A40 		.word	1075445776
 290 0174 04000400 		.word	262148
 291 0178 14001A40 		.word	1075445780
 292 017c 28021A40 		.word	1075446312
 293 0180 38021A40 		.word	1075446328
 294 0184 18021A40 		.word	1075446296
 295 0188 000F1A40 		.word	1075449600
 296 018c 30001A40 		.word	1075445808
 297 0190 FFFFFFDF 		.word	-536870913
 298 0194 00000000 		.word	.LANCHOR0
 299 0198 00000000 		.word	ADC_countsPer10Volt
 300 019c 80001A40 		.word	1075445888
 301 01a0 80021A40 		.word	1075446400
 302 01a4 00000000 		.word	ADC_offset
 303 01a8 10270000 		.word	10000
 304              		.cfi_endproc
 305              	.LFE1:
 306              		.size	ADC_Init, .-ADC_Init
 307              		.section	.text.ADC_Enable,"ax",%progbits
 308              		.align	2
 309              		.global	ADC_Enable
 310              		.code	16
 311              		.thumb_func
 312              		.type	ADC_Enable, %function
 313              	ADC_Enable:
 314              	.LFB2:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 285:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 286:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 287:.\Generated_Source\PSoC4/ADC.c **** *
 288:.\Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 12


 289:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 290:.\Generated_Source\PSoC4/ADC.c **** *
 291:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 292:.\Generated_Source\PSoC4/ADC.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC.c **** *
 294:.\Generated_Source\PSoC4/ADC.c **** * Return:
 295:.\Generated_Source\PSoC4/ADC.c **** *  None.
 296:.\Generated_Source\PSoC4/ADC.c **** *
 297:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 298:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 299:.\Generated_Source\PSoC4/ADC.c **** {
 315              		.loc 1 299 0
 316              		.cfi_startproc
 317 0000 08B5     		push	{r3, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
 300:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 321              		.loc 1 300 0
 322 0002 074B     		ldr	r3, .L18
 323 0004 1B68     		ldr	r3, [r3]
 324 0006 002B     		cmp	r3, #0
 325 0008 08DB     		blt	.L16
 301:.\Generated_Source\PSoC4/ADC.c ****     {
 302:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4)
 303:.\Generated_Source\PSoC4/ADC.c **** 
 304:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 305:.\Generated_Source\PSoC4/ADC.c ****             {
 306:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 307:.\Generated_Source\PSoC4/ADC.c ****             }
 308:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4) */
 309:.\Generated_Source\PSoC4/ADC.c ****         
 310:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 326              		.loc 1 310 0
 327 000a 054B     		ldr	r3, .L18
 328 000c 1968     		ldr	r1, [r3]
 329 000e 8022     		mov	r2, #128
 330 0010 1206     		lsl	r2, r2, #24
 331 0012 0A43     		orr	r2, r1
 332 0014 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/ADC.c ****         
 312:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 313:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 333              		.loc 1 313 0
 334 0016 0A20     		mov	r0, #10
 335 0018 FFF7FEFF 		bl	CyDelayUs
 336              	.LVL18:
 337              	.L16:
 314:.\Generated_Source\PSoC4/ADC.c ****     }
 315:.\Generated_Source\PSoC4/ADC.c **** }
 338              		.loc 1 315 0
 339              		@ sp needed
 340 001c 08BD     		pop	{r3, pc}
 341              	.L19:
 342 001e C046     		.align	2
 343              	.L18:
 344 0020 00001A40 		.word	1075445760
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 13


 345              		.cfi_endproc
 346              	.LFE2:
 347              		.size	ADC_Enable, .-ADC_Enable
 348              		.section	.text.ADC_Start,"ax",%progbits
 349              		.align	2
 350              		.global	ADC_Start
 351              		.code	16
 352              		.thumb_func
 353              		.type	ADC_Start, %function
 354              	ADC_Start:
 355              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c **** {
 356              		.loc 1 64 0
 357              		.cfi_startproc
 358 0000 08B5     		push	{r3, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
 362              		.loc 1 66 0
 363 0002 064B     		ldr	r3, .L22
 364 0004 1B78     		ldrb	r3, [r3]
 365 0006 002B     		cmp	r3, #0
 366 0008 04D1     		bne	.L21
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 367              		.loc 1 68 0
 368 000a FFF7FEFF 		bl	ADC_Init
 369              	.LVL19:
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 370              		.loc 1 69 0
 371 000e 0122     		mov	r2, #1
 372 0010 024B     		ldr	r3, .L22
 373 0012 1A70     		strb	r2, [r3]
 374              	.L21:
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 375              		.loc 1 71 0
 376 0014 FFF7FEFF 		bl	ADC_Enable
 377              	.LVL20:
  72:.\Generated_Source\PSoC4/ADC.c **** }
 378              		.loc 1 72 0
 379              		@ sp needed
 380 0018 08BD     		pop	{r3, pc}
 381              	.L23:
 382 001a C046     		.align	2
 383              	.L22:
 384 001c 00000000 		.word	.LANCHOR1
 385              		.cfi_endproc
 386              	.LFE0:
 387              		.size	ADC_Start, .-ADC_Start
 388              		.section	.text.ADC_Stop,"ax",%progbits
 389              		.align	2
 390              		.global	ADC_Stop
 391              		.code	16
 392              		.thumb_func
 393              		.type	ADC_Stop, %function
 394              	ADC_Stop:
 395              	.LFB3:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 14


 316:.\Generated_Source\PSoC4/ADC.c **** 
 317:.\Generated_Source\PSoC4/ADC.c **** 
 318:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 320:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 323:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 324:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** * Return:
 330:.\Generated_Source\PSoC4/ADC.c **** *  None.
 331:.\Generated_Source\PSoC4/ADC.c **** *
 332:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 334:.\Generated_Source\PSoC4/ADC.c **** {
 396              		.loc 1 334 0
 397              		.cfi_startproc
 335:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 398              		.loc 1 335 0
 399 0000 024B     		ldr	r3, .L25
 400 0002 1A68     		ldr	r2, [r3]
 401 0004 5200     		lsl	r2, r2, #1
 402 0006 5208     		lsr	r2, r2, #1
 403 0008 1A60     		str	r2, [r3]
 336:.\Generated_Source\PSoC4/ADC.c **** }
 404              		.loc 1 336 0
 405              		@ sp needed
 406 000a 7047     		bx	lr
 407              	.L26:
 408              		.align	2
 409              	.L25:
 410 000c 00001A40 		.word	1075445760
 411              		.cfi_endproc
 412              	.LFE3:
 413              		.size	ADC_Stop, .-ADC_Stop
 414              		.section	.text.ADC_StartConvert,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_StartConvert
 417              		.code	16
 418              		.thumb_func
 419              		.type	ADC_StartConvert, %function
 420              	ADC_StartConvert:
 421              	.LFB4:
 337:.\Generated_Source\PSoC4/ADC.c **** 
 338:.\Generated_Source\PSoC4/ADC.c **** 
 339:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 341:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/ADC.c **** *
 343:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 344:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 345:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 346:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 15


 347:.\Generated_Source\PSoC4/ADC.c **** *
 348:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 349:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 350:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 351:.\Generated_Source\PSoC4/ADC.c **** *
 352:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 353:.\Generated_Source\PSoC4/ADC.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC.c **** *
 355:.\Generated_Source\PSoC4/ADC.c **** * Return:
 356:.\Generated_Source\PSoC4/ADC.c **** *  None.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 359:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 360:.\Generated_Source\PSoC4/ADC.c **** {
 422              		.loc 1 360 0
 423              		.cfi_startproc
 361:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 362:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 424              		.loc 1 362 0
 425 0000 034B     		ldr	r3, .L28
 426 0002 1968     		ldr	r1, [r3]
 427 0004 8022     		mov	r2, #128
 428 0006 5202     		lsl	r2, r2, #9
 429 0008 0A43     		orr	r2, r1
 430 000a 1A60     		str	r2, [r3]
 363:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 364:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 365:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 366:.\Generated_Source\PSoC4/ADC.c **** 
 367:.\Generated_Source\PSoC4/ADC.c **** }
 431              		.loc 1 367 0
 432              		@ sp needed
 433 000c 7047     		bx	lr
 434              	.L29:
 435 000e C046     		.align	2
 436              	.L28:
 437 0010 04001A40 		.word	1075445764
 438              		.cfi_endproc
 439              	.LFE4:
 440              		.size	ADC_StartConvert, .-ADC_StartConvert
 441              		.section	.text.ADC_StopConvert,"ax",%progbits
 442              		.align	2
 443              		.global	ADC_StopConvert
 444              		.code	16
 445              		.thumb_func
 446              		.type	ADC_StopConvert, %function
 447              	ADC_StopConvert:
 448              	.LFB5:
 368:.\Generated_Source\PSoC4/ADC.c **** 
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 372:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/ADC.c **** *
 374:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 375:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 376:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 16


 377:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 378:.\Generated_Source\PSoC4/ADC.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  None.
 382:.\Generated_Source\PSoC4/ADC.c **** *
 383:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 384:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 385:.\Generated_Source\PSoC4/ADC.c **** {
 449              		.loc 1 385 0
 450              		.cfi_startproc
 386:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 387:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 451              		.loc 1 387 0
 452 0000 024B     		ldr	r3, .L31
 453 0002 1968     		ldr	r1, [r3]
 454 0004 024A     		ldr	r2, .L31+4
 455 0006 0A40     		and	r2, r1
 456 0008 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 389:.\Generated_Source\PSoC4/ADC.c **** }
 457              		.loc 1 389 0
 458              		@ sp needed
 459 000a 7047     		bx	lr
 460              	.L32:
 461              		.align	2
 462              	.L31:
 463 000c 04001A40 		.word	1075445764
 464 0010 FFFFFEFF 		.word	-65537
 465              		.cfi_endproc
 466              	.LFE5:
 467              		.size	ADC_StopConvert, .-ADC_StopConvert
 468              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 469              		.align	2
 470              		.global	ADC_IsEndConversion
 471              		.code	16
 472              		.thumb_func
 473              		.type	ADC_IsEndConversion, %function
 474              	ADC_IsEndConversion:
 475              	.LFB6:
 390:.\Generated_Source\PSoC4/ADC.c **** 
 391:.\Generated_Source\PSoC4/ADC.c **** 
 392:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 393:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 394:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 395:.\Generated_Source\PSoC4/ADC.c **** *
 396:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 397:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 398:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 399:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 400:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 401:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 402:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 403:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 404:.\Generated_Source\PSoC4/ADC.c **** *
 405:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 406:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 17


 407:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 408:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 409:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 410:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 411:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 412:.\Generated_Source\PSoC4/ADC.c **** *
 413:.\Generated_Source\PSoC4/ADC.c **** * Return:
 414:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 415:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 416:.\Generated_Source\PSoC4/ADC.c **** *
 417:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 418:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 419:.\Generated_Source\PSoC4/ADC.c **** {
 476              		.loc 1 419 0
 477              		.cfi_startproc
 478              	.LVL21:
 479 0000 10B5     		push	{r4, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 4, -8
 482              		.cfi_offset 14, -4
 483              	.LVL22:
 420:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 421:.\Generated_Source\PSoC4/ADC.c **** 
 422:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 484              		.loc 1 422 0
 485 0002 8307     		lsl	r3, r0, #30
 486 0004 0ED0     		beq	.L40
 423:.\Generated_Source\PSoC4/ADC.c ****     {
 424:.\Generated_Source\PSoC4/ADC.c ****         do
 425:.\Generated_Source\PSoC4/ADC.c ****         {
 426:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 487              		.loc 1 426 0 discriminator 1
 488 0006 1349     		ldr	r1, .L45
 489 0008 0122     		mov	r2, #1
 427:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 490              		.loc 1 427 0 discriminator 1
 491 000a 0224     		mov	r4, #2
 492 000c 0440     		and	r4, r0
 493              	.LVL23:
 494              	.L42:
 426:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 495              		.loc 1 426 0 discriminator 1
 496 000e 0B68     		ldr	r3, [r1]
 497 0010 1340     		and	r3, r2
 498              	.LVL24:
 499              		.loc 1 427 0 discriminator 1
 500 0012 01D1     		bne	.L35
 501 0014 002C     		cmp	r4, #0
 502 0016 FAD1     		bne	.L42
 503              	.L35:
 428:.\Generated_Source\PSoC4/ADC.c **** 
 429:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 504              		.loc 1 429 0
 505 0018 002B     		cmp	r3, #0
 506 001a 04D0     		beq	.L34
 430:.\Generated_Source\PSoC4/ADC.c ****         {
 431:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 18


 432:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 507              		.loc 1 432 0
 508 001c 0121     		mov	r1, #1
 509 001e 0D4A     		ldr	r2, .L45
 510 0020 1160     		str	r1, [r2]
 511 0022 00E0     		b	.L34
 512              	.LVL25:
 513              	.L40:
 420:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 514              		.loc 1 420 0
 515 0024 0023     		mov	r3, #0
 516              	.LVL26:
 517              	.L34:
 433:.\Generated_Source\PSoC4/ADC.c ****         }
 434:.\Generated_Source\PSoC4/ADC.c ****     }
 435:.\Generated_Source\PSoC4/ADC.c **** 
 436:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 437:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 518              		.loc 1 437 0
 519 0026 0C22     		mov	r2, #12
 520 0028 0242     		tst	r2, r0
 521 002a 10D0     		beq	.L37
 438:.\Generated_Source\PSoC4/ADC.c ****         {
 439:.\Generated_Source\PSoC4/ADC.c ****             do
 440:.\Generated_Source\PSoC4/ADC.c ****             {
 441:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 522              		.loc 1 441 0
 523 002c 094C     		ldr	r4, .L45
 524 002e 1021     		mov	r1, #16
 442:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 443:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 525              		.loc 1 443 0
 526 0030 0822     		mov	r2, #8
 527 0032 1040     		and	r0, r2
 528              	.LVL27:
 529              	.L41:
 441:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 530              		.loc 1 441 0
 531 0034 2268     		ldr	r2, [r4]
 532 0036 0A40     		and	r2, r1
 533 0038 1343     		orr	r3, r2
 534              	.LVL28:
 442:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 535              		.loc 1 442 0
 536 003a 0A1C     		mov	r2, r1
 537 003c 1A40     		and	r2, r3
 538              		.loc 1 443 0
 539 003e 01D1     		bne	.L38
 442:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 540              		.loc 1 442 0 discriminator 1
 541 0040 0028     		cmp	r0, #0
 542 0042 F7D1     		bne	.L41
 543              	.L38:
 444:.\Generated_Source\PSoC4/ADC.c **** 
 445:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 544              		.loc 1 445 0
 545 0044 002A     		cmp	r2, #0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 19


 546 0046 02D0     		beq	.L37
 446:.\Generated_Source\PSoC4/ADC.c ****             {
 447:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 448:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 547              		.loc 1 448 0
 548 0048 1021     		mov	r1, #16
 549 004a 024A     		ldr	r2, .L45
 550 004c 1160     		str	r1, [r2]
 551              	.L37:
 449:.\Generated_Source\PSoC4/ADC.c ****             }
 450:.\Generated_Source\PSoC4/ADC.c ****         }
 451:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 452:.\Generated_Source\PSoC4/ADC.c **** 
 453:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 454:.\Generated_Source\PSoC4/ADC.c **** }
 552              		.loc 1 454 0
 553 004e 181C     		mov	r0, r3
 554              		@ sp needed
 555 0050 10BD     		pop	{r4, pc}
 556              	.L46:
 557 0052 C046     		.align	2
 558              	.L45:
 559 0054 10021A40 		.word	1075446288
 560              		.cfi_endproc
 561              	.LFE6:
 562              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 563              		.section	.text.ADC_GetResult16,"ax",%progbits
 564              		.align	2
 565              		.global	ADC_GetResult16
 566              		.code	16
 567              		.thumb_func
 568              		.type	ADC_GetResult16, %function
 569              	ADC_GetResult16:
 570              	.LFB7:
 455:.\Generated_Source\PSoC4/ADC.c **** 
 456:.\Generated_Source\PSoC4/ADC.c **** 
 457:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 458:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 459:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 460:.\Generated_Source\PSoC4/ADC.c **** *
 461:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 462:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 463:.\Generated_Source\PSoC4/ADC.c **** *
 464:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 465:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 466:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Return:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 472:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 473:.\Generated_Source\PSoC4/ADC.c **** {
 571              		.loc 1 473 0
 572              		.cfi_startproc
 573              	.LVL29:
 574 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 20


 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 4, -8
 577              		.cfi_offset 14, -4
 578 0002 041E     		sub	r4, r0, #0
 474:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 475:.\Generated_Source\PSoC4/ADC.c **** 
 476:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 477:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 579              		.loc 1 477 0
 580 0004 042C     		cmp	r4, #4
 581 0006 02D9     		bls	.L48
 582              		.loc 1 477 0 is_stmt 0 discriminator 1
 583 0008 0020     		mov	r0, #0
 584              	.LVL30:
 585 000a FFF7FEFF 		bl	CyHalt
 586              	.LVL31:
 587              	.L48:
 478:.\Generated_Source\PSoC4/ADC.c **** 
 479:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 588              		.loc 1 479 0 is_stmt 1
 589 000e 032C     		cmp	r4, #3
 590 0010 06D8     		bhi	.L49
 480:.\Generated_Source\PSoC4/ADC.c ****     {
 481:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 591              		.loc 1 481 0
 592 0012 A400     		lsl	r4, r4, #2
 593              	.LVL32:
 594 0014 054B     		ldr	r3, .L51
 595 0016 E418     		add	r4, r4, r3
 596 0018 2068     		ldr	r0, [r4]
 597 001a 0004     		lsl	r0, r0, #16
 598 001c 000C     		lsr	r0, r0, #16
 599              	.LVL33:
 600 001e 03E0     		b	.L50
 601              	.LVL34:
 602              	.L49:
 482:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 483:.\Generated_Source\PSoC4/ADC.c ****     }
 484:.\Generated_Source\PSoC4/ADC.c ****     else
 485:.\Generated_Source\PSoC4/ADC.c ****     {
 486:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 487:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 603              		.loc 1 487 0
 604 0020 034B     		ldr	r3, .L51+4
 605 0022 1868     		ldr	r0, [r3]
 606 0024 0004     		lsl	r0, r0, #16
 607 0026 000C     		lsr	r0, r0, #16
 608              	.LVL35:
 609              	.L50:
 488:.\Generated_Source\PSoC4/ADC.c ****         #else
 489:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 490:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 491:.\Generated_Source\PSoC4/ADC.c ****     }
 492:.\Generated_Source\PSoC4/ADC.c **** 
 493:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 610              		.loc 1 493 0
 611 0028 00B2     		sxth	r0, r0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 21


 612              	.LVL36:
 494:.\Generated_Source\PSoC4/ADC.c **** }
 613              		.loc 1 494 0
 614              		@ sp needed
 615 002a 10BD     		pop	{r4, pc}
 616              	.L52:
 617              		.align	2
 618              	.L51:
 619 002c 80011A40 		.word	1075446144
 620 0030 90021A40 		.word	1075446416
 621              		.cfi_endproc
 622              	.LFE7:
 623              		.size	ADC_GetResult16, .-ADC_GetResult16
 624              		.section	.text.ADC_SetChanMask,"ax",%progbits
 625              		.align	2
 626              		.global	ADC_SetChanMask
 627              		.code	16
 628              		.thumb_func
 629              		.type	ADC_SetChanMask, %function
 630              	ADC_SetChanMask:
 631              	.LFB8:
 495:.\Generated_Source\PSoC4/ADC.c **** 
 496:.\Generated_Source\PSoC4/ADC.c **** 
 497:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 498:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 499:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 500:.\Generated_Source\PSoC4/ADC.c **** *
 501:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 502:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 503:.\Generated_Source\PSoC4/ADC.c **** *
 504:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 505:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 506:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 507:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 508:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 509:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 510:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 511:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 512:.\Generated_Source\PSoC4/ADC.c **** *
 513:.\Generated_Source\PSoC4/ADC.c **** * Return:
 514:.\Generated_Source\PSoC4/ADC.c **** *  None.
 515:.\Generated_Source\PSoC4/ADC.c **** *
 516:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 517:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 518:.\Generated_Source\PSoC4/ADC.c **** {
 632              		.loc 1 518 0
 633              		.cfi_startproc
 634              	.LVL37:
 519:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 635              		.loc 1 519 0
 636 0000 0F23     		mov	r3, #15
 637 0002 1840     		and	r0, r3
 638              	.LVL38:
 639 0004 014B     		ldr	r3, .L54
 640 0006 1860     		str	r0, [r3]
 520:.\Generated_Source\PSoC4/ADC.c **** }
 641              		.loc 1 520 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 22


 642              		@ sp needed
 643 0008 7047     		bx	lr
 644              	.L55:
 645 000a C046     		.align	2
 646              	.L54:
 647 000c 20001A40 		.word	1075445792
 648              		.cfi_endproc
 649              	.LFE8:
 650              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 651              		.section	.text.ADC_EnableInjection,"ax",%progbits
 652              		.align	2
 653              		.global	ADC_EnableInjection
 654              		.code	16
 655              		.thumb_func
 656              		.type	ADC_EnableInjection, %function
 657              	ADC_EnableInjection:
 658              	.LFB9:
 521:.\Generated_Source\PSoC4/ADC.c **** 
 522:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 523:.\Generated_Source\PSoC4/ADC.c **** 
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 526:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 527:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 528:.\Generated_Source\PSoC4/ADC.c ****     *
 529:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 530:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 531:.\Generated_Source\PSoC4/ADC.c ****     *
 532:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 533:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 534:.\Generated_Source\PSoC4/ADC.c ****     *
 535:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 536:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 537:.\Generated_Source\PSoC4/ADC.c ****     *
 538:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 539:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 540:.\Generated_Source\PSoC4/ADC.c ****     {
 659              		.loc 1 540 0
 660              		.cfi_startproc
 541:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 661              		.loc 1 541 0
 662 0000 034B     		ldr	r3, .L57
 663 0002 1968     		ldr	r1, [r3]
 664 0004 8022     		mov	r2, #128
 665 0006 1206     		lsl	r2, r2, #24
 666 0008 0A43     		orr	r2, r1
 667 000a 1A60     		str	r2, [r3]
 542:.\Generated_Source\PSoC4/ADC.c ****     }
 668              		.loc 1 542 0
 669              		@ sp needed
 670 000c 7047     		bx	lr
 671              	.L58:
 672 000e C046     		.align	2
 673              	.L57:
 674 0010 80021A40 		.word	1075446400
 675              		.cfi_endproc
 676              	.LFE9:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 23


 677              		.size	ADC_EnableInjection, .-ADC_EnableInjection
 678              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 679              		.align	2
 680              		.global	ADC_SetLowLimit
 681              		.code	16
 682              		.thumb_func
 683              		.type	ADC_SetLowLimit, %function
 684              	ADC_SetLowLimit:
 685              	.LFB10:
 543:.\Generated_Source\PSoC4/ADC.c **** 
 544:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 545:.\Generated_Source\PSoC4/ADC.c **** 
 546:.\Generated_Source\PSoC4/ADC.c **** 
 547:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 548:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 549:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 550:.\Generated_Source\PSoC4/ADC.c **** *
 551:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 552:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 553:.\Generated_Source\PSoC4/ADC.c **** *
 554:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 555:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 556:.\Generated_Source\PSoC4/ADC.c **** *
 557:.\Generated_Source\PSoC4/ADC.c **** * Return:
 558:.\Generated_Source\PSoC4/ADC.c **** *  None.
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 561:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 562:.\Generated_Source\PSoC4/ADC.c **** {
 686              		.loc 1 562 0
 687              		.cfi_startproc
 688              	.LVL39:
 563:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 689              		.loc 1 563 0
 690 0000 054B     		ldr	r3, .L60
 691 0002 1A68     		ldr	r2, [r3]
 692 0004 120C     		lsr	r2, r2, #16
 693 0006 1204     		lsl	r2, r2, #16
 694 0008 1A60     		str	r2, [r3]
 564:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 695              		.loc 1 564 0
 696 000a 1A68     		ldr	r2, [r3]
 697 000c 0004     		lsl	r0, r0, #16
 698              	.LVL40:
 699 000e 000C     		lsr	r0, r0, #16
 700 0010 1043     		orr	r0, r2
 701 0012 1860     		str	r0, [r3]
 565:.\Generated_Source\PSoC4/ADC.c **** }
 702              		.loc 1 565 0
 703              		@ sp needed
 704 0014 7047     		bx	lr
 705              	.L61:
 706 0016 C046     		.align	2
 707              	.L60:
 708 0018 18001A40 		.word	1075445784
 709              		.cfi_endproc
 710              	.LFE10:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 24


 711              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 712              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 713              		.align	2
 714              		.global	ADC_SetHighLimit
 715              		.code	16
 716              		.thumb_func
 717              		.type	ADC_SetHighLimit, %function
 718              	ADC_SetHighLimit:
 719              	.LFB11:
 566:.\Generated_Source\PSoC4/ADC.c **** 
 567:.\Generated_Source\PSoC4/ADC.c **** 
 568:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 570:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 573:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 574:.\Generated_Source\PSoC4/ADC.c **** *
 575:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 576:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 577:.\Generated_Source\PSoC4/ADC.c **** *
 578:.\Generated_Source\PSoC4/ADC.c **** * Return:
 579:.\Generated_Source\PSoC4/ADC.c **** *  None.
 580:.\Generated_Source\PSoC4/ADC.c **** *
 581:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 582:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 583:.\Generated_Source\PSoC4/ADC.c **** {
 720              		.loc 1 583 0
 721              		.cfi_startproc
 722              	.LVL41:
 584:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 723              		.loc 1 584 0
 724 0000 044B     		ldr	r3, .L63
 725 0002 1A68     		ldr	r2, [r3]
 726 0004 1204     		lsl	r2, r2, #16
 727 0006 120C     		lsr	r2, r2, #16
 728 0008 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 729              		.loc 1 585 0
 730 000a 1A68     		ldr	r2, [r3]
 731 000c 0004     		lsl	r0, r0, #16
 732              	.LVL42:
 733 000e 1043     		orr	r0, r2
 734 0010 1860     		str	r0, [r3]
 586:.\Generated_Source\PSoC4/ADC.c **** }
 735              		.loc 1 586 0
 736              		@ sp needed
 737 0012 7047     		bx	lr
 738              	.L64:
 739              		.align	2
 740              	.L63:
 741 0014 18001A40 		.word	1075445784
 742              		.cfi_endproc
 743              	.LFE11:
 744              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 745              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 746              		.align	2
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 25


 747              		.global	ADC_SetLimitMask
 748              		.code	16
 749              		.thumb_func
 750              		.type	ADC_SetLimitMask, %function
 751              	ADC_SetLimitMask:
 752              	.LFB12:
 587:.\Generated_Source\PSoC4/ADC.c **** 
 588:.\Generated_Source\PSoC4/ADC.c **** 
 589:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 590:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 591:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 592:.\Generated_Source\PSoC4/ADC.c **** *
 593:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 594:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 595:.\Generated_Source\PSoC4/ADC.c **** *
 596:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 597:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 598:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 599:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 600:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 601:.\Generated_Source\PSoC4/ADC.c **** *
 602:.\Generated_Source\PSoC4/ADC.c **** * Return:
 603:.\Generated_Source\PSoC4/ADC.c **** *  None.
 604:.\Generated_Source\PSoC4/ADC.c **** *
 605:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 606:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 607:.\Generated_Source\PSoC4/ADC.c **** {
 753              		.loc 1 607 0
 754              		.cfi_startproc
 755              	.LVL43:
 608:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 756              		.loc 1 608 0
 757 0000 0F23     		mov	r3, #15
 758 0002 1840     		and	r0, r3
 759              	.LVL44:
 760 0004 014B     		ldr	r3, .L66
 761 0006 1860     		str	r0, [r3]
 609:.\Generated_Source\PSoC4/ADC.c **** }
 762              		.loc 1 609 0
 763              		@ sp needed
 764 0008 7047     		bx	lr
 765              	.L67:
 766 000a C046     		.align	2
 767              	.L66:
 768 000c 38021A40 		.word	1075446328
 769              		.cfi_endproc
 770              	.LFE12:
 771              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 772              		.section	.text.ADC_SetSatMask,"ax",%progbits
 773              		.align	2
 774              		.global	ADC_SetSatMask
 775              		.code	16
 776              		.thumb_func
 777              		.type	ADC_SetSatMask, %function
 778              	ADC_SetSatMask:
 779              	.LFB13:
 610:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 26


 611:.\Generated_Source\PSoC4/ADC.c **** 
 612:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 613:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 614:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 615:.\Generated_Source\PSoC4/ADC.c **** *
 616:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 617:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 618:.\Generated_Source\PSoC4/ADC.c **** *
 619:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 620:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 621:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 622:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 623:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Return:
 626:.\Generated_Source\PSoC4/ADC.c **** *  None.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 630:.\Generated_Source\PSoC4/ADC.c **** {
 780              		.loc 1 630 0
 781              		.cfi_startproc
 782              	.LVL45:
 631:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 783              		.loc 1 631 0
 784 0000 0F23     		mov	r3, #15
 785 0002 1840     		and	r0, r3
 786              	.LVL46:
 787 0004 014B     		ldr	r3, .L69
 788 0006 1860     		str	r0, [r3]
 632:.\Generated_Source\PSoC4/ADC.c **** }
 789              		.loc 1 632 0
 790              		@ sp needed
 791 0008 7047     		bx	lr
 792              	.L70:
 793 000a C046     		.align	2
 794              	.L69:
 795 000c 28021A40 		.word	1075446312
 796              		.cfi_endproc
 797              	.LFE13:
 798              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 799              		.section	.text.ADC_SetOffset,"ax",%progbits
 800              		.align	2
 801              		.global	ADC_SetOffset
 802              		.code	16
 803              		.thumb_func
 804              		.type	ADC_SetOffset, %function
 805              	ADC_SetOffset:
 806              	.LFB14:
 633:.\Generated_Source\PSoC4/ADC.c **** 
 634:.\Generated_Source\PSoC4/ADC.c **** 
 635:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 637:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/ADC.c **** *
 639:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 640:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 27


 641:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 642:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 643:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 644:.\Generated_Source\PSoC4/ADC.c **** *
 645:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 646:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 647:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 648:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 655:.\Generated_Source\PSoC4/ADC.c **** *
 656:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 657:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 658:.\Generated_Source\PSoC4/ADC.c **** {
 807              		.loc 1 658 0
 808              		.cfi_startproc
 809              	.LVL47:
 810 0000 38B5     		push	{r3, r4, r5, lr}
 811              		.cfi_def_cfa_offset 16
 812              		.cfi_offset 3, -16
 813              		.cfi_offset 4, -12
 814              		.cfi_offset 5, -8
 815              		.cfi_offset 14, -4
 816 0002 041C     		mov	r4, r0
 817 0004 0D1C     		mov	r5, r1
 659:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 660:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 818              		.loc 1 660 0
 819 0006 0428     		cmp	r0, #4
 820 0008 02D9     		bls	.L72
 821              		.loc 1 660 0 is_stmt 0 discriminator 1
 822 000a 0020     		mov	r0, #0
 823              	.LVL48:
 824 000c FFF7FEFF 		bl	CyHalt
 825              	.LVL49:
 826              	.L72:
 661:.\Generated_Source\PSoC4/ADC.c **** 
 662:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 827              		.loc 1 662 0 is_stmt 1
 828 0010 6400     		lsl	r4, r4, #1
 829              	.LVL50:
 830 0012 014B     		ldr	r3, .L73
 831 0014 E552     		strh	r5, [r4, r3]
 663:.\Generated_Source\PSoC4/ADC.c **** }
 832              		.loc 1 663 0
 833              		@ sp needed
 834 0016 38BD     		pop	{r3, r4, r5, pc}
 835              	.L74:
 836              		.align	2
 837              	.L73:
 838 0018 00000000 		.word	ADC_offset
 839              		.cfi_endproc
 840              	.LFE14:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 28


 841              		.size	ADC_SetOffset, .-ADC_SetOffset
 842              		.section	.text.ADC_SetGain,"ax",%progbits
 843              		.align	2
 844              		.global	ADC_SetGain
 845              		.code	16
 846              		.thumb_func
 847              		.type	ADC_SetGain, %function
 848              	ADC_SetGain:
 849              	.LFB15:
 664:.\Generated_Source\PSoC4/ADC.c **** 
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 668:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 669:.\Generated_Source\PSoC4/ADC.c **** *
 670:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 671:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 672:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 673:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 674:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 675:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 676:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 677:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 678:.\Generated_Source\PSoC4/ADC.c **** *
 679:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 680:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 681:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 682:.\Generated_Source\PSoC4/ADC.c **** *
 683:.\Generated_Source\PSoC4/ADC.c **** * Return:
 684:.\Generated_Source\PSoC4/ADC.c **** *  None.
 685:.\Generated_Source\PSoC4/ADC.c **** *
 686:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 687:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 688:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 689:.\Generated_Source\PSoC4/ADC.c **** *
 690:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 692:.\Generated_Source\PSoC4/ADC.c **** {
 850              		.loc 1 692 0
 851              		.cfi_startproc
 852              	.LVL51:
 853 0000 38B5     		push	{r3, r4, r5, lr}
 854              		.cfi_def_cfa_offset 16
 855              		.cfi_offset 3, -16
 856              		.cfi_offset 4, -12
 857              		.cfi_offset 5, -8
 858              		.cfi_offset 14, -4
 859 0002 041C     		mov	r4, r0
 860 0004 0D1C     		mov	r5, r1
 693:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 694:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 861              		.loc 1 694 0
 862 0006 0428     		cmp	r0, #4
 863 0008 02D9     		bls	.L76
 864              		.loc 1 694 0 is_stmt 0 discriminator 1
 865 000a 0020     		mov	r0, #0
 866              	.LVL52:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 29


 867 000c FFF7FEFF 		bl	CyHalt
 868              	.LVL53:
 869              	.L76:
 695:.\Generated_Source\PSoC4/ADC.c **** 
 696:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 870              		.loc 1 696 0 is_stmt 1
 871 0010 A400     		lsl	r4, r4, #2
 872              	.LVL54:
 873 0012 014B     		ldr	r3, .L77
 874 0014 E550     		str	r5, [r4, r3]
 697:.\Generated_Source\PSoC4/ADC.c **** }
 875              		.loc 1 697 0
 876              		@ sp needed
 877              	.LVL55:
 878 0016 38BD     		pop	{r3, r4, r5, pc}
 879              	.L78:
 880              		.align	2
 881              	.L77:
 882 0018 00000000 		.word	ADC_countsPer10Volt
 883              		.cfi_endproc
 884              	.LFE15:
 885              		.size	ADC_SetGain, .-ADC_SetGain
 886              		.global	__aeabi_idiv
 887              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 888              		.align	2
 889              		.global	ADC_CountsTo_mVolts
 890              		.code	16
 891              		.thumb_func
 892              		.type	ADC_CountsTo_mVolts, %function
 893              	ADC_CountsTo_mVolts:
 894              	.LFB16:
 698:.\Generated_Source\PSoC4/ADC.c **** 
 699:.\Generated_Source\PSoC4/ADC.c **** 
 700:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 701:.\Generated_Source\PSoC4/ADC.c **** 
 702:.\Generated_Source\PSoC4/ADC.c **** 
 703:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 704:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 705:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 706:.\Generated_Source\PSoC4/ADC.c ****     *
 707:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 708:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 709:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 710:.\Generated_Source\PSoC4/ADC.c ****     *
 711:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 714:.\Generated_Source\PSoC4/ADC.c ****     *
 715:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 716:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 717:.\Generated_Source\PSoC4/ADC.c ****     *
 718:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 720:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 721:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 722:.\Generated_Source\PSoC4/ADC.c ****     *
 723:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 30


 724:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 725:.\Generated_Source\PSoC4/ADC.c ****     {
 895              		.loc 1 725 0
 896              		.cfi_startproc
 897              	.LVL56:
 898 0000 38B5     		push	{r3, r4, r5, lr}
 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 3, -16
 901              		.cfi_offset 4, -12
 902              		.cfi_offset 5, -8
 903              		.cfi_offset 14, -4
 904 0002 041C     		mov	r4, r0
 905 0004 0D1C     		mov	r5, r1
 726:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 729:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 906              		.loc 1 729 0
 907 0006 0428     		cmp	r0, #4
 908 0008 02D9     		bls	.L80
 909              		.loc 1 729 0 is_stmt 0 discriminator 1
 910 000a 0020     		mov	r0, #0
 911              	.LVL57:
 912 000c FFF7FEFF 		bl	CyHalt
 913              	.LVL58:
 914              	.L80:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 732:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 733:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 734:.\Generated_Source\PSoC4/ADC.c ****             {
 735:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 736:.\Generated_Source\PSoC4/ADC.c ****             }
 737:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 738:.\Generated_Source\PSoC4/ADC.c **** 
 739:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 740:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 915              		.loc 1 740 0 is_stmt 1
 916 0010 6300     		lsl	r3, r4, #1
 917 0012 0F4A     		ldr	r2, .L83
 918 0014 995A     		ldrh	r1, [r3, r2]
 919 0016 691A     		sub	r1, r5, r1
 920 0018 09B2     		sxth	r1, r1
 921              	.LVL59:
 741:.\Generated_Source\PSoC4/ADC.c **** 
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 922              		.loc 1 742 0
 923 001a 0E4B     		ldr	r3, .L83+4
 924 001c 4B43     		mul	r3, r1
 743:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 925              		.loc 1 743 0
 926 001e 0029     		cmp	r1, #0
 927 0020 06DD     		ble	.L81
 928              		.loc 1 743 0 is_stmt 0 discriminator 1
 929 0022 A200     		lsl	r2, r4, #2
 930 0024 0C49     		ldr	r1, .L83+8
 931              	.LVL60:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 31


 932 0026 5258     		ldr	r2, [r2, r1]
 933 0028 D00F     		lsr	r0, r2, #31
 934 002a 8018     		add	r0, r0, r2
 935 002c 4010     		asr	r0, r0, #1
 936 002e 06E0     		b	.L82
 937              	.LVL61:
 938              	.L81:
 939              		.loc 1 743 0 discriminator 2
 940 0030 A200     		lsl	r2, r4, #2
 941 0032 0949     		ldr	r1, .L83+8
 942              	.LVL62:
 943 0034 5258     		ldr	r2, [r2, r1]
 944 0036 D00F     		lsr	r0, r2, #31
 945 0038 8018     		add	r0, r0, r2
 946 003a 4010     		asr	r0, r0, #1
 947 003c 4042     		neg	r0, r0
 948              	.L82:
 742:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 949              		.loc 1 742 0 is_stmt 1
 950 003e 1818     		add	r0, r3, r0
 744:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 951              		.loc 1 744 0
 952 0040 A400     		lsl	r4, r4, #2
 953              	.LVL63:
 954 0042 054B     		ldr	r3, .L83+8
 955 0044 E158     		ldr	r1, [r4, r3]
 956 0046 FFF7FEFF 		bl	__aeabi_idiv
 957              	.LVL64:
 745:.\Generated_Source\PSoC4/ADC.c **** 
 746:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 958              		.loc 1 746 0
 959 004a 00B2     		sxth	r0, r0
 960              	.LVL65:
 747:.\Generated_Source\PSoC4/ADC.c ****     }
 961              		.loc 1 747 0
 962              		@ sp needed
 963 004c 38BD     		pop	{r3, r4, r5, pc}
 964              	.L84:
 965 004e C046     		.align	2
 966              	.L83:
 967 0050 00000000 		.word	ADC_offset
 968 0054 10270000 		.word	10000
 969 0058 00000000 		.word	ADC_countsPer10Volt
 970              		.cfi_endproc
 971              	.LFE16:
 972              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 973              		.global	__aeabi_lmul
 974              		.global	__aeabi_ldivmod
 975              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 976              		.align	2
 977              		.global	ADC_CountsTo_uVolts
 978              		.code	16
 979              		.thumb_func
 980              		.type	ADC_CountsTo_uVolts, %function
 981              	ADC_CountsTo_uVolts:
 982              	.LFB17:
 748:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 32


 749:.\Generated_Source\PSoC4/ADC.c **** 
 750:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 751:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 752:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 753:.\Generated_Source\PSoC4/ADC.c ****     *
 754:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 755:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 756:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 757:.\Generated_Source\PSoC4/ADC.c ****     *
 758:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 759:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 760:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 761:.\Generated_Source\PSoC4/ADC.c ****     *
 762:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 763:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 764:.\Generated_Source\PSoC4/ADC.c ****     *
 765:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 766:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 767:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 768:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 769:.\Generated_Source\PSoC4/ADC.c ****     *
 770:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 771:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 772:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 773:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 774:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 775:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 778:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 779:.\Generated_Source\PSoC4/ADC.c ****     {
 983              		.loc 1 779 0
 984              		.cfi_startproc
 985              	.LVL66:
 986 0000 58B5     		push	{r3, r4, r6, lr}
 987              		.cfi_def_cfa_offset 16
 988              		.cfi_offset 3, -16
 989              		.cfi_offset 4, -12
 990              		.cfi_offset 6, -8
 991              		.cfi_offset 14, -4
 992 0002 061C     		mov	r6, r0
 993 0004 0C1C     		mov	r4, r1
 780:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 783:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 994              		.loc 1 783 0
 995 0006 0428     		cmp	r0, #4
 996 0008 02D9     		bls	.L86
 997              		.loc 1 783 0 is_stmt 0 discriminator 1
 998 000a 0020     		mov	r0, #0
 999              	.LVL67:
 1000 000c FFF7FEFF 		bl	CyHalt
 1001              	.LVL68:
 1002              	.L86:
 784:.\Generated_Source\PSoC4/ADC.c **** 
 785:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 33


 786:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 787:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 788:.\Generated_Source\PSoC4/ADC.c ****             {
 789:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 790:.\Generated_Source\PSoC4/ADC.c ****             }
 791:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 792:.\Generated_Source\PSoC4/ADC.c **** 
 793:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 794:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1003              		.loc 1 794 0 is_stmt 1
 1004 0010 7200     		lsl	r2, r6, #1
 1005 0012 0B4B     		ldr	r3, .L87+8
 1006 0014 D05A     		ldrh	r0, [r2, r3]
 1007 0016 201A     		sub	r0, r4, r0
 1008 0018 00B2     		sxth	r0, r0
 1009              	.LVL69:
 795:.\Generated_Source\PSoC4/ADC.c **** 
 796:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1010              		.loc 1 796 0
 1011 001a C117     		asr	r1, r0, #31
 1012 001c 074B     		ldr	r3, .L87+4
 1013 001e 064A     		ldr	r2, .L87
 1014 0020 FFF7FEFF 		bl	__aeabi_lmul
 1015              	.LVL70:
 1016 0024 B600     		lsl	r6, r6, #2
 1017              	.LVL71:
 1018 0026 074B     		ldr	r3, .L87+12
 1019 0028 F258     		ldr	r2, [r6, r3]
 1020 002a D317     		asr	r3, r2, #31
 1021 002c FFF7FEFF 		bl	__aeabi_ldivmod
 1022              	.LVL72:
 797:.\Generated_Source\PSoC4/ADC.c **** 
 798:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 799:.\Generated_Source\PSoC4/ADC.c ****     }
 1023              		.loc 1 799 0
 1024              		@ sp needed
 1025 0030 58BD     		pop	{r3, r4, r6, pc}
 1026              	.L88:
 1027 0032 C046C046 		.align	3
 1027      C046
 1028              	.L87:
 1029 0038 80969800 		.word	10000000
 1030 003c 00000000 		.word	0
 1031 0040 00000000 		.word	ADC_offset
 1032 0044 00000000 		.word	ADC_countsPer10Volt
 1033              		.cfi_endproc
 1034              	.LFE17:
 1035              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1036              		.global	__aeabi_i2f
 1037              		.global	__aeabi_fmul
 1038              		.global	__aeabi_fdiv
 1039              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1040              		.align	2
 1041              		.global	ADC_CountsTo_Volts
 1042              		.code	16
 1043              		.thumb_func
 1044              		.type	ADC_CountsTo_Volts, %function
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 34


 1045              	ADC_CountsTo_Volts:
 1046              	.LFB18:
 800:.\Generated_Source\PSoC4/ADC.c **** 
 801:.\Generated_Source\PSoC4/ADC.c **** 
 802:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 803:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 804:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 805:.\Generated_Source\PSoC4/ADC.c ****     *
 806:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 807:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 808:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 809:.\Generated_Source\PSoC4/ADC.c ****     *
 810:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 811:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 812:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 813:.\Generated_Source\PSoC4/ADC.c ****     *
 814:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 815:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 816:.\Generated_Source\PSoC4/ADC.c ****     *
 817:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 818:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 819:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 820:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 821:.\Generated_Source\PSoC4/ADC.c ****     *
 822:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 823:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 824:.\Generated_Source\PSoC4/ADC.c ****     {
 1047              		.loc 1 824 0
 1048              		.cfi_startproc
 1049              	.LVL73:
 1050 0000 38B5     		push	{r3, r4, r5, lr}
 1051              		.cfi_def_cfa_offset 16
 1052              		.cfi_offset 3, -16
 1053              		.cfi_offset 4, -12
 1054              		.cfi_offset 5, -8
 1055              		.cfi_offset 14, -4
 1056 0002 041C     		mov	r4, r0
 1057 0004 0D1C     		mov	r5, r1
 825:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 826:.\Generated_Source\PSoC4/ADC.c **** 
 827:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 828:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1058              		.loc 1 828 0
 1059 0006 0428     		cmp	r0, #4
 1060 0008 02D9     		bls	.L90
 1061              		.loc 1 828 0 is_stmt 0 discriminator 1
 1062 000a 0020     		mov	r0, #0
 1063              	.LVL74:
 1064 000c FFF7FEFF 		bl	CyHalt
 1065              	.LVL75:
 1066              	.L90:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 831:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 832:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 833:.\Generated_Source\PSoC4/ADC.c ****             {
 834:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 35


 835:.\Generated_Source\PSoC4/ADC.c ****             }
 836:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 837:.\Generated_Source\PSoC4/ADC.c **** 
 838:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 839:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1067              		.loc 1 839 0 is_stmt 1
 1068 0010 6200     		lsl	r2, r4, #1
 1069 0012 0A4B     		ldr	r3, .L91
 1070 0014 D05A     		ldrh	r0, [r2, r3]
 1071 0016 2D1A     		sub	r5, r5, r0
 1072 0018 28B2     		sxth	r0, r5
 1073              	.LVL76:
 840:.\Generated_Source\PSoC4/ADC.c **** 
 841:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1074              		.loc 1 841 0
 1075 001a FFF7FEFF 		bl	__aeabi_i2f
 1076              	.LVL77:
 1077 001e 0849     		ldr	r1, .L91+4
 1078 0020 FFF7FEFF 		bl	__aeabi_fmul
 1079              	.LVL78:
 1080 0024 051C     		add	r5, r0, #0
 1081              	.LVL79:
 1082 0026 A400     		lsl	r4, r4, #2
 1083              	.LVL80:
 1084 0028 064B     		ldr	r3, .L91+8
 1085 002a E058     		ldr	r0, [r4, r3]
 1086 002c FFF7FEFF 		bl	__aeabi_i2f
 1087              	.LVL81:
 1088 0030 011C     		add	r1, r0, #0
 1089 0032 281C     		add	r0, r5, #0
 1090 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1091              	.LVL82:
 842:.\Generated_Source\PSoC4/ADC.c **** 
 843:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 844:.\Generated_Source\PSoC4/ADC.c ****     }
 1092              		.loc 1 844 0
 1093              		@ sp needed
 1094 0038 38BD     		pop	{r3, r4, r5, pc}
 1095              	.L92:
 1096 003a C046     		.align	2
 1097              	.L91:
 1098 003c 00000000 		.word	ADC_offset
 1099 0040 00002041 		.word	1092616192
 1100 0044 00000000 		.word	ADC_countsPer10Volt
 1101              		.cfi_endproc
 1102              	.LFE18:
 1103              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1104              		.comm	ADC_countsPer10Volt,20,4
 1105              		.comm	ADC_offset,10,4
 1106              		.global	ADC_initVar
 1107              		.section	.rodata
 1108              		.align	2
 1109              		.set	.LANCHOR0,. + 0
 1110              		.type	ADC_channelsConfig, %object
 1111              		.size	ADC_channelsConfig, 20
 1112              	ADC_channelsConfig:
 1113 0000 00040000 		.word	1024
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 36


 1114 0004 00050000 		.word	1280
 1115 0008 00140000 		.word	5120
 1116 000c 00140000 		.word	5120
 1117 0010 00000000 		.word	0
 1118              		.type	ADC_InputsPlacement.4745, %object
 1119              		.size	ADC_InputsPlacement.4745, 5
 1120              	ADC_InputsPlacement.4745:
 1121 0014 01       		.byte	1
 1122 0015 06       		.byte	6
 1123 0016 12       		.byte	18
 1124 0017 13       		.byte	19
 1125 0018 70       		.byte	112
 1126 0019 000000   		.bss
 1127              		.set	.LANCHOR1,. + 0
 1128              		.type	ADC_initVar, %object
 1129              		.size	ADC_initVar, 1
 1130              	ADC_initVar:
 1131 0000 00       		.space	1
 1132              		.text
 1133              	.Letext0:
 1134              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1135              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1136              		.section	.debug_info,"",%progbits
 1137              	.Ldebug_info0:
 1138 0000 C8050000 		.4byte	0x5c8
 1139 0004 0400     		.2byte	0x4
 1140 0006 00000000 		.4byte	.Ldebug_abbrev0
 1141 000a 04       		.byte	0x4
 1142 000b 01       		.uleb128 0x1
 1143 000c 3E000000 		.4byte	.LASF63
 1144 0010 01       		.byte	0x1
 1145 0011 FB020000 		.4byte	.LASF64
 1146 0015 04010000 		.4byte	.LASF65
 1147 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1148 001d 00000000 		.4byte	0
 1149 0021 00000000 		.4byte	.Ldebug_line0
 1150 0025 02       		.uleb128 0x2
 1151 0026 01       		.byte	0x1
 1152 0027 06       		.byte	0x6
 1153 0028 29000000 		.4byte	.LASF0
 1154 002c 02       		.uleb128 0x2
 1155 002d 01       		.byte	0x1
 1156 002e 08       		.byte	0x8
 1157 002f 1A030000 		.4byte	.LASF1
 1158 0033 02       		.uleb128 0x2
 1159 0034 02       		.byte	0x2
 1160 0035 05       		.byte	0x5
 1161 0036 33030000 		.4byte	.LASF2
 1162 003a 02       		.uleb128 0x2
 1163 003b 02       		.byte	0x2
 1164 003c 07       		.byte	0x7
 1165 003d FB010000 		.4byte	.LASF3
 1166 0041 02       		.uleb128 0x2
 1167 0042 04       		.byte	0x4
 1168 0043 05       		.byte	0x5
 1169 0044 3D010000 		.4byte	.LASF4
 1170 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 37


 1171 0049 04       		.byte	0x4
 1172 004a 07       		.byte	0x7
 1173 004b CA010000 		.4byte	.LASF5
 1174 004f 02       		.uleb128 0x2
 1175 0050 08       		.byte	0x8
 1176 0051 05       		.byte	0x5
 1177 0052 F6000000 		.4byte	.LASF6
 1178 0056 02       		.uleb128 0x2
 1179 0057 08       		.byte	0x8
 1180 0058 07       		.byte	0x7
 1181 0059 BA000000 		.4byte	.LASF7
 1182 005d 03       		.uleb128 0x3
 1183 005e 04       		.byte	0x4
 1184 005f 05       		.byte	0x5
 1185 0060 696E7400 		.ascii	"int\000"
 1186 0064 02       		.uleb128 0x2
 1187 0065 04       		.byte	0x4
 1188 0066 07       		.byte	0x7
 1189 0067 B6010000 		.4byte	.LASF8
 1190 006b 04       		.uleb128 0x4
 1191 006c 6E010000 		.4byte	.LASF9
 1192 0070 02       		.byte	0x2
 1193 0071 B3       		.byte	0xb3
 1194 0072 2C000000 		.4byte	0x2c
 1195 0076 04       		.uleb128 0x4
 1196 0077 00000000 		.4byte	.LASF10
 1197 007b 02       		.byte	0x2
 1198 007c B4       		.byte	0xb4
 1199 007d 3A000000 		.4byte	0x3a
 1200 0081 04       		.uleb128 0x4
 1201 0082 85010000 		.4byte	.LASF11
 1202 0086 02       		.byte	0x2
 1203 0087 B5       		.byte	0xb5
 1204 0088 48000000 		.4byte	0x48
 1205 008c 04       		.uleb128 0x4
 1206 008d 92030000 		.4byte	.LASF12
 1207 0091 02       		.byte	0x2
 1208 0092 B7       		.byte	0xb7
 1209 0093 33000000 		.4byte	0x33
 1210 0097 04       		.uleb128 0x4
 1211 0098 2D010000 		.4byte	.LASF13
 1212 009c 02       		.byte	0x2
 1213 009d B8       		.byte	0xb8
 1214 009e 41000000 		.4byte	0x41
 1215 00a2 04       		.uleb128 0x4
 1216 00a3 3A020000 		.4byte	.LASF14
 1217 00a7 02       		.byte	0x2
 1218 00a8 B9       		.byte	0xb9
 1219 00a9 AD000000 		.4byte	0xad
 1220 00ad 02       		.uleb128 0x2
 1221 00ae 04       		.byte	0x4
 1222 00af 04       		.byte	0x4
 1223 00b0 C0020000 		.4byte	.LASF15
 1224 00b4 02       		.uleb128 0x2
 1225 00b5 08       		.byte	0x8
 1226 00b6 04       		.byte	0x4
 1227 00b7 7E010000 		.4byte	.LASF16
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 38


 1228 00bb 04       		.uleb128 0x4
 1229 00bc 8D020000 		.4byte	.LASF17
 1230 00c0 02       		.byte	0x2
 1231 00c1 BE       		.byte	0xbe
 1232 00c2 4F000000 		.4byte	0x4f
 1233 00c6 02       		.uleb128 0x2
 1234 00c7 01       		.byte	0x1
 1235 00c8 08       		.byte	0x8
 1236 00c9 51030000 		.4byte	.LASF18
 1237 00cd 05       		.uleb128 0x5
 1238 00ce 34020000 		.4byte	.LASF19
 1239 00d2 02       		.byte	0x2
 1240 00d3 5F01     		.2byte	0x15f
 1241 00d5 D9000000 		.4byte	0xd9
 1242 00d9 06       		.uleb128 0x6
 1243 00da 81000000 		.4byte	0x81
 1244 00de 05       		.uleb128 0x5
 1245 00df 56030000 		.4byte	.LASF20
 1246 00e3 02       		.byte	0x2
 1247 00e4 6F01     		.2byte	0x16f
 1248 00e6 EA000000 		.4byte	0xea
 1249 00ea 07       		.uleb128 0x7
 1250 00eb 04       		.byte	0x4
 1251 00ec F0000000 		.4byte	0xf0
 1252 00f0 08       		.uleb128 0x8
 1253 00f1 02       		.uleb128 0x2
 1254 00f2 04       		.byte	0x4
 1255 00f3 07       		.byte	0x7
 1256 00f4 42020000 		.4byte	.LASF21
 1257 00f8 09       		.uleb128 0x9
 1258 00f9 35000000 		.4byte	.LASF26
 1259 00fd 01       		.byte	0x1
 1260 00fe 5E       		.byte	0x5e
 1261 00ff 00000000 		.4byte	.LFB1
 1262 0103 AC010000 		.4byte	.LFE1-.LFB1
 1263 0107 01       		.uleb128 0x1
 1264 0108 9C       		.byte	0x9c
 1265 0109 73010000 		.4byte	0x173
 1266 010d 0A       		.uleb128 0xa
 1267 010e 46030000 		.4byte	.LASF22
 1268 0112 01       		.byte	0x1
 1269 0113 60       		.byte	0x60
 1270 0114 81000000 		.4byte	0x81
 1271 0118 00000000 		.4byte	.LLST0
 1272 011c 0A       		.uleb128 0xa
 1273 011d F1010000 		.4byte	.LASF23
 1274 0121 01       		.byte	0x1
 1275 0122 61       		.byte	0x61
 1276 0123 81000000 		.4byte	0x81
 1277 0127 1F000000 		.4byte	.LLST1
 1278 012b 0A       		.uleb128 0xa
 1279 012c 0F000000 		.4byte	.LASF24
 1280 0130 01       		.byte	0x1
 1281 0131 62       		.byte	0x62
 1282 0132 97000000 		.4byte	0x97
 1283 0136 D2000000 		.4byte	.LLST2
 1284 013a 0B       		.uleb128 0xb
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 39


 1285 013b D1000000 		.4byte	.LASF25
 1286 013f 01       		.byte	0x1
 1287 0140 65       		.byte	0x65
 1288 0141 83010000 		.4byte	0x183
 1289 0145 05       		.uleb128 0x5
 1290 0146 03       		.byte	0x3
 1291 0147 14000000 		.4byte	ADC_InputsPlacement.4745
 1292 014b 0C       		.uleb128 0xc
 1293 014c 0A000000 		.4byte	.LVL0
 1294 0150 7D050000 		.4byte	0x57d
 1295 0154 63010000 		.4byte	0x163
 1296 0158 0D       		.uleb128 0xd
 1297 0159 01       		.uleb128 0x1
 1298 015a 51       		.byte	0x51
 1299 015b 01       		.uleb128 0x1
 1300 015c 33       		.byte	0x33
 1301 015d 0D       		.uleb128 0xd
 1302 015e 01       		.uleb128 0x1
 1303 015f 50       		.byte	0x50
 1304 0160 01       		.uleb128 0x1
 1305 0161 3E       		.byte	0x3e
 1306 0162 00       		.byte	0
 1307 0163 0E       		.uleb128 0xe
 1308 0164 12000000 		.4byte	.LVL1
 1309 0168 93050000 		.4byte	0x593
 1310 016c 0D       		.uleb128 0xd
 1311 016d 01       		.uleb128 0x1
 1312 016e 50       		.byte	0x50
 1313 016f 01       		.uleb128 0x1
 1314 0170 3E       		.byte	0x3e
 1315 0171 00       		.byte	0
 1316 0172 00       		.byte	0
 1317 0173 0F       		.uleb128 0xf
 1318 0174 6B000000 		.4byte	0x6b
 1319 0178 83010000 		.4byte	0x183
 1320 017c 10       		.uleb128 0x10
 1321 017d F1000000 		.4byte	0xf1
 1322 0181 04       		.byte	0x4
 1323 0182 00       		.byte	0
 1324 0183 11       		.uleb128 0x11
 1325 0184 73010000 		.4byte	0x173
 1326 0188 12       		.uleb128 0x12
 1327 0189 87030000 		.4byte	.LASF27
 1328 018d 01       		.byte	0x1
 1329 018e 2A01     		.2byte	0x12a
 1330 0190 00000000 		.4byte	.LFB2
 1331 0194 24000000 		.4byte	.LFE2-.LFB2
 1332 0198 01       		.uleb128 0x1
 1333 0199 9C       		.byte	0x9c
 1334 019a AE010000 		.4byte	0x1ae
 1335 019e 0E       		.uleb128 0xe
 1336 019f 1C000000 		.4byte	.LVL18
 1337 01a3 AD050000 		.4byte	0x5ad
 1338 01a7 0D       		.uleb128 0xd
 1339 01a8 01       		.uleb128 0x1
 1340 01a9 50       		.byte	0x50
 1341 01aa 01       		.uleb128 0x1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 40


 1342 01ab 3A       		.byte	0x3a
 1343 01ac 00       		.byte	0
 1344 01ad 00       		.byte	0
 1345 01ae 09       		.uleb128 0x9
 1346 01af 33010000 		.4byte	.LASF28
 1347 01b3 01       		.byte	0x1
 1348 01b4 3F       		.byte	0x3f
 1349 01b5 00000000 		.4byte	.LFB0
 1350 01b9 20000000 		.4byte	.LFE0-.LFB0
 1351 01bd 01       		.uleb128 0x1
 1352 01be 9C       		.byte	0x9c
 1353 01bf D6010000 		.4byte	0x1d6
 1354 01c3 13       		.uleb128 0x13
 1355 01c4 0E000000 		.4byte	.LVL19
 1356 01c8 F8000000 		.4byte	0xf8
 1357 01cc 13       		.uleb128 0x13
 1358 01cd 18000000 		.4byte	.LVL20
 1359 01d1 88010000 		.4byte	0x188
 1360 01d5 00       		.byte	0
 1361 01d6 14       		.uleb128 0x14
 1362 01d7 3D030000 		.4byte	.LASF29
 1363 01db 01       		.byte	0x1
 1364 01dc 4D01     		.2byte	0x14d
 1365 01de 00000000 		.4byte	.LFB3
 1366 01e2 10000000 		.4byte	.LFE3-.LFB3
 1367 01e6 01       		.uleb128 0x1
 1368 01e7 9C       		.byte	0x9c
 1369 01e8 14       		.uleb128 0x14
 1370 01e9 E5000000 		.4byte	.LASF30
 1371 01ed 01       		.byte	0x1
 1372 01ee 6701     		.2byte	0x167
 1373 01f0 00000000 		.4byte	.LFB4
 1374 01f4 14000000 		.4byte	.LFE4-.LFB4
 1375 01f8 01       		.uleb128 0x1
 1376 01f9 9C       		.byte	0x9c
 1377 01fa 14       		.uleb128 0x14
 1378 01fb 1D020000 		.4byte	.LASF31
 1379 01ff 01       		.byte	0x1
 1380 0200 8001     		.2byte	0x180
 1381 0202 00000000 		.4byte	.LFB5
 1382 0206 14000000 		.4byte	.LFE5-.LFB5
 1383 020a 01       		.uleb128 0x1
 1384 020b 9C       		.byte	0x9c
 1385 020c 15       		.uleb128 0x15
 1386 020d 79020000 		.4byte	.LASF33
 1387 0211 01       		.byte	0x1
 1388 0212 A201     		.2byte	0x1a2
 1389 0214 81000000 		.4byte	0x81
 1390 0218 00000000 		.4byte	.LFB6
 1391 021c 58000000 		.4byte	.LFE6-.LFB6
 1392 0220 01       		.uleb128 0x1
 1393 0221 9C       		.byte	0x9c
 1394 0222 47020000 		.4byte	0x247
 1395 0226 16       		.uleb128 0x16
 1396 0227 9D010000 		.4byte	.LASF35
 1397 022b 01       		.byte	0x1
 1398 022c A201     		.2byte	0x1a2
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 41


 1399 022e 81000000 		.4byte	0x81
 1400 0232 E5000000 		.4byte	.LLST3
 1401 0236 17       		.uleb128 0x17
 1402 0237 26010000 		.4byte	.LASF32
 1403 023b 01       		.byte	0x1
 1404 023c A401     		.2byte	0x1a4
 1405 023e 81000000 		.4byte	0x81
 1406 0242 06010000 		.4byte	.LLST4
 1407 0246 00       		.byte	0
 1408 0247 15       		.uleb128 0x15
 1409 0248 AD030000 		.4byte	.LASF34
 1410 024c 01       		.byte	0x1
 1411 024d D801     		.2byte	0x1d8
 1412 024f 8C000000 		.4byte	0x8c
 1413 0253 00000000 		.4byte	.LFB7
 1414 0257 34000000 		.4byte	.LFE7-.LFB7
 1415 025b 01       		.uleb128 0x1
 1416 025c 9C       		.byte	0x9c
 1417 025d 91020000 		.4byte	0x291
 1418 0261 16       		.uleb128 0x16
 1419 0262 4C030000 		.4byte	.LASF36
 1420 0266 01       		.byte	0x1
 1421 0267 D801     		.2byte	0x1d8
 1422 0269 81000000 		.4byte	0x81
 1423 026d 3C010000 		.4byte	.LLST5
 1424 0271 17       		.uleb128 0x17
 1425 0272 A6030000 		.4byte	.LASF37
 1426 0276 01       		.byte	0x1
 1427 0277 DA01     		.2byte	0x1da
 1428 0279 81000000 		.4byte	0x81
 1429 027d 81010000 		.4byte	.LLST6
 1430 0281 0E       		.uleb128 0xe
 1431 0282 0E000000 		.4byte	.LVL31
 1432 0286 BE050000 		.4byte	0x5be
 1433 028a 0D       		.uleb128 0xd
 1434 028b 01       		.uleb128 0x1
 1435 028c 50       		.byte	0x50
 1436 028d 01       		.uleb128 0x1
 1437 028e 30       		.byte	0x30
 1438 028f 00       		.byte	0
 1439 0290 00       		.byte	0
 1440 0291 12       		.uleb128 0x12
 1441 0292 A4020000 		.4byte	.LASF38
 1442 0296 01       		.byte	0x1
 1443 0297 0502     		.2byte	0x205
 1444 0299 00000000 		.4byte	.LFB8
 1445 029d 10000000 		.4byte	.LFE8-.LFB8
 1446 02a1 01       		.uleb128 0x1
 1447 02a2 9C       		.byte	0x9c
 1448 02a3 B8020000 		.4byte	0x2b8
 1449 02a7 16       		.uleb128 0x16
 1450 02a8 8C010000 		.4byte	.LASF39
 1451 02ac 01       		.byte	0x1
 1452 02ad 0502     		.2byte	0x205
 1453 02af 81000000 		.4byte	0x81
 1454 02b3 9F010000 		.4byte	.LLST7
 1455 02b7 00       		.byte	0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 42


 1456 02b8 14       		.uleb128 0x14
 1457 02b9 65020000 		.4byte	.LASF40
 1458 02bd 01       		.byte	0x1
 1459 02be 1B02     		.2byte	0x21b
 1460 02c0 00000000 		.4byte	.LFB9
 1461 02c4 14000000 		.4byte	.LFE9-.LFB9
 1462 02c8 01       		.uleb128 0x1
 1463 02c9 9C       		.byte	0x9c
 1464 02ca 12       		.uleb128 0x12
 1465 02cb E4020000 		.4byte	.LASF41
 1466 02cf 01       		.byte	0x1
 1467 02d0 3102     		.2byte	0x231
 1468 02d2 00000000 		.4byte	.LFB10
 1469 02d6 1C000000 		.4byte	.LFE10-.LFB10
 1470 02da 01       		.uleb128 0x1
 1471 02db 9C       		.byte	0x9c
 1472 02dc F1020000 		.4byte	0x2f1
 1473 02e0 16       		.uleb128 0x16
 1474 02e1 4B020000 		.4byte	.LASF42
 1475 02e5 01       		.byte	0x1
 1476 02e6 3102     		.2byte	0x231
 1477 02e8 81000000 		.4byte	0x81
 1478 02ec C0010000 		.4byte	.LLST8
 1479 02f0 00       		.byte	0
 1480 02f1 12       		.uleb128 0x12
 1481 02f2 54020000 		.4byte	.LASF43
 1482 02f6 01       		.byte	0x1
 1483 02f7 4602     		.2byte	0x246
 1484 02f9 00000000 		.4byte	.LFB11
 1485 02fd 18000000 		.4byte	.LFE11-.LFB11
 1486 0301 01       		.uleb128 0x1
 1487 0302 9C       		.byte	0x9c
 1488 0303 18030000 		.4byte	0x318
 1489 0307 16       		.uleb128 0x16
 1490 0308 C6020000 		.4byte	.LASF44
 1491 030c 01       		.byte	0x1
 1492 030d 4602     		.2byte	0x246
 1493 030f 81000000 		.4byte	0x81
 1494 0313 E1010000 		.4byte	.LLST9
 1495 0317 00       		.byte	0
 1496 0318 12       		.uleb128 0x12
 1497 0319 A5010000 		.4byte	.LASF45
 1498 031d 01       		.byte	0x1
 1499 031e 5E02     		.2byte	0x25e
 1500 0320 00000000 		.4byte	.LFB12
 1501 0324 10000000 		.4byte	.LFE12-.LFB12
 1502 0328 01       		.uleb128 0x1
 1503 0329 9C       		.byte	0x9c
 1504 032a 3F030000 		.4byte	0x33f
 1505 032e 16       		.uleb128 0x16
 1506 032f 8C010000 		.4byte	.LASF39
 1507 0333 01       		.byte	0x1
 1508 0334 5E02     		.2byte	0x25e
 1509 0336 81000000 		.4byte	0x81
 1510 033a 02020000 		.4byte	.LLST10
 1511 033e 00       		.byte	0
 1512 033f 12       		.uleb128 0x12
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 43


 1513 0340 DC010000 		.4byte	.LASF46
 1514 0344 01       		.byte	0x1
 1515 0345 7502     		.2byte	0x275
 1516 0347 00000000 		.4byte	.LFB13
 1517 034b 10000000 		.4byte	.LFE13-.LFB13
 1518 034f 01       		.uleb128 0x1
 1519 0350 9C       		.byte	0x9c
 1520 0351 66030000 		.4byte	0x366
 1521 0355 16       		.uleb128 0x16
 1522 0356 8C010000 		.4byte	.LASF39
 1523 035a 01       		.byte	0x1
 1524 035b 7502     		.2byte	0x275
 1525 035d 81000000 		.4byte	0x81
 1526 0361 23020000 		.4byte	.LLST11
 1527 0365 00       		.byte	0
 1528 0366 12       		.uleb128 0x12
 1529 0367 98030000 		.4byte	.LASF47
 1530 036b 01       		.byte	0x1
 1531 036c 9102     		.2byte	0x291
 1532 036e 00000000 		.4byte	.LFB14
 1533 0372 1C000000 		.4byte	.LFE14-.LFB14
 1534 0376 01       		.uleb128 0x1
 1535 0377 9C       		.byte	0x9c
 1536 0378 AC030000 		.4byte	0x3ac
 1537 037c 16       		.uleb128 0x16
 1538 037d 4C030000 		.4byte	.LASF36
 1539 0381 01       		.byte	0x1
 1540 0382 9102     		.2byte	0x291
 1541 0384 81000000 		.4byte	0x81
 1542 0388 44020000 		.4byte	.LLST12
 1543 038c 16       		.uleb128 0x16
 1544 038d 76030000 		.4byte	.LASF48
 1545 0391 01       		.byte	0x1
 1546 0392 9102     		.2byte	0x291
 1547 0394 8C000000 		.4byte	0x8c
 1548 0398 70020000 		.4byte	.LLST13
 1549 039c 0E       		.uleb128 0xe
 1550 039d 10000000 		.4byte	.LVL49
 1551 03a1 BE050000 		.4byte	0x5be
 1552 03a5 0D       		.uleb128 0xd
 1553 03a6 01       		.uleb128 0x1
 1554 03a7 50       		.byte	0x50
 1555 03a8 01       		.uleb128 0x1
 1556 03a9 30       		.byte	0x30
 1557 03aa 00       		.byte	0
 1558 03ab 00       		.byte	0
 1559 03ac 12       		.uleb128 0x12
 1560 03ad B4020000 		.4byte	.LASF49
 1561 03b1 01       		.byte	0x1
 1562 03b2 B302     		.2byte	0x2b3
 1563 03b4 00000000 		.4byte	.LFB15
 1564 03b8 1C000000 		.4byte	.LFE15-.LFB15
 1565 03bc 01       		.uleb128 0x1
 1566 03bd 9C       		.byte	0x9c
 1567 03be F2030000 		.4byte	0x3f2
 1568 03c2 16       		.uleb128 0x16
 1569 03c3 4C030000 		.4byte	.LASF36
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 44


 1570 03c7 01       		.byte	0x1
 1571 03c8 B302     		.2byte	0x2b3
 1572 03ca 81000000 		.4byte	0x81
 1573 03ce 91020000 		.4byte	.LLST14
 1574 03d2 16       		.uleb128 0x16
 1575 03d3 07000000 		.4byte	.LASF50
 1576 03d7 01       		.byte	0x1
 1577 03d8 B302     		.2byte	0x2b3
 1578 03da 97000000 		.4byte	0x97
 1579 03de BD020000 		.4byte	.LLST15
 1580 03e2 0E       		.uleb128 0xe
 1581 03e3 10000000 		.4byte	.LVL53
 1582 03e7 BE050000 		.4byte	0x5be
 1583 03eb 0D       		.uleb128 0xd
 1584 03ec 01       		.uleb128 0x1
 1585 03ed 50       		.byte	0x50
 1586 03ee 01       		.uleb128 0x1
 1587 03ef 30       		.byte	0x30
 1588 03f0 00       		.byte	0
 1589 03f1 00       		.byte	0
 1590 03f2 18       		.uleb128 0x18
 1591 03f3 D0020000 		.4byte	.LASF51
 1592 03f7 01       		.byte	0x1
 1593 03f8 D402     		.2byte	0x2d4
 1594 03fa 8C000000 		.4byte	0x8c
 1595 03fe 00000000 		.4byte	.LFB16
 1596 0402 5C000000 		.4byte	.LFE16-.LFB16
 1597 0406 01       		.uleb128 0x1
 1598 0407 9C       		.byte	0x9c
 1599 0408 4C040000 		.4byte	0x44c
 1600 040c 16       		.uleb128 0x16
 1601 040d 4C030000 		.4byte	.LASF36
 1602 0411 01       		.byte	0x1
 1603 0412 D402     		.2byte	0x2d4
 1604 0414 81000000 		.4byte	0x81
 1605 0418 ED020000 		.4byte	.LLST16
 1606 041c 16       		.uleb128 0x16
 1607 041d 7D030000 		.4byte	.LASF52
 1608 0421 01       		.byte	0x1
 1609 0422 D402     		.2byte	0x2d4
 1610 0424 8C000000 		.4byte	0x8c
 1611 0428 19030000 		.4byte	.LLST17
 1612 042c 17       		.uleb128 0x17
 1613 042d 2D020000 		.4byte	.LASF53
 1614 0431 01       		.byte	0x1
 1615 0432 D602     		.2byte	0x2d6
 1616 0434 8C000000 		.4byte	0x8c
 1617 0438 50030000 		.4byte	.LLST18
 1618 043c 0E       		.uleb128 0xe
 1619 043d 10000000 		.4byte	.LVL58
 1620 0441 BE050000 		.4byte	0x5be
 1621 0445 0D       		.uleb128 0xd
 1622 0446 01       		.uleb128 0x1
 1623 0447 50       		.byte	0x50
 1624 0448 01       		.uleb128 0x1
 1625 0449 30       		.byte	0x30
 1626 044a 00       		.byte	0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 45


 1627 044b 00       		.byte	0
 1628 044c 18       		.uleb128 0x18
 1629 044d 46010000 		.4byte	.LASF54
 1630 0451 01       		.byte	0x1
 1631 0452 0A03     		.2byte	0x30a
 1632 0454 97000000 		.4byte	0x97
 1633 0458 00000000 		.4byte	.LFB17
 1634 045c 48000000 		.4byte	.LFE17-.LFB17
 1635 0460 01       		.uleb128 0x1
 1636 0461 9C       		.byte	0x9c
 1637 0462 A2040000 		.4byte	0x4a2
 1638 0466 16       		.uleb128 0x16
 1639 0467 4C030000 		.4byte	.LASF36
 1640 046b 01       		.byte	0x1
 1641 046c 0A03     		.2byte	0x30a
 1642 046e 81000000 		.4byte	0x81
 1643 0472 63030000 		.4byte	.LLST19
 1644 0476 16       		.uleb128 0x16
 1645 0477 7D030000 		.4byte	.LASF52
 1646 047b 01       		.byte	0x1
 1647 047c 0A03     		.2byte	0x30a
 1648 047e 8C000000 		.4byte	0x8c
 1649 0482 8F030000 		.4byte	.LLST20
 1650 0486 19       		.uleb128 0x19
 1651 0487 C3010000 		.4byte	.LASF66
 1652 048b 01       		.byte	0x1
 1653 048c 0C03     		.2byte	0x30c
 1654 048e BB000000 		.4byte	0xbb
 1655 0492 0E       		.uleb128 0xe
 1656 0493 10000000 		.4byte	.LVL68
 1657 0497 BE050000 		.4byte	0x5be
 1658 049b 0D       		.uleb128 0xd
 1659 049c 01       		.uleb128 0x1
 1660 049d 50       		.byte	0x50
 1661 049e 01       		.uleb128 0x1
 1662 049f 30       		.byte	0x30
 1663 04a0 00       		.byte	0
 1664 04a1 00       		.byte	0
 1665 04a2 18       		.uleb128 0x18
 1666 04a3 16000000 		.4byte	.LASF55
 1667 04a7 01       		.byte	0x1
 1668 04a8 3703     		.2byte	0x337
 1669 04aa A2000000 		.4byte	0xa2
 1670 04ae 00000000 		.4byte	.LFB18
 1671 04b2 48000000 		.4byte	.LFE18-.LFB18
 1672 04b6 01       		.uleb128 0x1
 1673 04b7 9C       		.byte	0x9c
 1674 04b8 FA040000 		.4byte	0x4fa
 1675 04bc 16       		.uleb128 0x16
 1676 04bd 4C030000 		.4byte	.LASF36
 1677 04c1 01       		.byte	0x1
 1678 04c2 3703     		.2byte	0x337
 1679 04c4 81000000 		.4byte	0x81
 1680 04c8 BB030000 		.4byte	.LLST21
 1681 04cc 16       		.uleb128 0x16
 1682 04cd 7D030000 		.4byte	.LASF52
 1683 04d1 01       		.byte	0x1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 46


 1684 04d2 3703     		.2byte	0x337
 1685 04d4 8C000000 		.4byte	0x8c
 1686 04d8 E7030000 		.4byte	.LLST22
 1687 04dc 1A       		.uleb128 0x1a
 1688 04dd EB010000 		.4byte	.LASF56
 1689 04e1 01       		.byte	0x1
 1690 04e2 3903     		.2byte	0x339
 1691 04e4 A2000000 		.4byte	0xa2
 1692 04e8 01       		.uleb128 0x1
 1693 04e9 50       		.byte	0x50
 1694 04ea 0E       		.uleb128 0xe
 1695 04eb 10000000 		.4byte	.LVL75
 1696 04ef BE050000 		.4byte	0x5be
 1697 04f3 0D       		.uleb128 0xd
 1698 04f4 01       		.uleb128 0x1
 1699 04f5 50       		.byte	0x50
 1700 04f6 01       		.uleb128 0x1
 1701 04f7 30       		.byte	0x30
 1702 04f8 00       		.byte	0
 1703 04f9 00       		.byte	0
 1704 04fa 0F       		.uleb128 0xf
 1705 04fb 81000000 		.4byte	0x81
 1706 04ff 0A050000 		.4byte	0x50a
 1707 0503 10       		.uleb128 0x10
 1708 0504 F1000000 		.4byte	0xf1
 1709 0508 04       		.byte	0x4
 1710 0509 00       		.byte	0
 1711 050a 0B       		.uleb128 0xb
 1712 050b 63030000 		.4byte	.LASF57
 1713 050f 01       		.byte	0x1
 1714 0510 21       		.byte	0x21
 1715 0511 1B050000 		.4byte	0x51b
 1716 0515 05       		.uleb128 0x5
 1717 0516 03       		.byte	0x3
 1718 0517 00000000 		.4byte	ADC_channelsConfig
 1719 051b 11       		.uleb128 0x11
 1720 051c FA040000 		.4byte	0x4fa
 1721 0520 1B       		.uleb128 0x1b
 1722 0521 91010000 		.4byte	.LASF58
 1723 0525 01       		.byte	0x1
 1724 0526 18       		.byte	0x18
 1725 0527 6B000000 		.4byte	0x6b
 1726 052b 05       		.uleb128 0x5
 1727 052c 03       		.byte	0x3
 1728 052d 00000000 		.4byte	ADC_initVar
 1729 0531 0F       		.uleb128 0xf
 1730 0532 8C000000 		.4byte	0x8c
 1731 0536 41050000 		.4byte	0x541
 1732 053a 10       		.uleb128 0x10
 1733 053b F1000000 		.4byte	0xf1
 1734 053f 04       		.byte	0x4
 1735 0540 00       		.byte	0
 1736 0541 1B       		.uleb128 0x1b
 1737 0542 28030000 		.4byte	.LASF59
 1738 0546 01       		.byte	0x1
 1739 0547 19       		.byte	0x19
 1740 0548 52050000 		.4byte	0x552
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 47


 1741 054c 05       		.uleb128 0x5
 1742 054d 03       		.byte	0x3
 1743 054e 00000000 		.4byte	ADC_offset
 1744 0552 06       		.uleb128 0x6
 1745 0553 31050000 		.4byte	0x531
 1746 0557 0F       		.uleb128 0xf
 1747 0558 97000000 		.4byte	0x97
 1748 055c 67050000 		.4byte	0x567
 1749 0560 10       		.uleb128 0x10
 1750 0561 F1000000 		.4byte	0xf1
 1751 0565 04       		.byte	0x4
 1752 0566 00       		.byte	0
 1753 0567 1B       		.uleb128 0x1b
 1754 0568 5A010000 		.4byte	.LASF60
 1755 056c 01       		.byte	0x1
 1756 056d 1A       		.byte	0x1a
 1757 056e 78050000 		.4byte	0x578
 1758 0572 05       		.uleb128 0x5
 1759 0573 03       		.byte	0x3
 1760 0574 00000000 		.4byte	ADC_countsPer10Volt
 1761 0578 06       		.uleb128 0x6
 1762 0579 57050000 		.4byte	0x557
 1763 057d 1C       		.uleb128 0x1c
 1764 057e 93020000 		.4byte	.LASF61
 1765 0582 03       		.byte	0x3
 1766 0583 49       		.byte	0x49
 1767 0584 93050000 		.4byte	0x593
 1768 0588 1D       		.uleb128 0x1d
 1769 0589 6B000000 		.4byte	0x6b
 1770 058d 1D       		.uleb128 0x1d
 1771 058e 6B000000 		.4byte	0x6b
 1772 0592 00       		.byte	0
 1773 0593 1E       		.uleb128 0x1e
 1774 0594 0E020000 		.4byte	.LASF67
 1775 0598 03       		.byte	0x3
 1776 0599 46       		.byte	0x46
 1777 059a DE000000 		.4byte	0xde
 1778 059e AD050000 		.4byte	0x5ad
 1779 05a2 1D       		.uleb128 0x1d
 1780 05a3 6B000000 		.4byte	0x6b
 1781 05a7 1D       		.uleb128 0x1d
 1782 05a8 DE000000 		.4byte	0xde
 1783 05ac 00       		.byte	0
 1784 05ad 1C       		.uleb128 0x1c
 1785 05ae 74010000 		.4byte	.LASF62
 1786 05b2 03       		.byte	0x3
 1787 05b3 58       		.byte	0x58
 1788 05b4 BE050000 		.4byte	0x5be
 1789 05b8 1D       		.uleb128 0x1d
 1790 05b9 76000000 		.4byte	0x76
 1791 05bd 00       		.byte	0
 1792 05be 1F       		.uleb128 0x1f
 1793 05bf F4020000 		.4byte	.LASF68
 1794 05c3 03       		.byte	0x3
 1795 05c4 60       		.byte	0x60
 1796 05c5 1D       		.uleb128 0x1d
 1797 05c6 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 48


 1798 05ca 00       		.byte	0
 1799 05cb 00       		.byte	0
 1800              		.section	.debug_abbrev,"",%progbits
 1801              	.Ldebug_abbrev0:
 1802 0000 01       		.uleb128 0x1
 1803 0001 11       		.uleb128 0x11
 1804 0002 01       		.byte	0x1
 1805 0003 25       		.uleb128 0x25
 1806 0004 0E       		.uleb128 0xe
 1807 0005 13       		.uleb128 0x13
 1808 0006 0B       		.uleb128 0xb
 1809 0007 03       		.uleb128 0x3
 1810 0008 0E       		.uleb128 0xe
 1811 0009 1B       		.uleb128 0x1b
 1812 000a 0E       		.uleb128 0xe
 1813 000b 55       		.uleb128 0x55
 1814 000c 17       		.uleb128 0x17
 1815 000d 11       		.uleb128 0x11
 1816 000e 01       		.uleb128 0x1
 1817 000f 10       		.uleb128 0x10
 1818 0010 17       		.uleb128 0x17
 1819 0011 00       		.byte	0
 1820 0012 00       		.byte	0
 1821 0013 02       		.uleb128 0x2
 1822 0014 24       		.uleb128 0x24
 1823 0015 00       		.byte	0
 1824 0016 0B       		.uleb128 0xb
 1825 0017 0B       		.uleb128 0xb
 1826 0018 3E       		.uleb128 0x3e
 1827 0019 0B       		.uleb128 0xb
 1828 001a 03       		.uleb128 0x3
 1829 001b 0E       		.uleb128 0xe
 1830 001c 00       		.byte	0
 1831 001d 00       		.byte	0
 1832 001e 03       		.uleb128 0x3
 1833 001f 24       		.uleb128 0x24
 1834 0020 00       		.byte	0
 1835 0021 0B       		.uleb128 0xb
 1836 0022 0B       		.uleb128 0xb
 1837 0023 3E       		.uleb128 0x3e
 1838 0024 0B       		.uleb128 0xb
 1839 0025 03       		.uleb128 0x3
 1840 0026 08       		.uleb128 0x8
 1841 0027 00       		.byte	0
 1842 0028 00       		.byte	0
 1843 0029 04       		.uleb128 0x4
 1844 002a 16       		.uleb128 0x16
 1845 002b 00       		.byte	0
 1846 002c 03       		.uleb128 0x3
 1847 002d 0E       		.uleb128 0xe
 1848 002e 3A       		.uleb128 0x3a
 1849 002f 0B       		.uleb128 0xb
 1850 0030 3B       		.uleb128 0x3b
 1851 0031 0B       		.uleb128 0xb
 1852 0032 49       		.uleb128 0x49
 1853 0033 13       		.uleb128 0x13
 1854 0034 00       		.byte	0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 49


 1855 0035 00       		.byte	0
 1856 0036 05       		.uleb128 0x5
 1857 0037 16       		.uleb128 0x16
 1858 0038 00       		.byte	0
 1859 0039 03       		.uleb128 0x3
 1860 003a 0E       		.uleb128 0xe
 1861 003b 3A       		.uleb128 0x3a
 1862 003c 0B       		.uleb128 0xb
 1863 003d 3B       		.uleb128 0x3b
 1864 003e 05       		.uleb128 0x5
 1865 003f 49       		.uleb128 0x49
 1866 0040 13       		.uleb128 0x13
 1867 0041 00       		.byte	0
 1868 0042 00       		.byte	0
 1869 0043 06       		.uleb128 0x6
 1870 0044 35       		.uleb128 0x35
 1871 0045 00       		.byte	0
 1872 0046 49       		.uleb128 0x49
 1873 0047 13       		.uleb128 0x13
 1874 0048 00       		.byte	0
 1875 0049 00       		.byte	0
 1876 004a 07       		.uleb128 0x7
 1877 004b 0F       		.uleb128 0xf
 1878 004c 00       		.byte	0
 1879 004d 0B       		.uleb128 0xb
 1880 004e 0B       		.uleb128 0xb
 1881 004f 49       		.uleb128 0x49
 1882 0050 13       		.uleb128 0x13
 1883 0051 00       		.byte	0
 1884 0052 00       		.byte	0
 1885 0053 08       		.uleb128 0x8
 1886 0054 15       		.uleb128 0x15
 1887 0055 00       		.byte	0
 1888 0056 27       		.uleb128 0x27
 1889 0057 19       		.uleb128 0x19
 1890 0058 00       		.byte	0
 1891 0059 00       		.byte	0
 1892 005a 09       		.uleb128 0x9
 1893 005b 2E       		.uleb128 0x2e
 1894 005c 01       		.byte	0x1
 1895 005d 3F       		.uleb128 0x3f
 1896 005e 19       		.uleb128 0x19
 1897 005f 03       		.uleb128 0x3
 1898 0060 0E       		.uleb128 0xe
 1899 0061 3A       		.uleb128 0x3a
 1900 0062 0B       		.uleb128 0xb
 1901 0063 3B       		.uleb128 0x3b
 1902 0064 0B       		.uleb128 0xb
 1903 0065 27       		.uleb128 0x27
 1904 0066 19       		.uleb128 0x19
 1905 0067 11       		.uleb128 0x11
 1906 0068 01       		.uleb128 0x1
 1907 0069 12       		.uleb128 0x12
 1908 006a 06       		.uleb128 0x6
 1909 006b 40       		.uleb128 0x40
 1910 006c 18       		.uleb128 0x18
 1911 006d 9742     		.uleb128 0x2117
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 50


 1912 006f 19       		.uleb128 0x19
 1913 0070 01       		.uleb128 0x1
 1914 0071 13       		.uleb128 0x13
 1915 0072 00       		.byte	0
 1916 0073 00       		.byte	0
 1917 0074 0A       		.uleb128 0xa
 1918 0075 34       		.uleb128 0x34
 1919 0076 00       		.byte	0
 1920 0077 03       		.uleb128 0x3
 1921 0078 0E       		.uleb128 0xe
 1922 0079 3A       		.uleb128 0x3a
 1923 007a 0B       		.uleb128 0xb
 1924 007b 3B       		.uleb128 0x3b
 1925 007c 0B       		.uleb128 0xb
 1926 007d 49       		.uleb128 0x49
 1927 007e 13       		.uleb128 0x13
 1928 007f 02       		.uleb128 0x2
 1929 0080 17       		.uleb128 0x17
 1930 0081 00       		.byte	0
 1931 0082 00       		.byte	0
 1932 0083 0B       		.uleb128 0xb
 1933 0084 34       		.uleb128 0x34
 1934 0085 00       		.byte	0
 1935 0086 03       		.uleb128 0x3
 1936 0087 0E       		.uleb128 0xe
 1937 0088 3A       		.uleb128 0x3a
 1938 0089 0B       		.uleb128 0xb
 1939 008a 3B       		.uleb128 0x3b
 1940 008b 0B       		.uleb128 0xb
 1941 008c 49       		.uleb128 0x49
 1942 008d 13       		.uleb128 0x13
 1943 008e 02       		.uleb128 0x2
 1944 008f 18       		.uleb128 0x18
 1945 0090 00       		.byte	0
 1946 0091 00       		.byte	0
 1947 0092 0C       		.uleb128 0xc
 1948 0093 898201   		.uleb128 0x4109
 1949 0096 01       		.byte	0x1
 1950 0097 11       		.uleb128 0x11
 1951 0098 01       		.uleb128 0x1
 1952 0099 31       		.uleb128 0x31
 1953 009a 13       		.uleb128 0x13
 1954 009b 01       		.uleb128 0x1
 1955 009c 13       		.uleb128 0x13
 1956 009d 00       		.byte	0
 1957 009e 00       		.byte	0
 1958 009f 0D       		.uleb128 0xd
 1959 00a0 8A8201   		.uleb128 0x410a
 1960 00a3 00       		.byte	0
 1961 00a4 02       		.uleb128 0x2
 1962 00a5 18       		.uleb128 0x18
 1963 00a6 9142     		.uleb128 0x2111
 1964 00a8 18       		.uleb128 0x18
 1965 00a9 00       		.byte	0
 1966 00aa 00       		.byte	0
 1967 00ab 0E       		.uleb128 0xe
 1968 00ac 898201   		.uleb128 0x4109
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 51


 1969 00af 01       		.byte	0x1
 1970 00b0 11       		.uleb128 0x11
 1971 00b1 01       		.uleb128 0x1
 1972 00b2 31       		.uleb128 0x31
 1973 00b3 13       		.uleb128 0x13
 1974 00b4 00       		.byte	0
 1975 00b5 00       		.byte	0
 1976 00b6 0F       		.uleb128 0xf
 1977 00b7 01       		.uleb128 0x1
 1978 00b8 01       		.byte	0x1
 1979 00b9 49       		.uleb128 0x49
 1980 00ba 13       		.uleb128 0x13
 1981 00bb 01       		.uleb128 0x1
 1982 00bc 13       		.uleb128 0x13
 1983 00bd 00       		.byte	0
 1984 00be 00       		.byte	0
 1985 00bf 10       		.uleb128 0x10
 1986 00c0 21       		.uleb128 0x21
 1987 00c1 00       		.byte	0
 1988 00c2 49       		.uleb128 0x49
 1989 00c3 13       		.uleb128 0x13
 1990 00c4 2F       		.uleb128 0x2f
 1991 00c5 0B       		.uleb128 0xb
 1992 00c6 00       		.byte	0
 1993 00c7 00       		.byte	0
 1994 00c8 11       		.uleb128 0x11
 1995 00c9 26       		.uleb128 0x26
 1996 00ca 00       		.byte	0
 1997 00cb 49       		.uleb128 0x49
 1998 00cc 13       		.uleb128 0x13
 1999 00cd 00       		.byte	0
 2000 00ce 00       		.byte	0
 2001 00cf 12       		.uleb128 0x12
 2002 00d0 2E       		.uleb128 0x2e
 2003 00d1 01       		.byte	0x1
 2004 00d2 3F       		.uleb128 0x3f
 2005 00d3 19       		.uleb128 0x19
 2006 00d4 03       		.uleb128 0x3
 2007 00d5 0E       		.uleb128 0xe
 2008 00d6 3A       		.uleb128 0x3a
 2009 00d7 0B       		.uleb128 0xb
 2010 00d8 3B       		.uleb128 0x3b
 2011 00d9 05       		.uleb128 0x5
 2012 00da 27       		.uleb128 0x27
 2013 00db 19       		.uleb128 0x19
 2014 00dc 11       		.uleb128 0x11
 2015 00dd 01       		.uleb128 0x1
 2016 00de 12       		.uleb128 0x12
 2017 00df 06       		.uleb128 0x6
 2018 00e0 40       		.uleb128 0x40
 2019 00e1 18       		.uleb128 0x18
 2020 00e2 9742     		.uleb128 0x2117
 2021 00e4 19       		.uleb128 0x19
 2022 00e5 01       		.uleb128 0x1
 2023 00e6 13       		.uleb128 0x13
 2024 00e7 00       		.byte	0
 2025 00e8 00       		.byte	0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 52


 2026 00e9 13       		.uleb128 0x13
 2027 00ea 898201   		.uleb128 0x4109
 2028 00ed 00       		.byte	0
 2029 00ee 11       		.uleb128 0x11
 2030 00ef 01       		.uleb128 0x1
 2031 00f0 31       		.uleb128 0x31
 2032 00f1 13       		.uleb128 0x13
 2033 00f2 00       		.byte	0
 2034 00f3 00       		.byte	0
 2035 00f4 14       		.uleb128 0x14
 2036 00f5 2E       		.uleb128 0x2e
 2037 00f6 00       		.byte	0
 2038 00f7 3F       		.uleb128 0x3f
 2039 00f8 19       		.uleb128 0x19
 2040 00f9 03       		.uleb128 0x3
 2041 00fa 0E       		.uleb128 0xe
 2042 00fb 3A       		.uleb128 0x3a
 2043 00fc 0B       		.uleb128 0xb
 2044 00fd 3B       		.uleb128 0x3b
 2045 00fe 05       		.uleb128 0x5
 2046 00ff 27       		.uleb128 0x27
 2047 0100 19       		.uleb128 0x19
 2048 0101 11       		.uleb128 0x11
 2049 0102 01       		.uleb128 0x1
 2050 0103 12       		.uleb128 0x12
 2051 0104 06       		.uleb128 0x6
 2052 0105 40       		.uleb128 0x40
 2053 0106 18       		.uleb128 0x18
 2054 0107 9742     		.uleb128 0x2117
 2055 0109 19       		.uleb128 0x19
 2056 010a 00       		.byte	0
 2057 010b 00       		.byte	0
 2058 010c 15       		.uleb128 0x15
 2059 010d 2E       		.uleb128 0x2e
 2060 010e 01       		.byte	0x1
 2061 010f 3F       		.uleb128 0x3f
 2062 0110 19       		.uleb128 0x19
 2063 0111 03       		.uleb128 0x3
 2064 0112 0E       		.uleb128 0xe
 2065 0113 3A       		.uleb128 0x3a
 2066 0114 0B       		.uleb128 0xb
 2067 0115 3B       		.uleb128 0x3b
 2068 0116 05       		.uleb128 0x5
 2069 0117 27       		.uleb128 0x27
 2070 0118 19       		.uleb128 0x19
 2071 0119 49       		.uleb128 0x49
 2072 011a 13       		.uleb128 0x13
 2073 011b 11       		.uleb128 0x11
 2074 011c 01       		.uleb128 0x1
 2075 011d 12       		.uleb128 0x12
 2076 011e 06       		.uleb128 0x6
 2077 011f 40       		.uleb128 0x40
 2078 0120 18       		.uleb128 0x18
 2079 0121 9742     		.uleb128 0x2117
 2080 0123 19       		.uleb128 0x19
 2081 0124 01       		.uleb128 0x1
 2082 0125 13       		.uleb128 0x13
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 53


 2083 0126 00       		.byte	0
 2084 0127 00       		.byte	0
 2085 0128 16       		.uleb128 0x16
 2086 0129 05       		.uleb128 0x5
 2087 012a 00       		.byte	0
 2088 012b 03       		.uleb128 0x3
 2089 012c 0E       		.uleb128 0xe
 2090 012d 3A       		.uleb128 0x3a
 2091 012e 0B       		.uleb128 0xb
 2092 012f 3B       		.uleb128 0x3b
 2093 0130 05       		.uleb128 0x5
 2094 0131 49       		.uleb128 0x49
 2095 0132 13       		.uleb128 0x13
 2096 0133 02       		.uleb128 0x2
 2097 0134 17       		.uleb128 0x17
 2098 0135 00       		.byte	0
 2099 0136 00       		.byte	0
 2100 0137 17       		.uleb128 0x17
 2101 0138 34       		.uleb128 0x34
 2102 0139 00       		.byte	0
 2103 013a 03       		.uleb128 0x3
 2104 013b 0E       		.uleb128 0xe
 2105 013c 3A       		.uleb128 0x3a
 2106 013d 0B       		.uleb128 0xb
 2107 013e 3B       		.uleb128 0x3b
 2108 013f 05       		.uleb128 0x5
 2109 0140 49       		.uleb128 0x49
 2110 0141 13       		.uleb128 0x13
 2111 0142 02       		.uleb128 0x2
 2112 0143 17       		.uleb128 0x17
 2113 0144 00       		.byte	0
 2114 0145 00       		.byte	0
 2115 0146 18       		.uleb128 0x18
 2116 0147 2E       		.uleb128 0x2e
 2117 0148 01       		.byte	0x1
 2118 0149 3F       		.uleb128 0x3f
 2119 014a 19       		.uleb128 0x19
 2120 014b 03       		.uleb128 0x3
 2121 014c 0E       		.uleb128 0xe
 2122 014d 3A       		.uleb128 0x3a
 2123 014e 0B       		.uleb128 0xb
 2124 014f 3B       		.uleb128 0x3b
 2125 0150 05       		.uleb128 0x5
 2126 0151 27       		.uleb128 0x27
 2127 0152 19       		.uleb128 0x19
 2128 0153 49       		.uleb128 0x49
 2129 0154 13       		.uleb128 0x13
 2130 0155 11       		.uleb128 0x11
 2131 0156 01       		.uleb128 0x1
 2132 0157 12       		.uleb128 0x12
 2133 0158 06       		.uleb128 0x6
 2134 0159 40       		.uleb128 0x40
 2135 015a 18       		.uleb128 0x18
 2136 015b 9642     		.uleb128 0x2116
 2137 015d 19       		.uleb128 0x19
 2138 015e 01       		.uleb128 0x1
 2139 015f 13       		.uleb128 0x13
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 54


 2140 0160 00       		.byte	0
 2141 0161 00       		.byte	0
 2142 0162 19       		.uleb128 0x19
 2143 0163 34       		.uleb128 0x34
 2144 0164 00       		.byte	0
 2145 0165 03       		.uleb128 0x3
 2146 0166 0E       		.uleb128 0xe
 2147 0167 3A       		.uleb128 0x3a
 2148 0168 0B       		.uleb128 0xb
 2149 0169 3B       		.uleb128 0x3b
 2150 016a 05       		.uleb128 0x5
 2151 016b 49       		.uleb128 0x49
 2152 016c 13       		.uleb128 0x13
 2153 016d 00       		.byte	0
 2154 016e 00       		.byte	0
 2155 016f 1A       		.uleb128 0x1a
 2156 0170 34       		.uleb128 0x34
 2157 0171 00       		.byte	0
 2158 0172 03       		.uleb128 0x3
 2159 0173 0E       		.uleb128 0xe
 2160 0174 3A       		.uleb128 0x3a
 2161 0175 0B       		.uleb128 0xb
 2162 0176 3B       		.uleb128 0x3b
 2163 0177 05       		.uleb128 0x5
 2164 0178 49       		.uleb128 0x49
 2165 0179 13       		.uleb128 0x13
 2166 017a 02       		.uleb128 0x2
 2167 017b 18       		.uleb128 0x18
 2168 017c 00       		.byte	0
 2169 017d 00       		.byte	0
 2170 017e 1B       		.uleb128 0x1b
 2171 017f 34       		.uleb128 0x34
 2172 0180 00       		.byte	0
 2173 0181 03       		.uleb128 0x3
 2174 0182 0E       		.uleb128 0xe
 2175 0183 3A       		.uleb128 0x3a
 2176 0184 0B       		.uleb128 0xb
 2177 0185 3B       		.uleb128 0x3b
 2178 0186 0B       		.uleb128 0xb
 2179 0187 49       		.uleb128 0x49
 2180 0188 13       		.uleb128 0x13
 2181 0189 3F       		.uleb128 0x3f
 2182 018a 19       		.uleb128 0x19
 2183 018b 02       		.uleb128 0x2
 2184 018c 18       		.uleb128 0x18
 2185 018d 00       		.byte	0
 2186 018e 00       		.byte	0
 2187 018f 1C       		.uleb128 0x1c
 2188 0190 2E       		.uleb128 0x2e
 2189 0191 01       		.byte	0x1
 2190 0192 3F       		.uleb128 0x3f
 2191 0193 19       		.uleb128 0x19
 2192 0194 03       		.uleb128 0x3
 2193 0195 0E       		.uleb128 0xe
 2194 0196 3A       		.uleb128 0x3a
 2195 0197 0B       		.uleb128 0xb
 2196 0198 3B       		.uleb128 0x3b
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 55


 2197 0199 0B       		.uleb128 0xb
 2198 019a 27       		.uleb128 0x27
 2199 019b 19       		.uleb128 0x19
 2200 019c 3C       		.uleb128 0x3c
 2201 019d 19       		.uleb128 0x19
 2202 019e 01       		.uleb128 0x1
 2203 019f 13       		.uleb128 0x13
 2204 01a0 00       		.byte	0
 2205 01a1 00       		.byte	0
 2206 01a2 1D       		.uleb128 0x1d
 2207 01a3 05       		.uleb128 0x5
 2208 01a4 00       		.byte	0
 2209 01a5 49       		.uleb128 0x49
 2210 01a6 13       		.uleb128 0x13
 2211 01a7 00       		.byte	0
 2212 01a8 00       		.byte	0
 2213 01a9 1E       		.uleb128 0x1e
 2214 01aa 2E       		.uleb128 0x2e
 2215 01ab 01       		.byte	0x1
 2216 01ac 3F       		.uleb128 0x3f
 2217 01ad 19       		.uleb128 0x19
 2218 01ae 03       		.uleb128 0x3
 2219 01af 0E       		.uleb128 0xe
 2220 01b0 3A       		.uleb128 0x3a
 2221 01b1 0B       		.uleb128 0xb
 2222 01b2 3B       		.uleb128 0x3b
 2223 01b3 0B       		.uleb128 0xb
 2224 01b4 27       		.uleb128 0x27
 2225 01b5 19       		.uleb128 0x19
 2226 01b6 49       		.uleb128 0x49
 2227 01b7 13       		.uleb128 0x13
 2228 01b8 3C       		.uleb128 0x3c
 2229 01b9 19       		.uleb128 0x19
 2230 01ba 01       		.uleb128 0x1
 2231 01bb 13       		.uleb128 0x13
 2232 01bc 00       		.byte	0
 2233 01bd 00       		.byte	0
 2234 01be 1F       		.uleb128 0x1f
 2235 01bf 2E       		.uleb128 0x2e
 2236 01c0 01       		.byte	0x1
 2237 01c1 3F       		.uleb128 0x3f
 2238 01c2 19       		.uleb128 0x19
 2239 01c3 03       		.uleb128 0x3
 2240 01c4 0E       		.uleb128 0xe
 2241 01c5 3A       		.uleb128 0x3a
 2242 01c6 0B       		.uleb128 0xb
 2243 01c7 3B       		.uleb128 0x3b
 2244 01c8 0B       		.uleb128 0xb
 2245 01c9 27       		.uleb128 0x27
 2246 01ca 19       		.uleb128 0x19
 2247 01cb 3C       		.uleb128 0x3c
 2248 01cc 19       		.uleb128 0x19
 2249 01cd 00       		.byte	0
 2250 01ce 00       		.byte	0
 2251 01cf 00       		.byte	0
 2252              		.section	.debug_loc,"",%progbits
 2253              	.Ldebug_loc0:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 56


 2254              	.LLST0:
 2255 0000 70000000 		.4byte	.LVL5
 2256 0004 7A000000 		.4byte	.LVL6
 2257 0008 0200     		.2byte	0x2
 2258 000a 30       		.byte	0x30
 2259 000b 9F       		.byte	0x9f
 2260 000c 7A000000 		.4byte	.LVL6
 2261 0010 AC010000 		.4byte	.LFE1
 2262 0014 0100     		.2byte	0x1
 2263 0016 53       		.byte	0x53
 2264 0017 00000000 		.4byte	0
 2265 001b 00000000 		.4byte	0
 2266              	.LLST1:
 2267 001f 66000000 		.4byte	.LVL2
 2268 0023 6A000000 		.4byte	.LVL3
 2269 0027 0100     		.2byte	0x1
 2270 0029 51       		.byte	0x51
 2271 002a 6A000000 		.4byte	.LVL3
 2272 002e 7A000000 		.4byte	.LVL6
 2273 0032 0100     		.2byte	0x1
 2274 0034 52       		.byte	0x52
 2275 0035 84000000 		.4byte	.LVL7
 2276 0039 9A000000 		.4byte	.LVL9
 2277 003d 0100     		.2byte	0x1
 2278 003f 51       		.byte	0x51
 2279 0040 9A000000 		.4byte	.LVL9
 2280 0044 9E000000 		.4byte	.LVL10
 2281 0048 0200     		.2byte	0x2
 2282 004a 76       		.byte	0x76
 2283 004b 00       		.sleb128 0
 2284 004c 9E000000 		.4byte	.LVL10
 2285 0050 AA000000 		.4byte	.LVL11
 2286 0054 0700     		.2byte	0x7
 2287 0056 73       		.byte	0x73
 2288 0057 00       		.sleb128 0
 2289 0058 32       		.byte	0x32
 2290 0059 24       		.byte	0x24
 2291 005a 74       		.byte	0x74
 2292 005b 00       		.sleb128 0
 2293 005c 22       		.byte	0x22
 2294 005d AA000000 		.4byte	.LVL11
 2295 0061 C6000000 		.4byte	.LVL12
 2296 0065 1A00     		.2byte	0x1a
 2297 0067 73       		.byte	0x73
 2298 0068 00       		.sleb128 0
 2299 0069 32       		.byte	0x32
 2300 006a 24       		.byte	0x24
 2301 006b 70       		.byte	0x70
 2302 006c 00       		.sleb128 0
 2303 006d 22       		.byte	0x22
 2304 006e 06       		.byte	0x6
 2305 006f 0A       		.byte	0xa
 2306 0070 0037     		.2byte	0x3700
 2307 0072 1A       		.byte	0x1a
 2308 0073 70       		.byte	0x70
 2309 0074 00       		.sleb128 0
 2310 0075 73       		.byte	0x73
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 57


 2311 0076 00       		.sleb128 0
 2312 0077 22       		.byte	0x22
 2313 0078 23       		.byte	0x23
 2314 0079 14       		.uleb128 0x14
 2315 007a 94       		.byte	0x94
 2316 007b 01       		.byte	0x1
 2317 007c 08       		.byte	0x8
 2318 007d FF       		.byte	0xff
 2319 007e 1A       		.byte	0x1a
 2320 007f 21       		.byte	0x21
 2321 0080 9F       		.byte	0x9f
 2322 0081 C6000000 		.4byte	.LVL12
 2323 0085 CC000000 		.4byte	.LVL13
 2324 0089 0100     		.2byte	0x1
 2325 008b 51       		.byte	0x51
 2326 008c CC000000 		.4byte	.LVL13
 2327 0090 DE000000 		.4byte	.LVL14
 2328 0094 1000     		.2byte	0x10
 2329 0096 73       		.byte	0x73
 2330 0097 00       		.sleb128 0
 2331 0098 32       		.byte	0x32
 2332 0099 24       		.byte	0x24
 2333 009a 70       		.byte	0x70
 2334 009b 00       		.sleb128 0
 2335 009c 22       		.byte	0x22
 2336 009d 06       		.byte	0x6
 2337 009e 0A       		.byte	0xa
 2338 009f 0037     		.2byte	0x3700
 2339 00a1 1A       		.byte	0x1a
 2340 00a2 76       		.byte	0x76
 2341 00a3 00       		.sleb128 0
 2342 00a4 21       		.byte	0x21
 2343 00a5 9F       		.byte	0x9f
 2344 00a6 DE000000 		.4byte	.LVL14
 2345 00aa 3A010000 		.4byte	.LVL17
 2346 00ae 1A00     		.2byte	0x1a
 2347 00b0 73       		.byte	0x73
 2348 00b1 00       		.sleb128 0
 2349 00b2 32       		.byte	0x32
 2350 00b3 24       		.byte	0x24
 2351 00b4 70       		.byte	0x70
 2352 00b5 00       		.sleb128 0
 2353 00b6 22       		.byte	0x22
 2354 00b7 06       		.byte	0x6
 2355 00b8 0A       		.byte	0xa
 2356 00b9 0037     		.2byte	0x3700
 2357 00bb 1A       		.byte	0x1a
 2358 00bc 70       		.byte	0x70
 2359 00bd 00       		.sleb128 0
 2360 00be 73       		.byte	0x73
 2361 00bf 00       		.sleb128 0
 2362 00c0 22       		.byte	0x22
 2363 00c1 23       		.byte	0x23
 2364 00c2 14       		.uleb128 0x14
 2365 00c3 94       		.byte	0x94
 2366 00c4 01       		.byte	0x1
 2367 00c5 08       		.byte	0x8
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 58


 2368 00c6 FF       		.byte	0xff
 2369 00c7 1A       		.byte	0x1a
 2370 00c8 21       		.byte	0x21
 2371 00c9 9F       		.byte	0x9f
 2372 00ca 00000000 		.4byte	0
 2373 00ce 00000000 		.4byte	0
 2374              	.LLST2:
 2375 00d2 0A010000 		.4byte	.LVL15
 2376 00d6 24010000 		.4byte	.LVL16
 2377 00da 0100     		.2byte	0x1
 2378 00dc 52       		.byte	0x52
 2379 00dd 00000000 		.4byte	0
 2380 00e1 00000000 		.4byte	0
 2381              	.LLST3:
 2382 00e5 00000000 		.4byte	.LVL21
 2383 00e9 34000000 		.4byte	.LVL27
 2384 00ed 0100     		.2byte	0x1
 2385 00ef 50       		.byte	0x50
 2386 00f0 34000000 		.4byte	.LVL27
 2387 00f4 58000000 		.4byte	.LFE6
 2388 00f8 0400     		.2byte	0x4
 2389 00fa F3       		.byte	0xf3
 2390 00fb 01       		.uleb128 0x1
 2391 00fc 50       		.byte	0x50
 2392 00fd 9F       		.byte	0x9f
 2393 00fe 00000000 		.4byte	0
 2394 0102 00000000 		.4byte	0
 2395              	.LLST4:
 2396 0106 02000000 		.4byte	.LVL22
 2397 010a 0E000000 		.4byte	.LVL23
 2398 010e 0200     		.2byte	0x2
 2399 0110 30       		.byte	0x30
 2400 0111 9F       		.byte	0x9f
 2401 0112 12000000 		.4byte	.LVL24
 2402 0116 24000000 		.4byte	.LVL25
 2403 011a 0100     		.2byte	0x1
 2404 011c 53       		.byte	0x53
 2405 011d 24000000 		.4byte	.LVL25
 2406 0121 26000000 		.4byte	.LVL26
 2407 0125 0200     		.2byte	0x2
 2408 0127 30       		.byte	0x30
 2409 0128 9F       		.byte	0x9f
 2410 0129 26000000 		.4byte	.LVL26
 2411 012d 58000000 		.4byte	.LFE6
 2412 0131 0100     		.2byte	0x1
 2413 0133 53       		.byte	0x53
 2414 0134 00000000 		.4byte	0
 2415 0138 00000000 		.4byte	0
 2416              	.LLST5:
 2417 013c 00000000 		.4byte	.LVL29
 2418 0140 0A000000 		.4byte	.LVL30
 2419 0144 0100     		.2byte	0x1
 2420 0146 50       		.byte	0x50
 2421 0147 0A000000 		.4byte	.LVL30
 2422 014b 14000000 		.4byte	.LVL32
 2423 014f 0100     		.2byte	0x1
 2424 0151 54       		.byte	0x54
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 59


 2425 0152 14000000 		.4byte	.LVL32
 2426 0156 20000000 		.4byte	.LVL34
 2427 015a 0400     		.2byte	0x4
 2428 015c F3       		.byte	0xf3
 2429 015d 01       		.uleb128 0x1
 2430 015e 50       		.byte	0x50
 2431 015f 9F       		.byte	0x9f
 2432 0160 20000000 		.4byte	.LVL34
 2433 0164 28000000 		.4byte	.LVL35
 2434 0168 0100     		.2byte	0x1
 2435 016a 54       		.byte	0x54
 2436 016b 28000000 		.4byte	.LVL35
 2437 016f 34000000 		.4byte	.LFE7
 2438 0173 0400     		.2byte	0x4
 2439 0175 F3       		.byte	0xf3
 2440 0176 01       		.uleb128 0x1
 2441 0177 50       		.byte	0x50
 2442 0178 9F       		.byte	0x9f
 2443 0179 00000000 		.4byte	0
 2444 017d 00000000 		.4byte	0
 2445              	.LLST6:
 2446 0181 1E000000 		.4byte	.LVL33
 2447 0185 20000000 		.4byte	.LVL34
 2448 0189 0100     		.2byte	0x1
 2449 018b 50       		.byte	0x50
 2450 018c 28000000 		.4byte	.LVL35
 2451 0190 2A000000 		.4byte	.LVL36
 2452 0194 0100     		.2byte	0x1
 2453 0196 50       		.byte	0x50
 2454 0197 00000000 		.4byte	0
 2455 019b 00000000 		.4byte	0
 2456              	.LLST7:
 2457 019f 00000000 		.4byte	.LVL37
 2458 01a3 04000000 		.4byte	.LVL38
 2459 01a7 0100     		.2byte	0x1
 2460 01a9 50       		.byte	0x50
 2461 01aa 04000000 		.4byte	.LVL38
 2462 01ae 10000000 		.4byte	.LFE8
 2463 01b2 0400     		.2byte	0x4
 2464 01b4 F3       		.byte	0xf3
 2465 01b5 01       		.uleb128 0x1
 2466 01b6 50       		.byte	0x50
 2467 01b7 9F       		.byte	0x9f
 2468 01b8 00000000 		.4byte	0
 2469 01bc 00000000 		.4byte	0
 2470              	.LLST8:
 2471 01c0 00000000 		.4byte	.LVL39
 2472 01c4 0E000000 		.4byte	.LVL40
 2473 01c8 0100     		.2byte	0x1
 2474 01ca 50       		.byte	0x50
 2475 01cb 0E000000 		.4byte	.LVL40
 2476 01cf 1C000000 		.4byte	.LFE10
 2477 01d3 0400     		.2byte	0x4
 2478 01d5 F3       		.byte	0xf3
 2479 01d6 01       		.uleb128 0x1
 2480 01d7 50       		.byte	0x50
 2481 01d8 9F       		.byte	0x9f
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 60


 2482 01d9 00000000 		.4byte	0
 2483 01dd 00000000 		.4byte	0
 2484              	.LLST9:
 2485 01e1 00000000 		.4byte	.LVL41
 2486 01e5 0E000000 		.4byte	.LVL42
 2487 01e9 0100     		.2byte	0x1
 2488 01eb 50       		.byte	0x50
 2489 01ec 0E000000 		.4byte	.LVL42
 2490 01f0 18000000 		.4byte	.LFE11
 2491 01f4 0400     		.2byte	0x4
 2492 01f6 F3       		.byte	0xf3
 2493 01f7 01       		.uleb128 0x1
 2494 01f8 50       		.byte	0x50
 2495 01f9 9F       		.byte	0x9f
 2496 01fa 00000000 		.4byte	0
 2497 01fe 00000000 		.4byte	0
 2498              	.LLST10:
 2499 0202 00000000 		.4byte	.LVL43
 2500 0206 04000000 		.4byte	.LVL44
 2501 020a 0100     		.2byte	0x1
 2502 020c 50       		.byte	0x50
 2503 020d 04000000 		.4byte	.LVL44
 2504 0211 10000000 		.4byte	.LFE12
 2505 0215 0400     		.2byte	0x4
 2506 0217 F3       		.byte	0xf3
 2507 0218 01       		.uleb128 0x1
 2508 0219 50       		.byte	0x50
 2509 021a 9F       		.byte	0x9f
 2510 021b 00000000 		.4byte	0
 2511 021f 00000000 		.4byte	0
 2512              	.LLST11:
 2513 0223 00000000 		.4byte	.LVL45
 2514 0227 04000000 		.4byte	.LVL46
 2515 022b 0100     		.2byte	0x1
 2516 022d 50       		.byte	0x50
 2517 022e 04000000 		.4byte	.LVL46
 2518 0232 10000000 		.4byte	.LFE13
 2519 0236 0400     		.2byte	0x4
 2520 0238 F3       		.byte	0xf3
 2521 0239 01       		.uleb128 0x1
 2522 023a 50       		.byte	0x50
 2523 023b 9F       		.byte	0x9f
 2524 023c 00000000 		.4byte	0
 2525 0240 00000000 		.4byte	0
 2526              	.LLST12:
 2527 0244 00000000 		.4byte	.LVL47
 2528 0248 0C000000 		.4byte	.LVL48
 2529 024c 0100     		.2byte	0x1
 2530 024e 50       		.byte	0x50
 2531 024f 0C000000 		.4byte	.LVL48
 2532 0253 12000000 		.4byte	.LVL50
 2533 0257 0100     		.2byte	0x1
 2534 0259 54       		.byte	0x54
 2535 025a 12000000 		.4byte	.LVL50
 2536 025e 1C000000 		.4byte	.LFE14
 2537 0262 0400     		.2byte	0x4
 2538 0264 F3       		.byte	0xf3
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 61


 2539 0265 01       		.uleb128 0x1
 2540 0266 50       		.byte	0x50
 2541 0267 9F       		.byte	0x9f
 2542 0268 00000000 		.4byte	0
 2543 026c 00000000 		.4byte	0
 2544              	.LLST13:
 2545 0270 00000000 		.4byte	.LVL47
 2546 0274 0F000000 		.4byte	.LVL49-1
 2547 0278 0100     		.2byte	0x1
 2548 027a 51       		.byte	0x51
 2549 027b 0F000000 		.4byte	.LVL49-1
 2550 027f 1C000000 		.4byte	.LFE14
 2551 0283 0400     		.2byte	0x4
 2552 0285 F3       		.byte	0xf3
 2553 0286 01       		.uleb128 0x1
 2554 0287 51       		.byte	0x51
 2555 0288 9F       		.byte	0x9f
 2556 0289 00000000 		.4byte	0
 2557 028d 00000000 		.4byte	0
 2558              	.LLST14:
 2559 0291 00000000 		.4byte	.LVL51
 2560 0295 0C000000 		.4byte	.LVL52
 2561 0299 0100     		.2byte	0x1
 2562 029b 50       		.byte	0x50
 2563 029c 0C000000 		.4byte	.LVL52
 2564 02a0 12000000 		.4byte	.LVL54
 2565 02a4 0100     		.2byte	0x1
 2566 02a6 54       		.byte	0x54
 2567 02a7 12000000 		.4byte	.LVL54
 2568 02ab 1C000000 		.4byte	.LFE15
 2569 02af 0400     		.2byte	0x4
 2570 02b1 F3       		.byte	0xf3
 2571 02b2 01       		.uleb128 0x1
 2572 02b3 50       		.byte	0x50
 2573 02b4 9F       		.byte	0x9f
 2574 02b5 00000000 		.4byte	0
 2575 02b9 00000000 		.4byte	0
 2576              	.LLST15:
 2577 02bd 00000000 		.4byte	.LVL51
 2578 02c1 0F000000 		.4byte	.LVL53-1
 2579 02c5 0100     		.2byte	0x1
 2580 02c7 51       		.byte	0x51
 2581 02c8 0F000000 		.4byte	.LVL53-1
 2582 02cc 16000000 		.4byte	.LVL55
 2583 02d0 0100     		.2byte	0x1
 2584 02d2 55       		.byte	0x55
 2585 02d3 16000000 		.4byte	.LVL55
 2586 02d7 1C000000 		.4byte	.LFE15
 2587 02db 0800     		.2byte	0x8
 2588 02dd F3       		.byte	0xf3
 2589 02de 01       		.uleb128 0x1
 2590 02df 50       		.byte	0x50
 2591 02e0 32       		.byte	0x32
 2592 02e1 24       		.byte	0x24
 2593 02e2 73       		.byte	0x73
 2594 02e3 00       		.sleb128 0
 2595 02e4 22       		.byte	0x22
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 62


 2596 02e5 00000000 		.4byte	0
 2597 02e9 00000000 		.4byte	0
 2598              	.LLST16:
 2599 02ed 00000000 		.4byte	.LVL56
 2600 02f1 0C000000 		.4byte	.LVL57
 2601 02f5 0100     		.2byte	0x1
 2602 02f7 50       		.byte	0x50
 2603 02f8 0C000000 		.4byte	.LVL57
 2604 02fc 42000000 		.4byte	.LVL63
 2605 0300 0100     		.2byte	0x1
 2606 0302 54       		.byte	0x54
 2607 0303 42000000 		.4byte	.LVL63
 2608 0307 5C000000 		.4byte	.LFE16
 2609 030b 0400     		.2byte	0x4
 2610 030d F3       		.byte	0xf3
 2611 030e 01       		.uleb128 0x1
 2612 030f 50       		.byte	0x50
 2613 0310 9F       		.byte	0x9f
 2614 0311 00000000 		.4byte	0
 2615 0315 00000000 		.4byte	0
 2616              	.LLST17:
 2617 0319 00000000 		.4byte	.LVL56
 2618 031d 0F000000 		.4byte	.LVL58-1
 2619 0321 0100     		.2byte	0x1
 2620 0323 51       		.byte	0x51
 2621 0324 0F000000 		.4byte	.LVL58-1
 2622 0328 1A000000 		.4byte	.LVL59
 2623 032c 0400     		.2byte	0x4
 2624 032e F3       		.byte	0xf3
 2625 032f 01       		.uleb128 0x1
 2626 0330 51       		.byte	0x51
 2627 0331 9F       		.byte	0x9f
 2628 0332 1A000000 		.4byte	.LVL59
 2629 0336 26000000 		.4byte	.LVL60
 2630 033a 0100     		.2byte	0x1
 2631 033c 51       		.byte	0x51
 2632 033d 30000000 		.4byte	.LVL61
 2633 0341 34000000 		.4byte	.LVL62
 2634 0345 0100     		.2byte	0x1
 2635 0347 51       		.byte	0x51
 2636 0348 00000000 		.4byte	0
 2637 034c 00000000 		.4byte	0
 2638              	.LLST18:
 2639 0350 4A000000 		.4byte	.LVL64
 2640 0354 4C000000 		.4byte	.LVL65
 2641 0358 0100     		.2byte	0x1
 2642 035a 50       		.byte	0x50
 2643 035b 00000000 		.4byte	0
 2644 035f 00000000 		.4byte	0
 2645              	.LLST19:
 2646 0363 00000000 		.4byte	.LVL66
 2647 0367 0C000000 		.4byte	.LVL67
 2648 036b 0100     		.2byte	0x1
 2649 036d 50       		.byte	0x50
 2650 036e 0C000000 		.4byte	.LVL67
 2651 0372 26000000 		.4byte	.LVL71
 2652 0376 0100     		.2byte	0x1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 63


 2653 0378 56       		.byte	0x56
 2654 0379 26000000 		.4byte	.LVL71
 2655 037d 48000000 		.4byte	.LFE17
 2656 0381 0400     		.2byte	0x4
 2657 0383 F3       		.byte	0xf3
 2658 0384 01       		.uleb128 0x1
 2659 0385 50       		.byte	0x50
 2660 0386 9F       		.byte	0x9f
 2661 0387 00000000 		.4byte	0
 2662 038b 00000000 		.4byte	0
 2663              	.LLST20:
 2664 038f 00000000 		.4byte	.LVL66
 2665 0393 0F000000 		.4byte	.LVL68-1
 2666 0397 0100     		.2byte	0x1
 2667 0399 51       		.byte	0x51
 2668 039a 0F000000 		.4byte	.LVL68-1
 2669 039e 1A000000 		.4byte	.LVL69
 2670 03a2 0400     		.2byte	0x4
 2671 03a4 F3       		.byte	0xf3
 2672 03a5 01       		.uleb128 0x1
 2673 03a6 51       		.byte	0x51
 2674 03a7 9F       		.byte	0x9f
 2675 03a8 1A000000 		.4byte	.LVL69
 2676 03ac 23000000 		.4byte	.LVL70-1
 2677 03b0 0100     		.2byte	0x1
 2678 03b2 50       		.byte	0x50
 2679 03b3 00000000 		.4byte	0
 2680 03b7 00000000 		.4byte	0
 2681              	.LLST21:
 2682 03bb 00000000 		.4byte	.LVL73
 2683 03bf 0C000000 		.4byte	.LVL74
 2684 03c3 0100     		.2byte	0x1
 2685 03c5 50       		.byte	0x50
 2686 03c6 0C000000 		.4byte	.LVL74
 2687 03ca 28000000 		.4byte	.LVL80
 2688 03ce 0100     		.2byte	0x1
 2689 03d0 54       		.byte	0x54
 2690 03d1 28000000 		.4byte	.LVL80
 2691 03d5 48000000 		.4byte	.LFE18
 2692 03d9 0400     		.2byte	0x4
 2693 03db F3       		.byte	0xf3
 2694 03dc 01       		.uleb128 0x1
 2695 03dd 50       		.byte	0x50
 2696 03de 9F       		.byte	0x9f
 2697 03df 00000000 		.4byte	0
 2698 03e3 00000000 		.4byte	0
 2699              	.LLST22:
 2700 03e7 00000000 		.4byte	.LVL73
 2701 03eb 0F000000 		.4byte	.LVL75-1
 2702 03ef 0100     		.2byte	0x1
 2703 03f1 51       		.byte	0x51
 2704 03f2 0F000000 		.4byte	.LVL75-1
 2705 03f6 1A000000 		.4byte	.LVL76
 2706 03fa 0400     		.2byte	0x4
 2707 03fc F3       		.byte	0xf3
 2708 03fd 01       		.uleb128 0x1
 2709 03fe 51       		.byte	0x51
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 64


 2710 03ff 9F       		.byte	0x9f
 2711 0400 1A000000 		.4byte	.LVL76
 2712 0404 26000000 		.4byte	.LVL79
 2713 0408 0100     		.2byte	0x1
 2714 040a 55       		.byte	0x55
 2715 040b 00000000 		.4byte	0
 2716 040f 00000000 		.4byte	0
 2717              		.section	.debug_aranges,"",%progbits
 2718 0000 AC000000 		.4byte	0xac
 2719 0004 0200     		.2byte	0x2
 2720 0006 00000000 		.4byte	.Ldebug_info0
 2721 000a 04       		.byte	0x4
 2722 000b 00       		.byte	0
 2723 000c 0000     		.2byte	0
 2724 000e 0000     		.2byte	0
 2725 0010 00000000 		.4byte	.LFB1
 2726 0014 AC010000 		.4byte	.LFE1-.LFB1
 2727 0018 00000000 		.4byte	.LFB2
 2728 001c 24000000 		.4byte	.LFE2-.LFB2
 2729 0020 00000000 		.4byte	.LFB0
 2730 0024 20000000 		.4byte	.LFE0-.LFB0
 2731 0028 00000000 		.4byte	.LFB3
 2732 002c 10000000 		.4byte	.LFE3-.LFB3
 2733 0030 00000000 		.4byte	.LFB4
 2734 0034 14000000 		.4byte	.LFE4-.LFB4
 2735 0038 00000000 		.4byte	.LFB5
 2736 003c 14000000 		.4byte	.LFE5-.LFB5
 2737 0040 00000000 		.4byte	.LFB6
 2738 0044 58000000 		.4byte	.LFE6-.LFB6
 2739 0048 00000000 		.4byte	.LFB7
 2740 004c 34000000 		.4byte	.LFE7-.LFB7
 2741 0050 00000000 		.4byte	.LFB8
 2742 0054 10000000 		.4byte	.LFE8-.LFB8
 2743 0058 00000000 		.4byte	.LFB9
 2744 005c 14000000 		.4byte	.LFE9-.LFB9
 2745 0060 00000000 		.4byte	.LFB10
 2746 0064 1C000000 		.4byte	.LFE10-.LFB10
 2747 0068 00000000 		.4byte	.LFB11
 2748 006c 18000000 		.4byte	.LFE11-.LFB11
 2749 0070 00000000 		.4byte	.LFB12
 2750 0074 10000000 		.4byte	.LFE12-.LFB12
 2751 0078 00000000 		.4byte	.LFB13
 2752 007c 10000000 		.4byte	.LFE13-.LFB13
 2753 0080 00000000 		.4byte	.LFB14
 2754 0084 1C000000 		.4byte	.LFE14-.LFB14
 2755 0088 00000000 		.4byte	.LFB15
 2756 008c 1C000000 		.4byte	.LFE15-.LFB15
 2757 0090 00000000 		.4byte	.LFB16
 2758 0094 5C000000 		.4byte	.LFE16-.LFB16
 2759 0098 00000000 		.4byte	.LFB17
 2760 009c 48000000 		.4byte	.LFE17-.LFB17
 2761 00a0 00000000 		.4byte	.LFB18
 2762 00a4 48000000 		.4byte	.LFE18-.LFB18
 2763 00a8 00000000 		.4byte	0
 2764 00ac 00000000 		.4byte	0
 2765              		.section	.debug_ranges,"",%progbits
 2766              	.Ldebug_ranges0:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 65


 2767 0000 00000000 		.4byte	.LFB1
 2768 0004 AC010000 		.4byte	.LFE1
 2769 0008 00000000 		.4byte	.LFB2
 2770 000c 24000000 		.4byte	.LFE2
 2771 0010 00000000 		.4byte	.LFB0
 2772 0014 20000000 		.4byte	.LFE0
 2773 0018 00000000 		.4byte	.LFB3
 2774 001c 10000000 		.4byte	.LFE3
 2775 0020 00000000 		.4byte	.LFB4
 2776 0024 14000000 		.4byte	.LFE4
 2777 0028 00000000 		.4byte	.LFB5
 2778 002c 14000000 		.4byte	.LFE5
 2779 0030 00000000 		.4byte	.LFB6
 2780 0034 58000000 		.4byte	.LFE6
 2781 0038 00000000 		.4byte	.LFB7
 2782 003c 34000000 		.4byte	.LFE7
 2783 0040 00000000 		.4byte	.LFB8
 2784 0044 10000000 		.4byte	.LFE8
 2785 0048 00000000 		.4byte	.LFB9
 2786 004c 14000000 		.4byte	.LFE9
 2787 0050 00000000 		.4byte	.LFB10
 2788 0054 1C000000 		.4byte	.LFE10
 2789 0058 00000000 		.4byte	.LFB11
 2790 005c 18000000 		.4byte	.LFE11
 2791 0060 00000000 		.4byte	.LFB12
 2792 0064 10000000 		.4byte	.LFE12
 2793 0068 00000000 		.4byte	.LFB13
 2794 006c 10000000 		.4byte	.LFE13
 2795 0070 00000000 		.4byte	.LFB14
 2796 0074 1C000000 		.4byte	.LFE14
 2797 0078 00000000 		.4byte	.LFB15
 2798 007c 1C000000 		.4byte	.LFE15
 2799 0080 00000000 		.4byte	.LFB16
 2800 0084 5C000000 		.4byte	.LFE16
 2801 0088 00000000 		.4byte	.LFB17
 2802 008c 48000000 		.4byte	.LFE17
 2803 0090 00000000 		.4byte	.LFB18
 2804 0094 48000000 		.4byte	.LFE18
 2805 0098 00000000 		.4byte	0
 2806 009c 00000000 		.4byte	0
 2807              		.section	.debug_line,"",%progbits
 2808              	.Ldebug_line0:
 2809 0000 C0020000 		.section	.debug_str,"MS",%progbits,1
 2809      02004D00 
 2809      00000201 
 2809      FB0E0D00 
 2809      01010101 
 2810              	.LASF10:
 2811 0000 75696E74 		.ascii	"uint16\000"
 2811      313600
 2812              	.LASF50:
 2813 0007 61646347 		.ascii	"adcGain\000"
 2813      61696E00 
 2814              	.LASF24:
 2815 000f 636F756E 		.ascii	"counts\000"
 2815      747300
 2816              	.LASF55:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 66


 2817 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2817      436F756E 
 2817      7473546F 
 2817      5F566F6C 
 2817      747300
 2818              	.LASF0:
 2819 0029 7369676E 		.ascii	"signed char\000"
 2819      65642063 
 2819      68617200 
 2820              	.LASF26:
 2821 0035 4144435F 		.ascii	"ADC_Init\000"
 2821      496E6974 
 2821      00
 2822              	.LASF63:
 2823 003e 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2823      4320342E 
 2823      382E3420 
 2823      32303134 
 2823      30353236 
 2824 0071 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2824      20726576 
 2824      6973696F 
 2824      6E203231 
 2824      31333538 
 2825 00a4 67202D66 		.ascii	"g -ffunction-sections\000"
 2825      66756E63 
 2825      74696F6E 
 2825      2D736563 
 2825      74696F6E 
 2826              	.LASF7:
 2827 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 2827      206C6F6E 
 2827      6720756E 
 2827      7369676E 
 2827      65642069 
 2828              	.LASF25:
 2829 00d1 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2829      496E7075 
 2829      7473506C 
 2829      6163656D 
 2829      656E7400 
 2830              	.LASF30:
 2831 00e5 4144435F 		.ascii	"ADC_StartConvert\000"
 2831      53746172 
 2831      74436F6E 
 2831      76657274 
 2831      00
 2832              	.LASF6:
 2833 00f6 6C6F6E67 		.ascii	"long long int\000"
 2833      206C6F6E 
 2833      6720696E 
 2833      7400
 2834              	.LASF65:
 2835 0104 433A5C57 		.ascii	"C:\\WORKS\\WS\\WS_PSoC\\test_01.cydsn\000"
 2835      4F524B53 
 2835      5C57535C 
 2835      57535F50 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 67


 2835      536F435C 
 2836              	.LASF32:
 2837 0126 73746174 		.ascii	"status\000"
 2837      757300
 2838              	.LASF13:
 2839 012d 696E7433 		.ascii	"int32\000"
 2839      3200
 2840              	.LASF28:
 2841 0133 4144435F 		.ascii	"ADC_Start\000"
 2841      53746172 
 2841      7400
 2842              	.LASF4:
 2843 013d 6C6F6E67 		.ascii	"long int\000"
 2843      20696E74 
 2843      00
 2844              	.LASF54:
 2845 0146 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2845      436F756E 
 2845      7473546F 
 2845      5F75566F 
 2845      6C747300 
 2846              	.LASF60:
 2847 015a 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2847      636F756E 
 2847      74735065 
 2847      72313056 
 2847      6F6C7400 
 2848              	.LASF9:
 2849 016e 75696E74 		.ascii	"uint8\000"
 2849      3800
 2850              	.LASF62:
 2851 0174 43794465 		.ascii	"CyDelayUs\000"
 2851      6C617955 
 2851      7300
 2852              	.LASF16:
 2853 017e 646F7562 		.ascii	"double\000"
 2853      6C6500
 2854              	.LASF11:
 2855 0185 75696E74 		.ascii	"uint32\000"
 2855      333200
 2856              	.LASF39:
 2857 018c 6D61736B 		.ascii	"mask\000"
 2857      00
 2858              	.LASF58:
 2859 0191 4144435F 		.ascii	"ADC_initVar\000"
 2859      696E6974 
 2859      56617200 
 2860              	.LASF35:
 2861 019d 7265744D 		.ascii	"retMode\000"
 2861      6F646500 
 2862              	.LASF45:
 2863 01a5 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2863      5365744C 
 2863      696D6974 
 2863      4D61736B 
 2863      00
 2864              	.LASF8:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 68


 2865 01b6 756E7369 		.ascii	"unsigned int\000"
 2865      676E6564 
 2865      20696E74 
 2865      00
 2866              	.LASF66:
 2867 01c3 75566F6C 		.ascii	"uVolts\000"
 2867      747300
 2868              	.LASF5:
 2869 01ca 6C6F6E67 		.ascii	"long unsigned int\000"
 2869      20756E73 
 2869      69676E65 
 2869      6420696E 
 2869      7400
 2870              	.LASF46:
 2871 01dc 4144435F 		.ascii	"ADC_SetSatMask\000"
 2871      53657453 
 2871      61744D61 
 2871      736B00
 2872              	.LASF56:
 2873 01eb 766F6C74 		.ascii	"volts\000"
 2873      7300
 2874              	.LASF23:
 2875 01f1 746D7052 		.ascii	"tmpRegVal\000"
 2875      65675661 
 2875      6C00
 2876              	.LASF3:
 2877 01fb 73686F72 		.ascii	"short unsigned int\000"
 2877      7420756E 
 2877      7369676E 
 2877      65642069 
 2877      6E7400
 2878              	.LASF67:
 2879 020e 4379496E 		.ascii	"CyIntSetVector\000"
 2879      74536574 
 2879      56656374 
 2879      6F7200
 2880              	.LASF31:
 2881 021d 4144435F 		.ascii	"ADC_StopConvert\000"
 2881      53746F70 
 2881      436F6E76 
 2881      65727400 
 2882              	.LASF53:
 2883 022d 6D566F6C 		.ascii	"mVolts\000"
 2883      747300
 2884              	.LASF19:
 2885 0234 72656733 		.ascii	"reg32\000"
 2885      3200
 2886              	.LASF14:
 2887 023a 666C6F61 		.ascii	"float32\000"
 2887      74333200 
 2888              	.LASF21:
 2889 0242 73697A65 		.ascii	"sizetype\000"
 2889      74797065 
 2889      00
 2890              	.LASF42:
 2891 024b 6C6F774C 		.ascii	"lowLimit\000"
 2891      696D6974 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 69


 2891      00
 2892              	.LASF43:
 2893 0254 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2893      53657448 
 2893      6967684C 
 2893      696D6974 
 2893      00
 2894              	.LASF40:
 2895 0265 4144435F 		.ascii	"ADC_EnableInjection\000"
 2895      456E6162 
 2895      6C65496E 
 2895      6A656374 
 2895      696F6E00 
 2896              	.LASF33:
 2897 0279 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2897      4973456E 
 2897      64436F6E 
 2897      76657273 
 2897      696F6E00 
 2898              	.LASF17:
 2899 028d 696E7436 		.ascii	"int64\000"
 2899      3400
 2900              	.LASF61:
 2901 0293 4379496E 		.ascii	"CyIntSetPriority\000"
 2901      74536574 
 2901      5072696F 
 2901      72697479 
 2901      00
 2902              	.LASF38:
 2903 02a4 4144435F 		.ascii	"ADC_SetChanMask\000"
 2903      53657443 
 2903      68616E4D 
 2903      61736B00 
 2904              	.LASF49:
 2905 02b4 4144435F 		.ascii	"ADC_SetGain\000"
 2905      53657447 
 2905      61696E00 
 2906              	.LASF15:
 2907 02c0 666C6F61 		.ascii	"float\000"
 2907      7400
 2908              	.LASF44:
 2909 02c6 68696768 		.ascii	"highLimit\000"
 2909      4C696D69 
 2909      7400
 2910              	.LASF51:
 2911 02d0 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2911      436F756E 
 2911      7473546F 
 2911      5F6D566F 
 2911      6C747300 
 2912              	.LASF41:
 2913 02e4 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2913      5365744C 
 2913      6F774C69 
 2913      6D697400 
 2914              	.LASF68:
 2915 02f4 43794861 		.ascii	"CyHalt\000"
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 70


 2915      6C7400
 2916              	.LASF64:
 2917 02fb 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2917      6E657261 
 2917      7465645F 
 2917      536F7572 
 2917      63655C50 
 2918              	.LASF1:
 2919 031a 756E7369 		.ascii	"unsigned char\000"
 2919      676E6564 
 2919      20636861 
 2919      7200
 2920              	.LASF59:
 2921 0328 4144435F 		.ascii	"ADC_offset\000"
 2921      6F666673 
 2921      657400
 2922              	.LASF2:
 2923 0333 73686F72 		.ascii	"short int\000"
 2923      7420696E 
 2923      7400
 2924              	.LASF29:
 2925 033d 4144435F 		.ascii	"ADC_Stop\000"
 2925      53746F70 
 2925      00
 2926              	.LASF22:
 2927 0346 63684E75 		.ascii	"chNum\000"
 2927      6D00
 2928              	.LASF36:
 2929 034c 6368616E 		.ascii	"chan\000"
 2929      00
 2930              	.LASF18:
 2931 0351 63686172 		.ascii	"char\000"
 2931      00
 2932              	.LASF20:
 2933 0356 63796973 		.ascii	"cyisraddress\000"
 2933      72616464 
 2933      72657373 
 2933      00
 2934              	.LASF57:
 2935 0363 4144435F 		.ascii	"ADC_channelsConfig\000"
 2935      6368616E 
 2935      6E656C73 
 2935      436F6E66 
 2935      696700
 2936              	.LASF48:
 2937 0376 6F666673 		.ascii	"offset\000"
 2937      657400
 2938              	.LASF52:
 2939 037d 61646343 		.ascii	"adcCounts\000"
 2939      6F756E74 
 2939      7300
 2940              	.LASF27:
 2941 0387 4144435F 		.ascii	"ADC_Enable\000"
 2941      456E6162 
 2941      6C6500
 2942              	.LASF12:
 2943 0392 696E7431 		.ascii	"int16\000"
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccNQUYgB.s 			page 71


 2943      3600
 2944              	.LASF47:
 2945 0398 4144435F 		.ascii	"ADC_SetOffset\000"
 2945      5365744F 
 2945      66667365 
 2945      7400
 2946              	.LASF37:
 2947 03a6 72657375 		.ascii	"result\000"
 2947      6C7400
 2948              	.LASF34:
 2949 03ad 4144435F 		.ascii	"ADC_GetResult16\000"
 2949      47657452 
 2949      6573756C 
 2949      74313600 
 2950              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
