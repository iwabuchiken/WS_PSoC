ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_ScbModePostEnable,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	UART_ScbModePostEnable, %function
  22              	UART_ScbModePostEnable:
  23              	.LFB7:
  24              		.file 1 ".\\Generated_Source\\PSoC4\\UART.c"
   1:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC4/UART.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART.c **** *
   5:.\Generated_Source\PSoC4/UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART.c **** *  This file provides the source code to the API for the SCB Component.
   7:.\Generated_Source\PSoC4/UART.c **** *
   8:.\Generated_Source\PSoC4/UART.c **** * Note:
   9:.\Generated_Source\PSoC4/UART.c **** *
  10:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************
  11:.\Generated_Source\PSoC4/UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART.c **** 
  17:.\Generated_Source\PSoC4/UART.c **** #include "UART_PVT.h"
  18:.\Generated_Source\PSoC4/UART.c **** 
  19:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_I2C_INC)
  20:.\Generated_Source\PSoC4/UART.c ****     #include "UART_I2C_PVT.h"
  21:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_I2C_INC) */
  22:.\Generated_Source\PSoC4/UART.c **** 
  23:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_EZI2C_INC)
  24:.\Generated_Source\PSoC4/UART.c ****     #include "UART_EZI2C_PVT.h"
  25:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_EZI2C_INC) */
  26:.\Generated_Source\PSoC4/UART.c **** 
  27:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC)
  28:.\Generated_Source\PSoC4/UART.c ****     #include "UART_SPI_UART_PVT.h"
  29:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC) */
  30:.\Generated_Source\PSoC4/UART.c **** 
  31:.\Generated_Source\PSoC4/UART.c **** 
  32:.\Generated_Source\PSoC4/UART.c **** /***************************************
  33:.\Generated_Source\PSoC4/UART.c **** *    Run Time Configuration Vars
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 2


  34:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  35:.\Generated_Source\PSoC4/UART.c **** 
  36:.\Generated_Source\PSoC4/UART.c **** /* Stores internal component configuration for Unconfigured mode */
  37:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/UART.c ****     /* Common configuration variables */
  39:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_scbMode = UART_SCB_MODE_UNCONFIG;
  40:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableWake;
  41:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableIntr;
  42:.\Generated_Source\PSoC4/UART.c **** 
  43:.\Generated_Source\PSoC4/UART.c ****     /* I2C configuration variables */
  44:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_mode;
  45:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_acceptAddr;
  46:.\Generated_Source\PSoC4/UART.c **** 
  47:.\Generated_Source\PSoC4/UART.c ****     /* SPI/UART configuration variables */
  48:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_rxBuffer;
  49:.\Generated_Source\PSoC4/UART.c ****     uint8  UART_rxDataBits;
  50:.\Generated_Source\PSoC4/UART.c ****     uint32 UART_rxBufferSize;
  51:.\Generated_Source\PSoC4/UART.c **** 
  52:.\Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_txBuffer;
  53:.\Generated_Source\PSoC4/UART.c ****     uint8  UART_txDataBits;
  54:.\Generated_Source\PSoC4/UART.c ****     uint32 UART_txBufferSize;
  55:.\Generated_Source\PSoC4/UART.c **** 
  56:.\Generated_Source\PSoC4/UART.c ****     /* EZI2C configuration variables */
  57:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_numberOfAddr;
  58:.\Generated_Source\PSoC4/UART.c ****     uint8 UART_subAddrSize;
  59:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
  60:.\Generated_Source\PSoC4/UART.c **** 
  61:.\Generated_Source\PSoC4/UART.c **** 
  62:.\Generated_Source\PSoC4/UART.c **** /***************************************
  63:.\Generated_Source\PSoC4/UART.c **** *     Common SCB Vars
  64:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  65:.\Generated_Source\PSoC4/UART.c **** 
  66:.\Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  67:.\Generated_Source\PSoC4/UART.c **** 
  68:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
  69:.\Generated_Source\PSoC4/UART.c **** #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
  70:.\Generated_Source\PSoC4/UART.c ****     void (*UART_customIntrHandler)(void) = NULL;
  71:.\Generated_Source\PSoC4/UART.c **** #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
  72:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
  73:.\Generated_Source\PSoC4/UART.c **** 
  74:.\Generated_Source\PSoC4/UART.c **** 
  75:.\Generated_Source\PSoC4/UART.c **** /***************************************
  76:.\Generated_Source\PSoC4/UART.c **** *    Private Function Prototypes
  77:.\Generated_Source\PSoC4/UART.c **** ***************************************/
  78:.\Generated_Source\PSoC4/UART.c **** 
  79:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void);
  80:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void);
  81:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void);
  82:.\Generated_Source\PSoC4/UART.c **** 
  83:.\Generated_Source\PSoC4/UART.c **** 
  84:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
  86:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
  87:.\Generated_Source\PSoC4/UART.c **** *
  88:.\Generated_Source\PSoC4/UART.c **** * Summary:
  89:.\Generated_Source\PSoC4/UART.c **** *  Initializes the SCB component to operate in one of the selected
  90:.\Generated_Source\PSoC4/UART.c **** *  configurations: I2C, SPI, UART or EZI2C.
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 3


  91:.\Generated_Source\PSoC4/UART.c **** *  When the configuration is set to "Unconfigured SCB", this function does
  92:.\Generated_Source\PSoC4/UART.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
  93:.\Generated_Source\PSoC4/UART.c **** *  SCB_I2CInit, SCB_SpiInit, SCB_UartInit or SCB_EzI2CInit.
  94:.\Generated_Source\PSoC4/UART.c **** *
  95:.\Generated_Source\PSoC4/UART.c **** * Parameters:
  96:.\Generated_Source\PSoC4/UART.c **** *  None
  97:.\Generated_Source\PSoC4/UART.c **** *
  98:.\Generated_Source\PSoC4/UART.c **** * Return:
  99:.\Generated_Source\PSoC4/UART.c **** *  None
 100:.\Generated_Source\PSoC4/UART.c **** *
 101:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 102:.\Generated_Source\PSoC4/UART.c **** void UART_Init(void)
 103:.\Generated_Source\PSoC4/UART.c **** {
 104:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 105:.\Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 106:.\Generated_Source\PSoC4/UART.c ****     {
 107:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 0u;
 108:.\Generated_Source\PSoC4/UART.c ****     }
 109:.\Generated_Source\PSoC4/UART.c ****     else
 110:.\Generated_Source\PSoC4/UART.c ****     {
 111:.\Generated_Source\PSoC4/UART.c ****         /* Initialization was done before this function call */
 112:.\Generated_Source\PSoC4/UART.c ****     }
 113:.\Generated_Source\PSoC4/UART.c **** 
 114:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 115:.\Generated_Source\PSoC4/UART.c ****     UART_I2CInit();
 116:.\Generated_Source\PSoC4/UART.c **** 
 117:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 118:.\Generated_Source\PSoC4/UART.c ****     UART_SpiInit();
 119:.\Generated_Source\PSoC4/UART.c **** 
 120:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 121:.\Generated_Source\PSoC4/UART.c ****     UART_UartInit();
 122:.\Generated_Source\PSoC4/UART.c **** 
 123:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 124:.\Generated_Source\PSoC4/UART.c ****     UART_EzI2CInit();
 125:.\Generated_Source\PSoC4/UART.c **** 
 126:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 127:.\Generated_Source\PSoC4/UART.c **** }
 128:.\Generated_Source\PSoC4/UART.c **** 
 129:.\Generated_Source\PSoC4/UART.c **** 
 130:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 131:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 132:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 133:.\Generated_Source\PSoC4/UART.c **** *
 134:.\Generated_Source\PSoC4/UART.c **** * Summary:
 135:.\Generated_Source\PSoC4/UART.c **** *  Enables the SCB component operation.
 136:.\Generated_Source\PSoC4/UART.c **** *  The SCB configuration should be not changed when the component is enabled.
 137:.\Generated_Source\PSoC4/UART.c **** *  Any configuration changes should be made after disabling the component.
 138:.\Generated_Source\PSoC4/UART.c **** *
 139:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 140:.\Generated_Source\PSoC4/UART.c **** *  None
 141:.\Generated_Source\PSoC4/UART.c **** *
 142:.\Generated_Source\PSoC4/UART.c **** * Return:
 143:.\Generated_Source\PSoC4/UART.c **** *  None
 144:.\Generated_Source\PSoC4/UART.c **** *
 145:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 146:.\Generated_Source\PSoC4/UART.c **** void UART_Enable(void)
 147:.\Generated_Source\PSoC4/UART.c **** {
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 4


 148:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 149:.\Generated_Source\PSoC4/UART.c ****     /* Enable SCB block, only if it is already configured */
 150:.\Generated_Source\PSoC4/UART.c ****     if (!UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 151:.\Generated_Source\PSoC4/UART.c ****     {
 152:.\Generated_Source\PSoC4/UART.c ****         UART_CTRL_REG |= UART_CTRL_ENABLED;
 153:.\Generated_Source\PSoC4/UART.c **** 
 154:.\Generated_Source\PSoC4/UART.c ****         UART_ScbEnableIntr();
 155:.\Generated_Source\PSoC4/UART.c **** 
 156:.\Generated_Source\PSoC4/UART.c ****         /* Call PostEnable function specific to current operation mode */
 157:.\Generated_Source\PSoC4/UART.c ****         UART_ScbModePostEnable();
 158:.\Generated_Source\PSoC4/UART.c ****     }
 159:.\Generated_Source\PSoC4/UART.c **** #else
 160:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG |= UART_CTRL_ENABLED;
 161:.\Generated_Source\PSoC4/UART.c **** 
 162:.\Generated_Source\PSoC4/UART.c ****     UART_ScbEnableIntr();
 163:.\Generated_Source\PSoC4/UART.c **** 
 164:.\Generated_Source\PSoC4/UART.c ****     /* Call PostEnable function specific to current operation mode */
 165:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModePostEnable();
 166:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 167:.\Generated_Source\PSoC4/UART.c **** }
 168:.\Generated_Source\PSoC4/UART.c **** 
 169:.\Generated_Source\PSoC4/UART.c **** 
 170:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
 172:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 173:.\Generated_Source\PSoC4/UART.c **** *
 174:.\Generated_Source\PSoC4/UART.c **** * Summary:
 175:.\Generated_Source\PSoC4/UART.c **** *  Invokes SCB_Init() and SCB_Enable().
 176:.\Generated_Source\PSoC4/UART.c **** *  After this function call, the component is enabled and ready for operation.
 177:.\Generated_Source\PSoC4/UART.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 178:.\Generated_Source\PSoC4/UART.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 179:.\Generated_Source\PSoC4/UART.c **** *  or EZ I2C. Otherwise this function does not enable the component.
 180:.\Generated_Source\PSoC4/UART.c **** *
 181:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 182:.\Generated_Source\PSoC4/UART.c **** *  None
 183:.\Generated_Source\PSoC4/UART.c **** *
 184:.\Generated_Source\PSoC4/UART.c **** * Return:
 185:.\Generated_Source\PSoC4/UART.c **** *  None
 186:.\Generated_Source\PSoC4/UART.c **** *
 187:.\Generated_Source\PSoC4/UART.c **** * Global variables:
 188:.\Generated_Source\PSoC4/UART.c **** *  UART_initVar - used to check initial configuration, modified
 189:.\Generated_Source\PSoC4/UART.c **** *  on first function call.
 190:.\Generated_Source\PSoC4/UART.c **** *
 191:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC4/UART.c **** void UART_Start(void)
 193:.\Generated_Source\PSoC4/UART.c **** {
 194:.\Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 195:.\Generated_Source\PSoC4/UART.c ****     {
 196:.\Generated_Source\PSoC4/UART.c ****         UART_Init();
 197:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
 198:.\Generated_Source\PSoC4/UART.c ****     }
 199:.\Generated_Source\PSoC4/UART.c **** 
 200:.\Generated_Source\PSoC4/UART.c ****     UART_Enable();
 201:.\Generated_Source\PSoC4/UART.c **** }
 202:.\Generated_Source\PSoC4/UART.c **** 
 203:.\Generated_Source\PSoC4/UART.c **** 
 204:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 5


 205:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 206:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 207:.\Generated_Source\PSoC4/UART.c **** *
 208:.\Generated_Source\PSoC4/UART.c **** * Summary:
 209:.\Generated_Source\PSoC4/UART.c **** *  Disables the SCB component and its interrupt.
 210:.\Generated_Source\PSoC4/UART.c **** *  It also disables all TX interrupt sources so as not to cause an unexpected
 211:.\Generated_Source\PSoC4/UART.c **** *  interrupt trigger because after the component is enabled, the TX FIFO 
 212:.\Generated_Source\PSoC4/UART.c **** *  is empty.
 213:.\Generated_Source\PSoC4/UART.c **** *
 214:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 215:.\Generated_Source\PSoC4/UART.c **** *  None
 216:.\Generated_Source\PSoC4/UART.c **** *
 217:.\Generated_Source\PSoC4/UART.c **** * Return:
 218:.\Generated_Source\PSoC4/UART.c **** *  None
 219:.\Generated_Source\PSoC4/UART.c **** * 
 220:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 221:.\Generated_Source\PSoC4/UART.c **** void UART_Stop(void)
 222:.\Generated_Source\PSoC4/UART.c **** {
 223:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 224:.\Generated_Source\PSoC4/UART.c ****     UART_DisableInt();
 225:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 226:.\Generated_Source\PSoC4/UART.c **** 
 227:.\Generated_Source\PSoC4/UART.c ****     /* Call Stop function specific to current operation mode */
 228:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModeStop();
 229:.\Generated_Source\PSoC4/UART.c **** 
 230:.\Generated_Source\PSoC4/UART.c ****     /* Disable SCB IP */
 231:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG &= (uint32) ~UART_CTRL_ENABLED;
 232:.\Generated_Source\PSoC4/UART.c **** 
 233:.\Generated_Source\PSoC4/UART.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 234:.\Generated_Source\PSoC4/UART.c ****     * interrupt trigger because after the component is enabled, the TX FIFO
 235:.\Generated_Source\PSoC4/UART.c ****     * is empty.
 236:.\Generated_Source\PSoC4/UART.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 237:.\Generated_Source\PSoC4/UART.c ****     * sources when they are disabled. This can cause a code lock-up in the
 238:.\Generated_Source\PSoC4/UART.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 239:.\Generated_Source\PSoC4/UART.c ****     * is disabled.
 240:.\Generated_Source\PSoC4/UART.c ****     */
 241:.\Generated_Source\PSoC4/UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 242:.\Generated_Source\PSoC4/UART.c **** 
 243:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 244:.\Generated_Source\PSoC4/UART.c ****     UART_ClearPendingInt();
 245:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 246:.\Generated_Source\PSoC4/UART.c **** }
 247:.\Generated_Source\PSoC4/UART.c **** 
 248:.\Generated_Source\PSoC4/UART.c **** 
 249:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 250:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetRxFifoLevel
 251:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 252:.\Generated_Source\PSoC4/UART.c **** *
 253:.\Generated_Source\PSoC4/UART.c **** * Summary:
 254:.\Generated_Source\PSoC4/UART.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 255:.\Generated_Source\PSoC4/UART.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 256:.\Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 257:.\Generated_Source\PSoC4/UART.c **** *
 258:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 259:.\Generated_Source\PSoC4/UART.c **** *  level: Level in the RX FIFO to generate RX level interrupt.
 260:.\Generated_Source\PSoC4/UART.c **** *         The range of valid level values is between 0 and RX FIFO depth - 1.
 261:.\Generated_Source\PSoC4/UART.c **** *
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 6


 262:.\Generated_Source\PSoC4/UART.c **** * Return:
 263:.\Generated_Source\PSoC4/UART.c **** *  None
 264:.\Generated_Source\PSoC4/UART.c **** *
 265:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 266:.\Generated_Source\PSoC4/UART.c **** void UART_SetRxFifoLevel(uint32 level)
 267:.\Generated_Source\PSoC4/UART.c **** {
 268:.\Generated_Source\PSoC4/UART.c ****     uint32 rxFifoCtrl;
 269:.\Generated_Source\PSoC4/UART.c **** 
 270:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl = UART_RX_FIFO_CTRL_REG;
 271:.\Generated_Source\PSoC4/UART.c **** 
 272:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl &= ((uint32) ~UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 273:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 274:.\Generated_Source\PSoC4/UART.c **** 
 275:.\Generated_Source\PSoC4/UART.c ****     UART_RX_FIFO_CTRL_REG = rxFifoCtrl;
 276:.\Generated_Source\PSoC4/UART.c **** }
 277:.\Generated_Source\PSoC4/UART.c **** 
 278:.\Generated_Source\PSoC4/UART.c **** 
 279:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetTxFifoLevel
 281:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/UART.c **** *
 283:.\Generated_Source\PSoC4/UART.c **** * Summary:
 284:.\Generated_Source\PSoC4/UART.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 285:.\Generated_Source\PSoC4/UART.c **** *  When the TX FIFO has more entries than the TX FIFO level an TX level
 286:.\Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 287:.\Generated_Source\PSoC4/UART.c **** *
 288:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART.c **** *  level: Level in the TX FIFO to generate TX level interrupt.
 290:.\Generated_Source\PSoC4/UART.c **** *         The range of valid level values is between 0 and TX FIFO depth - 1.
 291:.\Generated_Source\PSoC4/UART.c **** *
 292:.\Generated_Source\PSoC4/UART.c **** * Return:
 293:.\Generated_Source\PSoC4/UART.c **** *  None
 294:.\Generated_Source\PSoC4/UART.c **** *
 295:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 296:.\Generated_Source\PSoC4/UART.c **** void UART_SetTxFifoLevel(uint32 level)
 297:.\Generated_Source\PSoC4/UART.c **** {
 298:.\Generated_Source\PSoC4/UART.c ****     uint32 txFifoCtrl;
 299:.\Generated_Source\PSoC4/UART.c **** 
 300:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl = UART_TX_FIFO_CTRL_REG;
 301:.\Generated_Source\PSoC4/UART.c **** 
 302:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl &= ((uint32) ~UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 303:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 304:.\Generated_Source\PSoC4/UART.c **** 
 305:.\Generated_Source\PSoC4/UART.c ****     UART_TX_FIFO_CTRL_REG = txFifoCtrl;
 306:.\Generated_Source\PSoC4/UART.c **** }
 307:.\Generated_Source\PSoC4/UART.c **** 
 308:.\Generated_Source\PSoC4/UART.c **** 
 309:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 310:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 311:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetCustomInterruptHandler
 312:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 313:.\Generated_Source\PSoC4/UART.c ****     *
 314:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 315:.\Generated_Source\PSoC4/UART.c ****     *  Registers a function to be called by the internal interrupt handler.
 316:.\Generated_Source\PSoC4/UART.c ****     *  First the function that is registered is called, then the internal interrupt
 317:.\Generated_Source\PSoC4/UART.c ****     *  handler performs any operation such as software buffer management functions
 318:.\Generated_Source\PSoC4/UART.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 7


 319:.\Generated_Source\PSoC4/UART.c ****     *  the software buffer operations. Only one custom handler is supported, which
 320:.\Generated_Source\PSoC4/UART.c ****     *  is the function provided by the most recent call.
 321:.\Generated_Source\PSoC4/UART.c ****     *  At the initialization time no custom handler is registered.
 322:.\Generated_Source\PSoC4/UART.c ****     *
 323:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 324:.\Generated_Source\PSoC4/UART.c ****     *  func: Pointer to the function to register.
 325:.\Generated_Source\PSoC4/UART.c ****     *        The value NULL indicates to remove the current custom interrupt
 326:.\Generated_Source\PSoC4/UART.c ****     *        handler.
 327:.\Generated_Source\PSoC4/UART.c ****     *
 328:.\Generated_Source\PSoC4/UART.c ****     * Return:
 329:.\Generated_Source\PSoC4/UART.c ****     *  None
 330:.\Generated_Source\PSoC4/UART.c ****     *
 331:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 332:.\Generated_Source\PSoC4/UART.c ****     void UART_SetCustomInterruptHandler(void (*func)(void))
 333:.\Generated_Source\PSoC4/UART.c ****     {
 334:.\Generated_Source\PSoC4/UART.c ****     #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
 335:.\Generated_Source\PSoC4/UART.c ****         UART_customIntrHandler = func; /* Register interrupt handler */
 336:.\Generated_Source\PSoC4/UART.c ****     #else
 337:.\Generated_Source\PSoC4/UART.c ****         if (NULL != func)
 338:.\Generated_Source\PSoC4/UART.c ****         {
 339:.\Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 340:.\Generated_Source\PSoC4/UART.c ****         }
 341:.\Generated_Source\PSoC4/UART.c ****     #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
 342:.\Generated_Source\PSoC4/UART.c ****     }
 343:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 344:.\Generated_Source\PSoC4/UART.c **** 
 345:.\Generated_Source\PSoC4/UART.c **** 
 346:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 347:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeEnableIntr
 348:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 349:.\Generated_Source\PSoC4/UART.c **** *
 350:.\Generated_Source\PSoC4/UART.c **** * Summary:
 351:.\Generated_Source\PSoC4/UART.c **** *  Enables an interrupt for a specific mode.
 352:.\Generated_Source\PSoC4/UART.c **** *
 353:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 354:.\Generated_Source\PSoC4/UART.c **** *  None
 355:.\Generated_Source\PSoC4/UART.c **** *
 356:.\Generated_Source\PSoC4/UART.c **** * Return:
 357:.\Generated_Source\PSoC4/UART.c **** *  None
 358:.\Generated_Source\PSoC4/UART.c **** *
 359:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void)
 361:.\Generated_Source\PSoC4/UART.c **** {
 362:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 363:.\Generated_Source\PSoC4/UART.c ****     /* Enable interrupt in NVIC */
 364:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 365:.\Generated_Source\PSoC4/UART.c ****         if (0u != UART_scbEnableIntr)
 366:.\Generated_Source\PSoC4/UART.c ****         {
 367:.\Generated_Source\PSoC4/UART.c ****             UART_EnableInt();
 368:.\Generated_Source\PSoC4/UART.c ****         }
 369:.\Generated_Source\PSoC4/UART.c **** 
 370:.\Generated_Source\PSoC4/UART.c ****     #else
 371:.\Generated_Source\PSoC4/UART.c ****         UART_EnableInt();
 372:.\Generated_Source\PSoC4/UART.c **** 
 373:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 374:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 375:.\Generated_Source\PSoC4/UART.c **** }
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 8


 376:.\Generated_Source\PSoC4/UART.c **** 
 377:.\Generated_Source\PSoC4/UART.c **** 
 378:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 379:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModePostEnable
 380:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 381:.\Generated_Source\PSoC4/UART.c **** *
 382:.\Generated_Source\PSoC4/UART.c **** * Summary:
 383:.\Generated_Source\PSoC4/UART.c **** *  Calls the PostEnable function for a specific operation mode.
 384:.\Generated_Source\PSoC4/UART.c **** *
 385:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 386:.\Generated_Source\PSoC4/UART.c **** *  None
 387:.\Generated_Source\PSoC4/UART.c **** *
 388:.\Generated_Source\PSoC4/UART.c **** * Return:
 389:.\Generated_Source\PSoC4/UART.c **** *  None
 390:.\Generated_Source\PSoC4/UART.c **** *
 391:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void)
 393:.\Generated_Source\PSoC4/UART.c **** {
  25              		.loc 1 393 0
  26              		.cfi_startproc
  27 0000 08B5     		push	{r3, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 3, -8
  30              		.cfi_offset 14, -4
 394:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 395:.\Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 396:.\Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_SPI_RUNTM_CFG)
 397:.\Generated_Source\PSoC4/UART.c ****     {
 398:.\Generated_Source\PSoC4/UART.c ****         UART_SpiPostEnable();
 399:.\Generated_Source\PSoC4/UART.c ****     }
 400:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 401:.\Generated_Source\PSoC4/UART.c ****     {
 402:.\Generated_Source\PSoC4/UART.c ****         UART_UartPostEnable();
 403:.\Generated_Source\PSoC4/UART.c ****     }
 404:.\Generated_Source\PSoC4/UART.c ****     else
 405:.\Generated_Source\PSoC4/UART.c ****     {
 406:.\Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 407:.\Generated_Source\PSoC4/UART.c ****     }
 408:.\Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 409:.\Generated_Source\PSoC4/UART.c **** 
 410:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 411:.\Generated_Source\PSoC4/UART.c ****     UART_SpiPostEnable();
 412:.\Generated_Source\PSoC4/UART.c **** 
 413:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 414:.\Generated_Source\PSoC4/UART.c ****     UART_UartPostEnable();
  31              		.loc 1 414 0
  32 0002 FFF7FEFF 		bl	UART_UartPostEnable
  33              	.LVL0:
 415:.\Generated_Source\PSoC4/UART.c **** 
 416:.\Generated_Source\PSoC4/UART.c **** #else
 417:.\Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 418:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 419:.\Generated_Source\PSoC4/UART.c **** }
  34              		.loc 1 419 0
  35              		@ sp needed
  36 0006 08BD     		pop	{r3, pc}
  37              		.cfi_endproc
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 9


  38              	.LFE7:
  39              		.size	UART_ScbModePostEnable, .-UART_ScbModePostEnable
  40              		.section	.text.UART_ScbModeStop,"ax",%progbits
  41              		.align	2
  42              		.code	16
  43              		.thumb_func
  44              		.type	UART_ScbModeStop, %function
  45              	UART_ScbModeStop:
  46              	.LFB8:
 420:.\Generated_Source\PSoC4/UART.c **** 
 421:.\Generated_Source\PSoC4/UART.c **** 
 422:.\Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeStop
 424:.\Generated_Source\PSoC4/UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART.c **** *
 426:.\Generated_Source\PSoC4/UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART.c **** *  Calls the Stop function for a specific operation mode.
 428:.\Generated_Source\PSoC4/UART.c **** *
 429:.\Generated_Source\PSoC4/UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART.c **** *  None
 431:.\Generated_Source\PSoC4/UART.c **** *
 432:.\Generated_Source\PSoC4/UART.c **** * Return:
 433:.\Generated_Source\PSoC4/UART.c **** *  None
 434:.\Generated_Source\PSoC4/UART.c **** *
 435:.\Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void)
 437:.\Generated_Source\PSoC4/UART.c **** {
  47              		.loc 1 437 0
  48              		.cfi_startproc
  49 0000 08B5     		push	{r3, lr}
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 3, -8
  52              		.cfi_offset 14, -4
 438:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 439:.\Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_I2C_RUNTM_CFG)
 440:.\Generated_Source\PSoC4/UART.c ****     {
 441:.\Generated_Source\PSoC4/UART.c ****         UART_I2CStop();
 442:.\Generated_Source\PSoC4/UART.c ****     }
 443:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_EZI2C_RUNTM_CFG)
 444:.\Generated_Source\PSoC4/UART.c ****     {
 445:.\Generated_Source\PSoC4/UART.c ****         UART_EzI2CStop();
 446:.\Generated_Source\PSoC4/UART.c ****     }
 447:.\Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 448:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_SPI_RUNTM_CFG)
 449:.\Generated_Source\PSoC4/UART.c ****     {
 450:.\Generated_Source\PSoC4/UART.c ****         UART_SpiStop();
 451:.\Generated_Source\PSoC4/UART.c ****     }
 452:.\Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 453:.\Generated_Source\PSoC4/UART.c ****     {
 454:.\Generated_Source\PSoC4/UART.c ****         UART_UartStop();
 455:.\Generated_Source\PSoC4/UART.c ****     }
 456:.\Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 457:.\Generated_Source\PSoC4/UART.c ****     else
 458:.\Generated_Source\PSoC4/UART.c ****     {
 459:.\Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 460:.\Generated_Source\PSoC4/UART.c ****     }
 461:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 10


 462:.\Generated_Source\PSoC4/UART.c ****     UART_I2CStop();
 463:.\Generated_Source\PSoC4/UART.c **** 
 464:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 465:.\Generated_Source\PSoC4/UART.c ****     UART_EzI2CStop();
 466:.\Generated_Source\PSoC4/UART.c **** 
 467:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 468:.\Generated_Source\PSoC4/UART.c ****     UART_SpiStop();
 469:.\Generated_Source\PSoC4/UART.c **** 
 470:.\Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 471:.\Generated_Source\PSoC4/UART.c ****     UART_UartStop();
  53              		.loc 1 471 0
  54 0002 FFF7FEFF 		bl	UART_UartStop
  55              	.LVL1:
 472:.\Generated_Source\PSoC4/UART.c **** 
 473:.\Generated_Source\PSoC4/UART.c **** #else
 474:.\Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 475:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 476:.\Generated_Source\PSoC4/UART.c **** }
  56              		.loc 1 476 0
  57              		@ sp needed
  58 0006 08BD     		pop	{r3, pc}
  59              		.cfi_endproc
  60              	.LFE8:
  61              		.size	UART_ScbModeStop, .-UART_ScbModeStop
  62              		.section	.text.UART_Init,"ax",%progbits
  63              		.align	2
  64              		.global	UART_Init
  65              		.code	16
  66              		.thumb_func
  67              		.type	UART_Init, %function
  68              	UART_Init:
  69              	.LFB0:
 103:.\Generated_Source\PSoC4/UART.c **** {
  70              		.loc 1 103 0
  71              		.cfi_startproc
  72 0000 08B5     		push	{r3, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 3, -8
  75              		.cfi_offset 14, -4
 121:.\Generated_Source\PSoC4/UART.c ****     UART_UartInit();
  76              		.loc 1 121 0
  77 0002 FFF7FEFF 		bl	UART_UartInit
  78              	.LVL2:
 127:.\Generated_Source\PSoC4/UART.c **** }
  79              		.loc 1 127 0
  80              		@ sp needed
  81 0006 08BD     		pop	{r3, pc}
  82              		.cfi_endproc
  83              	.LFE0:
  84              		.size	UART_Init, .-UART_Init
  85              		.section	.text.UART_Enable,"ax",%progbits
  86              		.align	2
  87              		.global	UART_Enable
  88              		.code	16
  89              		.thumb_func
  90              		.type	UART_Enable, %function
  91              	UART_Enable:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 11


  92              	.LFB1:
 147:.\Generated_Source\PSoC4/UART.c **** {
  93              		.loc 1 147 0
  94              		.cfi_startproc
  95 0000 08B5     		push	{r3, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 3, -8
  98              		.cfi_offset 14, -4
 160:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG |= UART_CTRL_ENABLED;
  99              		.loc 1 160 0
 100 0002 044B     		ldr	r3, .L5
 101 0004 1968     		ldr	r1, [r3]
 102 0006 8022     		mov	r2, #128
 103 0008 1206     		lsl	r2, r2, #24
 104 000a 0A43     		orr	r2, r1
 105 000c 1A60     		str	r2, [r3]
 165:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModePostEnable();
 106              		.loc 1 165 0
 107 000e FFF7FEFF 		bl	UART_ScbModePostEnable
 108              	.LVL3:
 167:.\Generated_Source\PSoC4/UART.c **** }
 109              		.loc 1 167 0
 110              		@ sp needed
 111 0012 08BD     		pop	{r3, pc}
 112              	.L6:
 113              		.align	2
 114              	.L5:
 115 0014 00000640 		.word	1074135040
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	UART_Enable, .-UART_Enable
 119              		.section	.text.UART_Start,"ax",%progbits
 120              		.align	2
 121              		.global	UART_Start
 122              		.code	16
 123              		.thumb_func
 124              		.type	UART_Start, %function
 125              	UART_Start:
 126              	.LFB2:
 193:.\Generated_Source\PSoC4/UART.c **** {
 127              		.loc 1 193 0
 128              		.cfi_startproc
 129 0000 08B5     		push	{r3, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
 194:.\Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 133              		.loc 1 194 0
 134 0002 064B     		ldr	r3, .L9
 135 0004 1B78     		ldrb	r3, [r3]
 136 0006 002B     		cmp	r3, #0
 137 0008 04D1     		bne	.L8
 196:.\Generated_Source\PSoC4/UART.c ****         UART_Init();
 138              		.loc 1 196 0
 139 000a FFF7FEFF 		bl	UART_Init
 140              	.LVL4:
 197:.\Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 12


 141              		.loc 1 197 0
 142 000e 0122     		mov	r2, #1
 143 0010 024B     		ldr	r3, .L9
 144 0012 1A70     		strb	r2, [r3]
 145              	.L8:
 200:.\Generated_Source\PSoC4/UART.c ****     UART_Enable();
 146              		.loc 1 200 0
 147 0014 FFF7FEFF 		bl	UART_Enable
 148              	.LVL5:
 201:.\Generated_Source\PSoC4/UART.c **** }
 149              		.loc 1 201 0
 150              		@ sp needed
 151 0018 08BD     		pop	{r3, pc}
 152              	.L10:
 153 001a C046     		.align	2
 154              	.L9:
 155 001c 00000000 		.word	.LANCHOR0
 156              		.cfi_endproc
 157              	.LFE2:
 158              		.size	UART_Start, .-UART_Start
 159              		.section	.text.UART_Stop,"ax",%progbits
 160              		.align	2
 161              		.global	UART_Stop
 162              		.code	16
 163              		.thumb_func
 164              		.type	UART_Stop, %function
 165              	UART_Stop:
 166              	.LFB3:
 222:.\Generated_Source\PSoC4/UART.c **** {
 167              		.loc 1 222 0
 168              		.cfi_startproc
 169 0000 08B5     		push	{r3, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
 228:.\Generated_Source\PSoC4/UART.c ****     UART_ScbModeStop();
 173              		.loc 1 228 0
 174 0002 FFF7FEFF 		bl	UART_ScbModeStop
 175              	.LVL6:
 231:.\Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG &= (uint32) ~UART_CTRL_ENABLED;
 176              		.loc 1 231 0
 177 0006 044B     		ldr	r3, .L12
 178 0008 1A68     		ldr	r2, [r3]
 179 000a 5200     		lsl	r2, r2, #1
 180 000c 5208     		lsr	r2, r2, #1
 181 000e 1A60     		str	r2, [r3]
 241:.\Generated_Source\PSoC4/UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 182              		.loc 1 241 0
 183 0010 0022     		mov	r2, #0
 184 0012 024B     		ldr	r3, .L12+4
 185 0014 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/UART.c **** }
 186              		.loc 1 246 0
 187              		@ sp needed
 188 0016 08BD     		pop	{r3, pc}
 189              	.L13:
 190              		.align	2
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 13


 191              	.L12:
 192 0018 00000640 		.word	1074135040
 193 001c 880F0640 		.word	1074139016
 194              		.cfi_endproc
 195              	.LFE3:
 196              		.size	UART_Stop, .-UART_Stop
 197              		.section	.text.UART_SetRxFifoLevel,"ax",%progbits
 198              		.align	2
 199              		.global	UART_SetRxFifoLevel
 200              		.code	16
 201              		.thumb_func
 202              		.type	UART_SetRxFifoLevel, %function
 203              	UART_SetRxFifoLevel:
 204              	.LFB4:
 267:.\Generated_Source\PSoC4/UART.c **** {
 205              		.loc 1 267 0
 206              		.cfi_startproc
 207              	.LVL7:
 270:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl = UART_RX_FIFO_CTRL_REG;
 208              		.loc 1 270 0
 209 0000 034B     		ldr	r3, .L15
 210 0002 1968     		ldr	r1, [r3]
 211              	.LVL8:
 272:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl &= ((uint32) ~UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 212              		.loc 1 272 0
 213 0004 0722     		mov	r2, #7
 214 0006 9143     		bic	r1, r2
 215              	.LVL9:
 273:.\Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 216              		.loc 1 273 0
 217 0008 0240     		and	r2, r0
 218 000a 0A43     		orr	r2, r1
 219              	.LVL10:
 275:.\Generated_Source\PSoC4/UART.c ****     UART_RX_FIFO_CTRL_REG = rxFifoCtrl;
 220              		.loc 1 275 0
 221 000c 1A60     		str	r2, [r3]
 276:.\Generated_Source\PSoC4/UART.c **** }
 222              		.loc 1 276 0
 223              		@ sp needed
 224 000e 7047     		bx	lr
 225              	.L16:
 226              		.align	2
 227              	.L15:
 228 0010 04030640 		.word	1074135812
 229              		.cfi_endproc
 230              	.LFE4:
 231              		.size	UART_SetRxFifoLevel, .-UART_SetRxFifoLevel
 232              		.section	.text.UART_SetTxFifoLevel,"ax",%progbits
 233              		.align	2
 234              		.global	UART_SetTxFifoLevel
 235              		.code	16
 236              		.thumb_func
 237              		.type	UART_SetTxFifoLevel, %function
 238              	UART_SetTxFifoLevel:
 239              	.LFB5:
 297:.\Generated_Source\PSoC4/UART.c **** {
 240              		.loc 1 297 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 14


 241              		.cfi_startproc
 242              	.LVL11:
 300:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl = UART_TX_FIFO_CTRL_REG;
 243              		.loc 1 300 0
 244 0000 034B     		ldr	r3, .L18
 245 0002 1968     		ldr	r1, [r3]
 246              	.LVL12:
 302:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl &= ((uint32) ~UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 247              		.loc 1 302 0
 248 0004 0722     		mov	r2, #7
 249 0006 9143     		bic	r1, r2
 250              	.LVL13:
 303:.\Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 251              		.loc 1 303 0
 252 0008 0240     		and	r2, r0
 253 000a 0A43     		orr	r2, r1
 254              	.LVL14:
 305:.\Generated_Source\PSoC4/UART.c ****     UART_TX_FIFO_CTRL_REG = txFifoCtrl;
 255              		.loc 1 305 0
 256 000c 1A60     		str	r2, [r3]
 306:.\Generated_Source\PSoC4/UART.c **** }
 257              		.loc 1 306 0
 258              		@ sp needed
 259 000e 7047     		bx	lr
 260              	.L19:
 261              		.align	2
 262              	.L18:
 263 0010 04020640 		.word	1074135556
 264              		.cfi_endproc
 265              	.LFE5:
 266              		.size	UART_SetTxFifoLevel, .-UART_SetTxFifoLevel
 267              		.section	.text.UART_I2CSlaveNackGeneration,"ax",%progbits
 268              		.align	2
 269              		.global	UART_I2CSlaveNackGeneration
 270              		.code	16
 271              		.thumb_func
 272              		.type	UART_I2CSlaveNackGeneration, %function
 273              	UART_I2CSlaveNackGeneration:
 274              	.LFB9:
 477:.\Generated_Source\PSoC4/UART.c **** 
 478:.\Generated_Source\PSoC4/UART.c **** 
 479:.\Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 480:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 481:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetPins
 482:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 483:.\Generated_Source\PSoC4/UART.c ****     *
 484:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 485:.\Generated_Source\PSoC4/UART.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 486:.\Generated_Source\PSoC4/UART.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 487:.\Generated_Source\PSoC4/UART.c ****     *  initialization function calls it.
 488:.\Generated_Source\PSoC4/UART.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 489:.\Generated_Source\PSoC4/UART.c ****     *  is selected in design time.
 490:.\Generated_Source\PSoC4/UART.c ****     *
 491:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 492:.\Generated_Source\PSoC4/UART.c ****     *  mode:      Mode of SCB operation.
 493:.\Generated_Source\PSoC4/UART.c ****     *  subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 494:.\Generated_Source\PSoC4/UART.c ****     *             modes.
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 15


 495:.\Generated_Source\PSoC4/UART.c ****     *  uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 496:.\Generated_Source\PSoC4/UART.c ****     *
 497:.\Generated_Source\PSoC4/UART.c ****     * Return:
 498:.\Generated_Source\PSoC4/UART.c ****     *  None
 499:.\Generated_Source\PSoC4/UART.c ****     *
 500:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 501:.\Generated_Source\PSoC4/UART.c ****     void UART_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 502:.\Generated_Source\PSoC4/UART.c ****     {
 503:.\Generated_Source\PSoC4/UART.c ****         uint32 hsiomSel [UART_SCB_PINS_NUMBER];
 504:.\Generated_Source\PSoC4/UART.c ****         uint32 pinsDm   [UART_SCB_PINS_NUMBER];
 505:.\Generated_Source\PSoC4/UART.c **** 
 506:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 507:.\Generated_Source\PSoC4/UART.c ****         uint32 pinsInBuf = 0u;
 508:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 509:.\Generated_Source\PSoC4/UART.c **** 
 510:.\Generated_Source\PSoC4/UART.c ****         uint32 i;
 511:.\Generated_Source\PSoC4/UART.c **** 
 512:.\Generated_Source\PSoC4/UART.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 513:.\Generated_Source\PSoC4/UART.c ****         for (i = 0u; i < UART_SCB_PINS_NUMBER; i++)
 514:.\Generated_Source\PSoC4/UART.c ****         {
 515:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[i]  = UART_HSIOM_DEF_SEL;
 516:.\Generated_Source\PSoC4/UART.c ****             pinsDm[i]    = UART_PIN_DM_ALG_HIZ;
 517:.\Generated_Source\PSoC4/UART.c ****         }
 518:.\Generated_Source\PSoC4/UART.c **** 
 519:.\Generated_Source\PSoC4/UART.c ****         if ((UART_SCB_MODE_I2C   == mode) ||
 520:.\Generated_Source\PSoC4/UART.c ****            (UART_SCB_MODE_EZI2C == mode))
 521:.\Generated_Source\PSoC4/UART.c ****         {
 522:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_HSIOM_I2C_SEL;
 523:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_I2C_SEL;
 524:.\Generated_Source\PSoC4/UART.c **** 
 525:.\Generated_Source\PSoC4/UART.c ****             pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_OD_LO;
 526:.\Generated_Source\PSoC4/UART.c ****             pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 527:.\Generated_Source\PSoC4/UART.c ****         }
 528:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 529:.\Generated_Source\PSoC4/UART.c ****         else if (UART_SCB_MODE_SPI == mode)
 530:.\Generated_Source\PSoC4/UART.c ****         {
 531:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 532:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 533:.\Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_SCLK_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 534:.\Generated_Source\PSoC4/UART.c **** 
 535:.\Generated_Source\PSoC4/UART.c ****             if (UART_SPI_SLAVE == subMode)
 536:.\Generated_Source\PSoC4/UART.c ****             {
 537:.\Generated_Source\PSoC4/UART.c ****                 /* Slave */
 538:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 539:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 540:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 541:.\Generated_Source\PSoC4/UART.c **** 
 542:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 543:.\Generated_Source\PSoC4/UART.c ****                 /* Only SS0 is valid choice for Slave */
 544:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_SS0_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 545:.\Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 546:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 547:.\Generated_Source\PSoC4/UART.c **** 
 548:.\Generated_Source\PSoC4/UART.c ****             #if (UART_TX_SDA_MISO_PIN)
 549:.\Generated_Source\PSoC4/UART.c ****                 /* Disable input buffer */
 550:.\Generated_Source\PSoC4/UART.c ****                  pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 551:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_TX_SDA_MISO_PIN) */
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 16


 552:.\Generated_Source\PSoC4/UART.c ****             }
 553:.\Generated_Source\PSoC4/UART.c ****             else /* (Master) */
 554:.\Generated_Source\PSoC4/UART.c ****             {
 555:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_STRONG;
 556:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 557:.\Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_STRONG;
 558:.\Generated_Source\PSoC4/UART.c **** 
 559:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 560:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS0_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 561:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 562:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS0_PIN_MASK;
 563:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 564:.\Generated_Source\PSoC4/UART.c **** 
 565:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS1_PIN)
 566:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS1_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 567:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS1_PIN_INDEX] = UART_PIN_DM_STRONG;
 568:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS1_PIN_MASK;
 569:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS1_PIN) */
 570:.\Generated_Source\PSoC4/UART.c **** 
 571:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS2_PIN)
 572:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS2_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 573:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS2_PIN_INDEX] = UART_PIN_DM_STRONG;
 574:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS2_PIN_MASK;
 575:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS2_PIN) */
 576:.\Generated_Source\PSoC4/UART.c **** 
 577:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SS3_PIN)
 578:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS3_PIN_INDEX] = UART_HSIOM_SPI_SEL;
 579:.\Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS3_PIN_INDEX] = UART_PIN_DM_STRONG;
 580:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS3_PIN_MASK;
 581:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS3_PIN) */
 582:.\Generated_Source\PSoC4/UART.c **** 
 583:.\Generated_Source\PSoC4/UART.c ****                 /* Disable input buffers */
 584:.\Generated_Source\PSoC4/UART.c ****             #if (UART_RX_SCL_MOSI_PIN)
 585:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_SCL_MOSI_PIN_MASK;
 586:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RX_SCL_MOSI_PIN) */
 587:.\Generated_Source\PSoC4/UART.c **** 
 588:.\Generated_Source\PSoC4/UART.c ****              #if (UART_RX_WAKE_SCL_MOSI_PIN)
 589:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_WAKE_SCL_MOSI_PIN_MASK;
 590:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RX_WAKE_SCL_MOSI_PIN) */
 591:.\Generated_Source\PSoC4/UART.c **** 
 592:.\Generated_Source\PSoC4/UART.c ****             #if (UART_SCLK_PIN)
 593:.\Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SCLK_PIN_MASK;
 594:.\Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SCLK_PIN) */
 595:.\Generated_Source\PSoC4/UART.c ****             }
 596:.\Generated_Source\PSoC4/UART.c ****         }
 597:.\Generated_Source\PSoC4/UART.c ****         else /* UART */
 598:.\Generated_Source\PSoC4/UART.c ****         {
 599:.\Generated_Source\PSoC4/UART.c ****             if (UART_UART_MODE_SMARTCARD == subMode)
 600:.\Generated_Source\PSoC4/UART.c ****             {
 601:.\Generated_Source\PSoC4/UART.c ****                 /* SmartCard */
 602:.\Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_UART_SEL;
 603:.\Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 604:.\Generated_Source\PSoC4/UART.c ****             }
 605:.\Generated_Source\PSoC4/UART.c ****             else /* Standard or IrDA */
 606:.\Generated_Source\PSoC4/UART.c ****             {
 607:.\Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_RX_PIN_ENABLE & uartEnableMask))
 608:.\Generated_Source\PSoC4/UART.c ****                 {
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 17


 609:.\Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_HSIOM_UART_SEL;
 610:.\Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 611:.\Generated_Source\PSoC4/UART.c ****                 }
 612:.\Generated_Source\PSoC4/UART.c **** 
 613:.\Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_TX_PIN_ENABLE & uartEnableMask))
 614:.\Generated_Source\PSoC4/UART.c ****                 {
 615:.\Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_HSIOM_UART_SEL;
 616:.\Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 617:.\Generated_Source\PSoC4/UART.c **** 
 618:.\Generated_Source\PSoC4/UART.c ****                 #if (UART_TX_SDA_MISO_PIN)
 619:.\Generated_Source\PSoC4/UART.c ****                      pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 620:.\Generated_Source\PSoC4/UART.c ****                 #endif /* (UART_TX_SDA_MISO_PIN) */
 621:.\Generated_Source\PSoC4/UART.c ****                 }
 622:.\Generated_Source\PSoC4/UART.c **** 
 623:.\Generated_Source\PSoC4/UART.c ****             #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 624:.\Generated_Source\PSoC4/UART.c ****                 if (UART_UART_MODE_STD == subMode)
 625:.\Generated_Source\PSoC4/UART.c ****                 {
 626:.\Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_CTS_PIN_ENABLE & uartEnableMask))
 627:.\Generated_Source\PSoC4/UART.c ****                     {
 628:.\Generated_Source\PSoC4/UART.c ****                         /* CTS input is multiplexed with SCLK */
 629:.\Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SCLK_PIN_INDEX] = UART_HSIOM_UART_SEL;
 630:.\Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 631:.\Generated_Source\PSoC4/UART.c ****                     }
 632:.\Generated_Source\PSoC4/UART.c **** 
 633:.\Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_RTS_PIN_ENABLE & uartEnableMask))
 634:.\Generated_Source\PSoC4/UART.c ****                     {
 635:.\Generated_Source\PSoC4/UART.c ****                         /* RTS output is multiplexed with SS0 */
 636:.\Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SS0_PIN_INDEX] = UART_HSIOM_UART_SEL;
 637:.\Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 638:.\Generated_Source\PSoC4/UART.c **** 
 639:.\Generated_Source\PSoC4/UART.c ****                     #if (UART_SS0_PIN)
 640:.\Generated_Source\PSoC4/UART.c ****                         /* Disable input buffer */
 641:.\Generated_Source\PSoC4/UART.c ****                         pinsInBuf |= UART_SS0_PIN_MASK;
 642:.\Generated_Source\PSoC4/UART.c ****                     #endif /* (UART_SS0_PIN) */
 643:.\Generated_Source\PSoC4/UART.c ****                     }
 644:.\Generated_Source\PSoC4/UART.c ****                 }
 645:.\Generated_Source\PSoC4/UART.c ****             #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 646:.\Generated_Source\PSoC4/UART.c ****             }
 647:.\Generated_Source\PSoC4/UART.c ****         }
 648:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 649:.\Generated_Source\PSoC4/UART.c **** 
 650:.\Generated_Source\PSoC4/UART.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 651:.\Generated_Source\PSoC4/UART.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 652:.\Generated_Source\PSoC4/UART.c **** 
 653:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_WAKE_SCL_MOSI_PIN)
 654:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_WAKE_SCL_MOSI_HSIOM_REG,
 655:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 656:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_POS,
 657:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 658:.\Generated_Source\PSoC4/UART.c **** 
 659:.\Generated_Source\PSoC4/UART.c ****         UART_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 660:.\Generated_Source\PSoC4/UART.c ****                                                                pinsDm[UART_RX_WAKE_SCL_MOSI_PIN_IND
 661:.\Generated_Source\PSoC4/UART.c **** 
 662:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 663:.\Generated_Source\PSoC4/UART.c ****                                      UART_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 664:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_RX_WAKE_SCL_MOSI_PIN_MASK)));
 665:.\Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 18


 666:.\Generated_Source\PSoC4/UART.c ****          /* Set interrupt on falling edge */
 667:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INCFG_TYPE(UART_RX_WAKE_SCL_MOSI_INTCFG_REG,
 668:.\Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 669:.\Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 670:.\Generated_Source\PSoC4/UART.c ****                                         UART_INTCFG_TYPE_FALLING_EDGE);
 671:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_WAKE_SCL_MOSI_PIN) */
 672:.\Generated_Source\PSoC4/UART.c **** 
 673:.\Generated_Source\PSoC4/UART.c ****     #if (UART_RX_SCL_MOSI_PIN)
 674:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_SCL_MOSI_HSIOM_REG,
 675:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_MASK,
 676:.\Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_POS,
 677:.\Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX]);
 678:.\Generated_Source\PSoC4/UART.c **** 
 679:.\Generated_Source\PSoC4/UART.c ****         UART_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_RX_SCL_MOSI_PIN_INDEX]);
 680:.\Generated_Source\PSoC4/UART.c **** 
 681:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 682:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 683:.\Generated_Source\PSoC4/UART.c ****                                      UART_uart_rx_i2c_scl_spi_mosi_MASK,
 684:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_RX_SCL_MOSI_PIN_MASK)));
 685:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 686:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_SCL_MOSI_PIN) */
 687:.\Generated_Source\PSoC4/UART.c **** 
 688:.\Generated_Source\PSoC4/UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 689:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG,
 690:.\Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_MASK,
 691:.\Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_POS,
 692:.\Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_TX_SDA_MISO_PIN_INDEX]);
 693:.\Generated_Source\PSoC4/UART.c **** 
 694:.\Generated_Source\PSoC4/UART.c ****         UART_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_TX_SDA_MISO_PIN_INDEX]);
 695:.\Generated_Source\PSoC4/UART.c **** 
 696:.\Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 697:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_tx_i2c_sda_spi_miso_INP_DIS,
 698:.\Generated_Source\PSoC4/UART.c ****                                      UART_uart_tx_i2c_sda_spi_miso_MASK,
 699:.\Generated_Source\PSoC4/UART.c ****                                     (0u != (pinsInBuf & UART_TX_SDA_MISO_PIN_MASK)));
 700:.\Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 701:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_SCL_MOSI_PIN) */
 702:.\Generated_Source\PSoC4/UART.c **** 
 703:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SCLK_PIN)
 704:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SCLK_HSIOM_REG,
 705:.\Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_MASK,
 706:.\Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_POS,
 707:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SCLK_PIN_INDEX]);
 708:.\Generated_Source\PSoC4/UART.c **** 
 709:.\Generated_Source\PSoC4/UART.c ****         UART_spi_sclk_SetDriveMode((uint8) pinsDm[UART_SCLK_PIN_INDEX]);
 710:.\Generated_Source\PSoC4/UART.c **** 
 711:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_sclk_INP_DIS,
 712:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_sclk_MASK,
 713:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SCLK_PIN_MASK)));
 714:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCLK_PIN) */
 715:.\Generated_Source\PSoC4/UART.c **** 
 716:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS0_PIN)
 717:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG,
 718:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_MASK,
 719:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_POS,
 720:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS0_PIN_INDEX]);
 721:.\Generated_Source\PSoC4/UART.c **** 
 722:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss0_SetDriveMode((uint8) pinsDm[UART_SS0_PIN_INDEX]);
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 19


 723:.\Generated_Source\PSoC4/UART.c **** 
 724:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss0_INP_DIS,
 725:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss0_MASK,
 726:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS0_PIN_MASK)));
 727:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS0_PIN) */
 728:.\Generated_Source\PSoC4/UART.c **** 
 729:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS1_PIN)
 730:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS1_HSIOM_REG,
 731:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_MASK,
 732:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_POS,
 733:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS1_PIN_INDEX]);
 734:.\Generated_Source\PSoC4/UART.c **** 
 735:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss1_SetDriveMode((uint8) pinsDm[UART_SS1_PIN_INDEX]);
 736:.\Generated_Source\PSoC4/UART.c **** 
 737:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss1_INP_DIS,
 738:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss1_MASK,
 739:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS1_PIN_MASK)));
 740:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS1_PIN) */
 741:.\Generated_Source\PSoC4/UART.c **** 
 742:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS2_PIN)
 743:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS2_HSIOM_REG,
 744:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_MASK,
 745:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_POS,
 746:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS2_PIN_INDEX]);
 747:.\Generated_Source\PSoC4/UART.c **** 
 748:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss2_SetDriveMode((uint8) pinsDm[UART_SS2_PIN_INDEX]);
 749:.\Generated_Source\PSoC4/UART.c **** 
 750:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss2_INP_DIS,
 751:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss2_MASK,
 752:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS2_PIN_MASK)));
 753:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS2_PIN) */
 754:.\Generated_Source\PSoC4/UART.c **** 
 755:.\Generated_Source\PSoC4/UART.c ****     #if (UART_SS3_PIN)
 756:.\Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS3_HSIOM_REG,
 757:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_MASK,
 758:.\Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_POS,
 759:.\Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS3_PIN_INDEX]);
 760:.\Generated_Source\PSoC4/UART.c **** 
 761:.\Generated_Source\PSoC4/UART.c ****         UART_spi_ss3_SetDriveMode((uint8) pinsDm[UART_SS3_PIN_INDEX]);
 762:.\Generated_Source\PSoC4/UART.c **** 
 763:.\Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss3_INP_DIS,
 764:.\Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss3_MASK,
 765:.\Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS3_PIN_MASK)));
 766:.\Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS3_PIN) */
 767:.\Generated_Source\PSoC4/UART.c ****     }
 768:.\Generated_Source\PSoC4/UART.c **** 
 769:.\Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 770:.\Generated_Source\PSoC4/UART.c **** 
 771:.\Generated_Source\PSoC4/UART.c **** 
 772:.\Generated_Source\PSoC4/UART.c **** #if (UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 773:.\Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC4/UART.c ****     * Function Name: UART_I2CSlaveNackGeneration
 775:.\Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC4/UART.c ****     *
 777:.\Generated_Source\PSoC4/UART.c ****     * Summary:
 778:.\Generated_Source\PSoC4/UART.c ****     *  Sets command to generate NACK to the address or data.
 779:.\Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 20


 780:.\Generated_Source\PSoC4/UART.c ****     * Parameters:
 781:.\Generated_Source\PSoC4/UART.c ****     *  None
 782:.\Generated_Source\PSoC4/UART.c ****     *
 783:.\Generated_Source\PSoC4/UART.c ****     * Return:
 784:.\Generated_Source\PSoC4/UART.c ****     *  None
 785:.\Generated_Source\PSoC4/UART.c ****     *
 786:.\Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 787:.\Generated_Source\PSoC4/UART.c ****     void UART_I2CSlaveNackGeneration(void)
 788:.\Generated_Source\PSoC4/UART.c ****     {
 275              		.loc 1 788 0
 276              		.cfi_startproc
 789:.\Generated_Source\PSoC4/UART.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 790:.\Generated_Source\PSoC4/UART.c ****         if ((0u != (UART_CTRL_REG & UART_CTRL_EC_AM_MODE)) &&
 277              		.loc 1 790 0
 278 0000 0A4B     		ldr	r3, .L22
 279 0002 1B68     		ldr	r3, [r3]
 280 0004 DA05     		lsl	r2, r3, #23
 281 0006 0DD5     		bpl	.L21
 791:.\Generated_Source\PSoC4/UART.c ****             (0u == (UART_I2C_CTRL_REG & UART_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 282              		.loc 1 791 0 discriminator 1
 283 0008 094B     		ldr	r3, .L22+4
 284 000a 1B68     		ldr	r3, [r3]
 790:.\Generated_Source\PSoC4/UART.c ****         if ((0u != (UART_CTRL_REG & UART_CTRL_EC_AM_MODE)) &&
 285              		.loc 1 790 0 discriminator 1
 286 000c 5A04     		lsl	r2, r3, #17
 287 000e 09D4     		bmi	.L21
 792:.\Generated_Source\PSoC4/UART.c ****         {
 793:.\Generated_Source\PSoC4/UART.c ****             /* Toggle EC_AM before NACK generation */
 794:.\Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG &= ~UART_CTRL_EC_AM_MODE;
 288              		.loc 1 794 0
 289 0010 064B     		ldr	r3, .L22
 290 0012 1968     		ldr	r1, [r3]
 291 0014 074A     		ldr	r2, .L22+8
 292 0016 0A40     		and	r2, r1
 293 0018 1A60     		str	r2, [r3]
 795:.\Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG |=  UART_CTRL_EC_AM_MODE;
 294              		.loc 1 795 0
 295 001a 1968     		ldr	r1, [r3]
 296 001c 8022     		mov	r2, #128
 297 001e 5200     		lsl	r2, r2, #1
 298 0020 0A43     		orr	r2, r1
 299 0022 1A60     		str	r2, [r3]
 300              	.L21:
 796:.\Generated_Source\PSoC4/UART.c ****         }
 797:.\Generated_Source\PSoC4/UART.c **** 
 798:.\Generated_Source\PSoC4/UART.c ****         UART_I2C_SLAVE_CMD_REG = UART_I2C_SLAVE_CMD_S_NACK;
 301              		.loc 1 798 0
 302 0024 0222     		mov	r2, #2
 303 0026 044B     		ldr	r3, .L22+12
 304 0028 1A60     		str	r2, [r3]
 799:.\Generated_Source\PSoC4/UART.c ****     }
 305              		.loc 1 799 0
 306              		@ sp needed
 307 002a 7047     		bx	lr
 308              	.L23:
 309              		.align	2
 310              	.L22:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 21


 311 002c 00000640 		.word	1074135040
 312 0030 60000640 		.word	1074135136
 313 0034 FFFEFFFF 		.word	-257
 314 0038 6C000640 		.word	1074135148
 315              		.cfi_endproc
 316              	.LFE9:
 317              		.size	UART_I2CSlaveNackGeneration, .-UART_I2CSlaveNackGeneration
 318              		.global	UART_initVar
 319              		.bss
 320              		.set	.LANCHOR0,. + 0
 321              		.type	UART_initVar, %object
 322              		.size	UART_initVar, 1
 323              	UART_initVar:
 324 0000 00       		.space	1
 325              		.text
 326              	.Letext0:
 327              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 328              		.file 3 ".\\Generated_Source\\PSoC4\\UART_SPI_UART_PVT.h"
 329              		.section	.debug_info,"",%progbits
 330              	.Ldebug_info0:
 331 0000 12020000 		.4byte	0x212
 332 0004 0400     		.2byte	0x4
 333 0006 00000000 		.4byte	.Ldebug_abbrev0
 334 000a 04       		.byte	0x4
 335 000b 01       		.uleb128 0x1
 336 000c 64010000 		.4byte	.LASF30
 337 0010 01       		.byte	0x1
 338 0011 01010000 		.4byte	.LASF31
 339 0015 00000000 		.4byte	.LASF32
 340 0019 00000000 		.4byte	.Ldebug_ranges0+0
 341 001d 00000000 		.4byte	0
 342 0021 00000000 		.4byte	.Ldebug_line0
 343 0025 02       		.uleb128 0x2
 344 0026 01       		.byte	0x1
 345 0027 06       		.byte	0x6
 346 0028 38020000 		.4byte	.LASF0
 347 002c 02       		.uleb128 0x2
 348 002d 01       		.byte	0x1
 349 002e 08       		.byte	0x8
 350 002f 96000000 		.4byte	.LASF1
 351 0033 02       		.uleb128 0x2
 352 0034 02       		.byte	0x2
 353 0035 05       		.byte	0x5
 354 0036 1A020000 		.4byte	.LASF2
 355 003a 02       		.uleb128 0x2
 356 003b 02       		.byte	0x2
 357 003c 07       		.byte	0x7
 358 003d 64000000 		.4byte	.LASF3
 359 0041 02       		.uleb128 0x2
 360 0042 04       		.byte	0x4
 361 0043 05       		.byte	0x5
 362 0044 2F020000 		.4byte	.LASF4
 363 0048 02       		.uleb128 0x2
 364 0049 04       		.byte	0x4
 365 004a 07       		.byte	0x7
 366 004b C2000000 		.4byte	.LASF5
 367 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 22


 368 0050 08       		.byte	0x8
 369 0051 05       		.byte	0x5
 370 0052 F3010000 		.4byte	.LASF6
 371 0056 02       		.uleb128 0x2
 372 0057 08       		.byte	0x8
 373 0058 07       		.byte	0x7
 374 0059 4D010000 		.4byte	.LASF7
 375 005d 03       		.uleb128 0x3
 376 005e 04       		.byte	0x4
 377 005f 05       		.byte	0x5
 378 0060 696E7400 		.ascii	"int\000"
 379 0064 02       		.uleb128 0x2
 380 0065 04       		.byte	0x4
 381 0066 07       		.byte	0x7
 382 0067 32010000 		.4byte	.LASF8
 383 006b 04       		.uleb128 0x4
 384 006c E2000000 		.4byte	.LASF9
 385 0070 02       		.byte	0x2
 386 0071 B3       		.byte	0xb3
 387 0072 2C000000 		.4byte	0x2c
 388 0076 04       		.uleb128 0x4
 389 0077 FA000000 		.4byte	.LASF10
 390 007b 02       		.byte	0x2
 391 007c B5       		.byte	0xb5
 392 007d 48000000 		.4byte	0x48
 393 0081 02       		.uleb128 0x2
 394 0082 04       		.byte	0x4
 395 0083 04       		.byte	0x4
 396 0084 84000000 		.4byte	.LASF11
 397 0088 02       		.uleb128 0x2
 398 0089 08       		.byte	0x8
 399 008a 04       		.byte	0x4
 400 008b F3000000 		.4byte	.LASF12
 401 008f 02       		.uleb128 0x2
 402 0090 01       		.byte	0x1
 403 0091 08       		.byte	0x8
 404 0092 15020000 		.4byte	.LASF13
 405 0096 05       		.uleb128 0x5
 406 0097 22000000 		.4byte	.LASF14
 407 009b 02       		.byte	0x2
 408 009c 5F01     		.2byte	0x15f
 409 009e A2000000 		.4byte	0xa2
 410 00a2 06       		.uleb128 0x6
 411 00a3 76000000 		.4byte	0x76
 412 00a7 02       		.uleb128 0x2
 413 00a8 04       		.byte	0x4
 414 00a9 07       		.byte	0x7
 415 00aa EA010000 		.4byte	.LASF15
 416 00ae 07       		.uleb128 0x7
 417 00af 4D000000 		.4byte	.LASF16
 418 00b3 01       		.byte	0x1
 419 00b4 8801     		.2byte	0x188
 420 00b6 00000000 		.4byte	.LFB7
 421 00ba 08000000 		.4byte	.LFE7-.LFB7
 422 00be 01       		.uleb128 0x1
 423 00bf 9C       		.byte	0x9c
 424 00c0 CE000000 		.4byte	0xce
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 23


 425 00c4 08       		.uleb128 0x8
 426 00c5 06000000 		.4byte	.LVL0
 427 00c9 00020000 		.4byte	0x200
 428 00cd 00       		.byte	0
 429 00ce 07       		.uleb128 0x7
 430 00cf 21010000 		.4byte	.LASF17
 431 00d3 01       		.byte	0x1
 432 00d4 B401     		.2byte	0x1b4
 433 00d6 00000000 		.4byte	.LFB8
 434 00da 08000000 		.4byte	.LFE8-.LFB8
 435 00de 01       		.uleb128 0x1
 436 00df 9C       		.byte	0x9c
 437 00e0 EE000000 		.4byte	0xee
 438 00e4 08       		.uleb128 0x8
 439 00e5 06000000 		.4byte	.LVL1
 440 00e9 07020000 		.4byte	0x207
 441 00ed 00       		.byte	0
 442 00ee 09       		.uleb128 0x9
 443 00ef A4000000 		.4byte	.LASF18
 444 00f3 01       		.byte	0x1
 445 00f4 66       		.byte	0x66
 446 00f5 00000000 		.4byte	.LFB0
 447 00f9 08000000 		.4byte	.LFE0-.LFB0
 448 00fd 01       		.uleb128 0x1
 449 00fe 9C       		.byte	0x9c
 450 00ff 0D010000 		.4byte	0x10d
 451 0103 08       		.uleb128 0x8
 452 0104 06000000 		.4byte	.LVL2
 453 0108 0E020000 		.4byte	0x20e
 454 010c 00       		.byte	0
 455 010d 09       		.uleb128 0x9
 456 010e 8A000000 		.4byte	.LASF19
 457 0112 01       		.byte	0x1
 458 0113 92       		.byte	0x92
 459 0114 00000000 		.4byte	.LFB1
 460 0118 18000000 		.4byte	.LFE1-.LFB1
 461 011c 01       		.uleb128 0x1
 462 011d 9C       		.byte	0x9c
 463 011e 2C010000 		.4byte	0x12c
 464 0122 08       		.uleb128 0x8
 465 0123 12000000 		.4byte	.LVL3
 466 0127 AE000000 		.4byte	0xae
 467 012b 00       		.byte	0
 468 012c 09       		.uleb128 0x9
 469 012d E8000000 		.4byte	.LASF20
 470 0131 01       		.byte	0x1
 471 0132 C0       		.byte	0xc0
 472 0133 00000000 		.4byte	.LFB2
 473 0137 20000000 		.4byte	.LFE2-.LFB2
 474 013b 01       		.uleb128 0x1
 475 013c 9C       		.byte	0x9c
 476 013d 54010000 		.4byte	0x154
 477 0141 08       		.uleb128 0x8
 478 0142 0E000000 		.4byte	.LVL4
 479 0146 EE000000 		.4byte	0xee
 480 014a 08       		.uleb128 0x8
 481 014b 18000000 		.4byte	.LVL5
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 24


 482 014f 0D010000 		.4byte	0x10d
 483 0153 00       		.byte	0
 484 0154 09       		.uleb128 0x9
 485 0155 E0010000 		.4byte	.LASF21
 486 0159 01       		.byte	0x1
 487 015a DD       		.byte	0xdd
 488 015b 00000000 		.4byte	.LFB3
 489 015f 20000000 		.4byte	.LFE3-.LFB3
 490 0163 01       		.uleb128 0x1
 491 0164 9C       		.byte	0x9c
 492 0165 73010000 		.4byte	0x173
 493 0169 08       		.uleb128 0x8
 494 016a 06000000 		.4byte	.LVL6
 495 016e CE000000 		.4byte	0xce
 496 0172 00       		.byte	0
 497 0173 0A       		.uleb128 0xa
 498 0174 01020000 		.4byte	.LASF22
 499 0178 01       		.byte	0x1
 500 0179 0A01     		.2byte	0x10a
 501 017b 00000000 		.4byte	.LFB4
 502 017f 14000000 		.4byte	.LFE4-.LFB4
 503 0183 01       		.uleb128 0x1
 504 0184 9C       		.byte	0x9c
 505 0185 A8010000 		.4byte	0x1a8
 506 0189 0B       		.uleb128 0xb
 507 018a 47000000 		.4byte	.LASF24
 508 018e 01       		.byte	0x1
 509 018f 0A01     		.2byte	0x10a
 510 0191 76000000 		.4byte	0x76
 511 0195 01       		.uleb128 0x1
 512 0196 50       		.byte	0x50
 513 0197 0C       		.uleb128 0xc
 514 0198 24020000 		.4byte	.LASF25
 515 019c 01       		.byte	0x1
 516 019d 0C01     		.2byte	0x10c
 517 019f 76000000 		.4byte	0x76
 518 01a3 00000000 		.4byte	.LLST0
 519 01a7 00       		.byte	0
 520 01a8 0A       		.uleb128 0xa
 521 01a9 33000000 		.4byte	.LASF23
 522 01ad 01       		.byte	0x1
 523 01ae 2801     		.2byte	0x128
 524 01b0 00000000 		.4byte	.LFB5
 525 01b4 14000000 		.4byte	.LFE5-.LFB5
 526 01b8 01       		.uleb128 0x1
 527 01b9 9C       		.byte	0x9c
 528 01ba DD010000 		.4byte	0x1dd
 529 01be 0B       		.uleb128 0xb
 530 01bf 47000000 		.4byte	.LASF24
 531 01c3 01       		.byte	0x1
 532 01c4 2801     		.2byte	0x128
 533 01c6 76000000 		.4byte	0x76
 534 01ca 01       		.uleb128 0x1
 535 01cb 50       		.byte	0x50
 536 01cc 0C       		.uleb128 0xc
 537 01cd 28000000 		.4byte	.LASF26
 538 01d1 01       		.byte	0x1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 25


 539 01d2 2A01     		.2byte	0x12a
 540 01d4 76000000 		.4byte	0x76
 541 01d8 1E000000 		.4byte	.LLST1
 542 01dc 00       		.byte	0
 543 01dd 0D       		.uleb128 0xd
 544 01de 44020000 		.4byte	.LASF33
 545 01e2 01       		.byte	0x1
 546 01e3 1303     		.2byte	0x313
 547 01e5 00000000 		.4byte	.LFB9
 548 01e9 3C000000 		.4byte	.LFE9-.LFB9
 549 01ed 01       		.uleb128 0x1
 550 01ee 9C       		.byte	0x9c
 551 01ef 0E       		.uleb128 0xe
 552 01f0 77000000 		.4byte	.LASF34
 553 01f4 01       		.byte	0x1
 554 01f5 42       		.byte	0x42
 555 01f6 6B000000 		.4byte	0x6b
 556 01fa 05       		.uleb128 0x5
 557 01fb 03       		.byte	0x3
 558 01fc 00000000 		.4byte	UART_initVar
 559 0200 0F       		.uleb128 0xf
 560 0201 AE000000 		.4byte	.LASF27
 561 0205 03       		.byte	0x3
 562 0206 41       		.byte	0x41
 563 0207 0F       		.uleb128 0xf
 564 0208 D4000000 		.4byte	.LASF28
 565 020c 03       		.byte	0x3
 566 020d 42       		.byte	0x42
 567 020e 0F       		.uleb128 0xf
 568 020f 3F010000 		.4byte	.LASF29
 569 0213 03       		.byte	0x3
 570 0214 45       		.byte	0x45
 571 0215 00       		.byte	0
 572              		.section	.debug_abbrev,"",%progbits
 573              	.Ldebug_abbrev0:
 574 0000 01       		.uleb128 0x1
 575 0001 11       		.uleb128 0x11
 576 0002 01       		.byte	0x1
 577 0003 25       		.uleb128 0x25
 578 0004 0E       		.uleb128 0xe
 579 0005 13       		.uleb128 0x13
 580 0006 0B       		.uleb128 0xb
 581 0007 03       		.uleb128 0x3
 582 0008 0E       		.uleb128 0xe
 583 0009 1B       		.uleb128 0x1b
 584 000a 0E       		.uleb128 0xe
 585 000b 55       		.uleb128 0x55
 586 000c 17       		.uleb128 0x17
 587 000d 11       		.uleb128 0x11
 588 000e 01       		.uleb128 0x1
 589 000f 10       		.uleb128 0x10
 590 0010 17       		.uleb128 0x17
 591 0011 00       		.byte	0
 592 0012 00       		.byte	0
 593 0013 02       		.uleb128 0x2
 594 0014 24       		.uleb128 0x24
 595 0015 00       		.byte	0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 26


 596 0016 0B       		.uleb128 0xb
 597 0017 0B       		.uleb128 0xb
 598 0018 3E       		.uleb128 0x3e
 599 0019 0B       		.uleb128 0xb
 600 001a 03       		.uleb128 0x3
 601 001b 0E       		.uleb128 0xe
 602 001c 00       		.byte	0
 603 001d 00       		.byte	0
 604 001e 03       		.uleb128 0x3
 605 001f 24       		.uleb128 0x24
 606 0020 00       		.byte	0
 607 0021 0B       		.uleb128 0xb
 608 0022 0B       		.uleb128 0xb
 609 0023 3E       		.uleb128 0x3e
 610 0024 0B       		.uleb128 0xb
 611 0025 03       		.uleb128 0x3
 612 0026 08       		.uleb128 0x8
 613 0027 00       		.byte	0
 614 0028 00       		.byte	0
 615 0029 04       		.uleb128 0x4
 616 002a 16       		.uleb128 0x16
 617 002b 00       		.byte	0
 618 002c 03       		.uleb128 0x3
 619 002d 0E       		.uleb128 0xe
 620 002e 3A       		.uleb128 0x3a
 621 002f 0B       		.uleb128 0xb
 622 0030 3B       		.uleb128 0x3b
 623 0031 0B       		.uleb128 0xb
 624 0032 49       		.uleb128 0x49
 625 0033 13       		.uleb128 0x13
 626 0034 00       		.byte	0
 627 0035 00       		.byte	0
 628 0036 05       		.uleb128 0x5
 629 0037 16       		.uleb128 0x16
 630 0038 00       		.byte	0
 631 0039 03       		.uleb128 0x3
 632 003a 0E       		.uleb128 0xe
 633 003b 3A       		.uleb128 0x3a
 634 003c 0B       		.uleb128 0xb
 635 003d 3B       		.uleb128 0x3b
 636 003e 05       		.uleb128 0x5
 637 003f 49       		.uleb128 0x49
 638 0040 13       		.uleb128 0x13
 639 0041 00       		.byte	0
 640 0042 00       		.byte	0
 641 0043 06       		.uleb128 0x6
 642 0044 35       		.uleb128 0x35
 643 0045 00       		.byte	0
 644 0046 49       		.uleb128 0x49
 645 0047 13       		.uleb128 0x13
 646 0048 00       		.byte	0
 647 0049 00       		.byte	0
 648 004a 07       		.uleb128 0x7
 649 004b 2E       		.uleb128 0x2e
 650 004c 01       		.byte	0x1
 651 004d 03       		.uleb128 0x3
 652 004e 0E       		.uleb128 0xe
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 27


 653 004f 3A       		.uleb128 0x3a
 654 0050 0B       		.uleb128 0xb
 655 0051 3B       		.uleb128 0x3b
 656 0052 05       		.uleb128 0x5
 657 0053 27       		.uleb128 0x27
 658 0054 19       		.uleb128 0x19
 659 0055 11       		.uleb128 0x11
 660 0056 01       		.uleb128 0x1
 661 0057 12       		.uleb128 0x12
 662 0058 06       		.uleb128 0x6
 663 0059 40       		.uleb128 0x40
 664 005a 18       		.uleb128 0x18
 665 005b 9742     		.uleb128 0x2117
 666 005d 19       		.uleb128 0x19
 667 005e 01       		.uleb128 0x1
 668 005f 13       		.uleb128 0x13
 669 0060 00       		.byte	0
 670 0061 00       		.byte	0
 671 0062 08       		.uleb128 0x8
 672 0063 898201   		.uleb128 0x4109
 673 0066 00       		.byte	0
 674 0067 11       		.uleb128 0x11
 675 0068 01       		.uleb128 0x1
 676 0069 31       		.uleb128 0x31
 677 006a 13       		.uleb128 0x13
 678 006b 00       		.byte	0
 679 006c 00       		.byte	0
 680 006d 09       		.uleb128 0x9
 681 006e 2E       		.uleb128 0x2e
 682 006f 01       		.byte	0x1
 683 0070 3F       		.uleb128 0x3f
 684 0071 19       		.uleb128 0x19
 685 0072 03       		.uleb128 0x3
 686 0073 0E       		.uleb128 0xe
 687 0074 3A       		.uleb128 0x3a
 688 0075 0B       		.uleb128 0xb
 689 0076 3B       		.uleb128 0x3b
 690 0077 0B       		.uleb128 0xb
 691 0078 27       		.uleb128 0x27
 692 0079 19       		.uleb128 0x19
 693 007a 11       		.uleb128 0x11
 694 007b 01       		.uleb128 0x1
 695 007c 12       		.uleb128 0x12
 696 007d 06       		.uleb128 0x6
 697 007e 40       		.uleb128 0x40
 698 007f 18       		.uleb128 0x18
 699 0080 9742     		.uleb128 0x2117
 700 0082 19       		.uleb128 0x19
 701 0083 01       		.uleb128 0x1
 702 0084 13       		.uleb128 0x13
 703 0085 00       		.byte	0
 704 0086 00       		.byte	0
 705 0087 0A       		.uleb128 0xa
 706 0088 2E       		.uleb128 0x2e
 707 0089 01       		.byte	0x1
 708 008a 3F       		.uleb128 0x3f
 709 008b 19       		.uleb128 0x19
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 28


 710 008c 03       		.uleb128 0x3
 711 008d 0E       		.uleb128 0xe
 712 008e 3A       		.uleb128 0x3a
 713 008f 0B       		.uleb128 0xb
 714 0090 3B       		.uleb128 0x3b
 715 0091 05       		.uleb128 0x5
 716 0092 27       		.uleb128 0x27
 717 0093 19       		.uleb128 0x19
 718 0094 11       		.uleb128 0x11
 719 0095 01       		.uleb128 0x1
 720 0096 12       		.uleb128 0x12
 721 0097 06       		.uleb128 0x6
 722 0098 40       		.uleb128 0x40
 723 0099 18       		.uleb128 0x18
 724 009a 9742     		.uleb128 0x2117
 725 009c 19       		.uleb128 0x19
 726 009d 01       		.uleb128 0x1
 727 009e 13       		.uleb128 0x13
 728 009f 00       		.byte	0
 729 00a0 00       		.byte	0
 730 00a1 0B       		.uleb128 0xb
 731 00a2 05       		.uleb128 0x5
 732 00a3 00       		.byte	0
 733 00a4 03       		.uleb128 0x3
 734 00a5 0E       		.uleb128 0xe
 735 00a6 3A       		.uleb128 0x3a
 736 00a7 0B       		.uleb128 0xb
 737 00a8 3B       		.uleb128 0x3b
 738 00a9 05       		.uleb128 0x5
 739 00aa 49       		.uleb128 0x49
 740 00ab 13       		.uleb128 0x13
 741 00ac 02       		.uleb128 0x2
 742 00ad 18       		.uleb128 0x18
 743 00ae 00       		.byte	0
 744 00af 00       		.byte	0
 745 00b0 0C       		.uleb128 0xc
 746 00b1 34       		.uleb128 0x34
 747 00b2 00       		.byte	0
 748 00b3 03       		.uleb128 0x3
 749 00b4 0E       		.uleb128 0xe
 750 00b5 3A       		.uleb128 0x3a
 751 00b6 0B       		.uleb128 0xb
 752 00b7 3B       		.uleb128 0x3b
 753 00b8 05       		.uleb128 0x5
 754 00b9 49       		.uleb128 0x49
 755 00ba 13       		.uleb128 0x13
 756 00bb 02       		.uleb128 0x2
 757 00bc 17       		.uleb128 0x17
 758 00bd 00       		.byte	0
 759 00be 00       		.byte	0
 760 00bf 0D       		.uleb128 0xd
 761 00c0 2E       		.uleb128 0x2e
 762 00c1 00       		.byte	0
 763 00c2 3F       		.uleb128 0x3f
 764 00c3 19       		.uleb128 0x19
 765 00c4 03       		.uleb128 0x3
 766 00c5 0E       		.uleb128 0xe
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 29


 767 00c6 3A       		.uleb128 0x3a
 768 00c7 0B       		.uleb128 0xb
 769 00c8 3B       		.uleb128 0x3b
 770 00c9 05       		.uleb128 0x5
 771 00ca 27       		.uleb128 0x27
 772 00cb 19       		.uleb128 0x19
 773 00cc 11       		.uleb128 0x11
 774 00cd 01       		.uleb128 0x1
 775 00ce 12       		.uleb128 0x12
 776 00cf 06       		.uleb128 0x6
 777 00d0 40       		.uleb128 0x40
 778 00d1 18       		.uleb128 0x18
 779 00d2 9742     		.uleb128 0x2117
 780 00d4 19       		.uleb128 0x19
 781 00d5 00       		.byte	0
 782 00d6 00       		.byte	0
 783 00d7 0E       		.uleb128 0xe
 784 00d8 34       		.uleb128 0x34
 785 00d9 00       		.byte	0
 786 00da 03       		.uleb128 0x3
 787 00db 0E       		.uleb128 0xe
 788 00dc 3A       		.uleb128 0x3a
 789 00dd 0B       		.uleb128 0xb
 790 00de 3B       		.uleb128 0x3b
 791 00df 0B       		.uleb128 0xb
 792 00e0 49       		.uleb128 0x49
 793 00e1 13       		.uleb128 0x13
 794 00e2 3F       		.uleb128 0x3f
 795 00e3 19       		.uleb128 0x19
 796 00e4 02       		.uleb128 0x2
 797 00e5 18       		.uleb128 0x18
 798 00e6 00       		.byte	0
 799 00e7 00       		.byte	0
 800 00e8 0F       		.uleb128 0xf
 801 00e9 2E       		.uleb128 0x2e
 802 00ea 00       		.byte	0
 803 00eb 3F       		.uleb128 0x3f
 804 00ec 19       		.uleb128 0x19
 805 00ed 03       		.uleb128 0x3
 806 00ee 0E       		.uleb128 0xe
 807 00ef 3A       		.uleb128 0x3a
 808 00f0 0B       		.uleb128 0xb
 809 00f1 3B       		.uleb128 0x3b
 810 00f2 0B       		.uleb128 0xb
 811 00f3 27       		.uleb128 0x27
 812 00f4 19       		.uleb128 0x19
 813 00f5 3C       		.uleb128 0x3c
 814 00f6 19       		.uleb128 0x19
 815 00f7 00       		.byte	0
 816 00f8 00       		.byte	0
 817 00f9 00       		.byte	0
 818              		.section	.debug_loc,"",%progbits
 819              	.Ldebug_loc0:
 820              	.LLST0:
 821 0000 04000000 		.4byte	.LVL8
 822 0004 0C000000 		.4byte	.LVL10
 823 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 30


 824 000a 51       		.byte	0x51
 825 000b 0C000000 		.4byte	.LVL10
 826 000f 14000000 		.4byte	.LFE4
 827 0013 0100     		.2byte	0x1
 828 0015 52       		.byte	0x52
 829 0016 00000000 		.4byte	0
 830 001a 00000000 		.4byte	0
 831              	.LLST1:
 832 001e 04000000 		.4byte	.LVL12
 833 0022 0C000000 		.4byte	.LVL14
 834 0026 0100     		.2byte	0x1
 835 0028 51       		.byte	0x51
 836 0029 0C000000 		.4byte	.LVL14
 837 002d 14000000 		.4byte	.LFE5
 838 0031 0100     		.2byte	0x1
 839 0033 52       		.byte	0x52
 840 0034 00000000 		.4byte	0
 841 0038 00000000 		.4byte	0
 842              		.section	.debug_aranges,"",%progbits
 843 0000 5C000000 		.4byte	0x5c
 844 0004 0200     		.2byte	0x2
 845 0006 00000000 		.4byte	.Ldebug_info0
 846 000a 04       		.byte	0x4
 847 000b 00       		.byte	0
 848 000c 0000     		.2byte	0
 849 000e 0000     		.2byte	0
 850 0010 00000000 		.4byte	.LFB7
 851 0014 08000000 		.4byte	.LFE7-.LFB7
 852 0018 00000000 		.4byte	.LFB8
 853 001c 08000000 		.4byte	.LFE8-.LFB8
 854 0020 00000000 		.4byte	.LFB0
 855 0024 08000000 		.4byte	.LFE0-.LFB0
 856 0028 00000000 		.4byte	.LFB1
 857 002c 18000000 		.4byte	.LFE1-.LFB1
 858 0030 00000000 		.4byte	.LFB2
 859 0034 20000000 		.4byte	.LFE2-.LFB2
 860 0038 00000000 		.4byte	.LFB3
 861 003c 20000000 		.4byte	.LFE3-.LFB3
 862 0040 00000000 		.4byte	.LFB4
 863 0044 14000000 		.4byte	.LFE4-.LFB4
 864 0048 00000000 		.4byte	.LFB5
 865 004c 14000000 		.4byte	.LFE5-.LFB5
 866 0050 00000000 		.4byte	.LFB9
 867 0054 3C000000 		.4byte	.LFE9-.LFB9
 868 0058 00000000 		.4byte	0
 869 005c 00000000 		.4byte	0
 870              		.section	.debug_ranges,"",%progbits
 871              	.Ldebug_ranges0:
 872 0000 00000000 		.4byte	.LFB7
 873 0004 08000000 		.4byte	.LFE7
 874 0008 00000000 		.4byte	.LFB8
 875 000c 08000000 		.4byte	.LFE8
 876 0010 00000000 		.4byte	.LFB0
 877 0014 08000000 		.4byte	.LFE0
 878 0018 00000000 		.4byte	.LFB1
 879 001c 18000000 		.4byte	.LFE1
 880 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 31


 881 0024 20000000 		.4byte	.LFE2
 882 0028 00000000 		.4byte	.LFB3
 883 002c 20000000 		.4byte	.LFE3
 884 0030 00000000 		.4byte	.LFB4
 885 0034 14000000 		.4byte	.LFE4
 886 0038 00000000 		.4byte	.LFB5
 887 003c 14000000 		.4byte	.LFE5
 888 0040 00000000 		.4byte	.LFB9
 889 0044 3C000000 		.4byte	.LFE9
 890 0048 00000000 		.4byte	0
 891 004c 00000000 		.4byte	0
 892              		.section	.debug_line,"",%progbits
 893              	.Ldebug_line0:
 894 0000 3C010000 		.section	.debug_str,"MS",%progbits,1
 894      02007100 
 894      00000201 
 894      FB0E0D00 
 894      01010101 
 895              	.LASF32:
 896 0000 433A5C57 		.ascii	"C:\\WORKS\\WS\\WS_PSoC\\test_01.cydsn\000"
 896      4F524B53 
 896      5C57535C 
 896      57535F50 
 896      536F435C 
 897              	.LASF14:
 898 0022 72656733 		.ascii	"reg32\000"
 898      3200
 899              	.LASF26:
 900 0028 74784669 		.ascii	"txFifoCtrl\000"
 900      666F4374 
 900      726C00
 901              	.LASF23:
 902 0033 55415254 		.ascii	"UART_SetTxFifoLevel\000"
 902      5F536574 
 902      54784669 
 902      666F4C65 
 902      76656C00 
 903              	.LASF24:
 904 0047 6C657665 		.ascii	"level\000"
 904      6C00
 905              	.LASF16:
 906 004d 55415254 		.ascii	"UART_ScbModePostEnable\000"
 906      5F536362 
 906      4D6F6465 
 906      506F7374 
 906      456E6162 
 907              	.LASF3:
 908 0064 73686F72 		.ascii	"short unsigned int\000"
 908      7420756E 
 908      7369676E 
 908      65642069 
 908      6E7400
 909              	.LASF34:
 910 0077 55415254 		.ascii	"UART_initVar\000"
 910      5F696E69 
 910      74566172 
 910      00
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 32


 911              	.LASF11:
 912 0084 666C6F61 		.ascii	"float\000"
 912      7400
 913              	.LASF19:
 914 008a 55415254 		.ascii	"UART_Enable\000"
 914      5F456E61 
 914      626C6500 
 915              	.LASF1:
 916 0096 756E7369 		.ascii	"unsigned char\000"
 916      676E6564 
 916      20636861 
 916      7200
 917              	.LASF18:
 918 00a4 55415254 		.ascii	"UART_Init\000"
 918      5F496E69 
 918      7400
 919              	.LASF27:
 920 00ae 55415254 		.ascii	"UART_UartPostEnable\000"
 920      5F556172 
 920      74506F73 
 920      74456E61 
 920      626C6500 
 921              	.LASF5:
 922 00c2 6C6F6E67 		.ascii	"long unsigned int\000"
 922      20756E73 
 922      69676E65 
 922      6420696E 
 922      7400
 923              	.LASF28:
 924 00d4 55415254 		.ascii	"UART_UartStop\000"
 924      5F556172 
 924      7453746F 
 924      7000
 925              	.LASF9:
 926 00e2 75696E74 		.ascii	"uint8\000"
 926      3800
 927              	.LASF20:
 928 00e8 55415254 		.ascii	"UART_Start\000"
 928      5F537461 
 928      727400
 929              	.LASF12:
 930 00f3 646F7562 		.ascii	"double\000"
 930      6C6500
 931              	.LASF10:
 932 00fa 75696E74 		.ascii	"uint32\000"
 932      333200
 933              	.LASF31:
 934 0101 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART.c\000"
 934      6E657261 
 934      7465645F 
 934      536F7572 
 934      63655C50 
 935              	.LASF17:
 936 0121 55415254 		.ascii	"UART_ScbModeStop\000"
 936      5F536362 
 936      4D6F6465 
 936      53746F70 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 33


 936      00
 937              	.LASF8:
 938 0132 756E7369 		.ascii	"unsigned int\000"
 938      676E6564 
 938      20696E74 
 938      00
 939              	.LASF29:
 940 013f 55415254 		.ascii	"UART_UartInit\000"
 940      5F556172 
 940      74496E69 
 940      7400
 941              	.LASF7:
 942 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 942      206C6F6E 
 942      6720756E 
 942      7369676E 
 942      65642069 
 943              	.LASF30:
 944 0164 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 944      4320342E 
 944      382E3420 
 944      32303134 
 944      30353236 
 945 0197 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 945      20726576 
 945      6973696F 
 945      6E203231 
 945      31333538 
 946 01ca 67202D66 		.ascii	"g -ffunction-sections\000"
 946      66756E63 
 946      74696F6E 
 946      2D736563 
 946      74696F6E 
 947              	.LASF21:
 948 01e0 55415254 		.ascii	"UART_Stop\000"
 948      5F53746F 
 948      7000
 949              	.LASF15:
 950 01ea 73697A65 		.ascii	"sizetype\000"
 950      74797065 
 950      00
 951              	.LASF6:
 952 01f3 6C6F6E67 		.ascii	"long long int\000"
 952      206C6F6E 
 952      6720696E 
 952      7400
 953              	.LASF22:
 954 0201 55415254 		.ascii	"UART_SetRxFifoLevel\000"
 954      5F536574 
 954      52784669 
 954      666F4C65 
 954      76656C00 
 955              	.LASF13:
 956 0215 63686172 		.ascii	"char\000"
 956      00
 957              	.LASF2:
 958 021a 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccpYLRWr.s 			page 34


 958      7420696E 
 958      7400
 959              	.LASF25:
 960 0224 72784669 		.ascii	"rxFifoCtrl\000"
 960      666F4374 
 960      726C00
 961              	.LASF4:
 962 022f 6C6F6E67 		.ascii	"long int\000"
 962      20696E74 
 962      00
 963              	.LASF0:
 964 0238 7369676E 		.ascii	"signed char\000"
 964      65642063 
 964      68617200 
 965              	.LASF33:
 966 0244 55415254 		.ascii	"UART_I2CSlaveNackGeneration\000"
 966      5F493243 
 966      536C6176 
 966      654E6163 
 966      6B47656E 
 967              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
