ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	PWM_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Init, %function
  23              	PWM_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** 
  21:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM.c **** 
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM.c **** *
  28:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:.\Generated_Source\PSoC4/PWM.c **** *
  31:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** *
  34:.\Generated_Source\PSoC4/PWM.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM.c **** *  None
  36:.\Generated_Source\PSoC4/PWM.c **** *
  37:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:.\Generated_Source\PSoC4/PWM.c **** 
  41:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM.c ****         
  45:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM.c **** 
  48:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM.c ****         
  51:.\Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM.c **** 
  57:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM.c ****         
  60:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM.c ****     
  63:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM.c ****         
  66:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM.c **** 
  69:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM.c ****         #else
  84:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 3


  88:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  28              		.loc 1 89 0
  29 0000 0E4B     		ldr	r3, .L2
  30 0002 8422     		mov	r2, #132
  31 0004 D204     		lsl	r2, r2, #19
  32 0006 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/PWM.c **** 
  91:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM.c ****         #else
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  33              		.loc 1 95 0
  34 0008 1968     		ldr	r1, [r3]
  35 000a 8022     		mov	r2, #128
  36 000c 5202     		lsl	r2, r2, #9
  37 000e 0A43     		orr	r2, r1
  38 0010 1A60     		str	r2, [r3]
  39              	.LVL0:
  40              	.LBB10:
  41              	.LBB11:
  96:.\Generated_Source\PSoC4/PWM.c ****             
  97:.\Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM.c ****     
 118:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM.c **** 
 121:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else
 128:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 4


 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM.c **** 
 140:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM.c **** 
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM.c ****     
 160:.\Generated_Source\PSoC4/PWM.c **** }
 161:.\Generated_Source\PSoC4/PWM.c **** 
 162:.\Generated_Source\PSoC4/PWM.c **** 
 163:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM.c **** *
 167:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:.\Generated_Source\PSoC4/PWM.c **** *
 170:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM.c **** *  None
 172:.\Generated_Source\PSoC4/PWM.c **** *
 173:.\Generated_Source\PSoC4/PWM.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM.c **** *  None
 175:.\Generated_Source\PSoC4/PWM.c **** *
 176:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:.\Generated_Source\PSoC4/PWM.c **** {
 179:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 5


 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM.c **** 
 192:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM.c **** }
 198:.\Generated_Source\PSoC4/PWM.c **** 
 199:.\Generated_Source\PSoC4/PWM.c **** 
 200:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 202:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM.c **** *
 204:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 206:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 207:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM.c **** *
 210:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM.c **** *  None
 212:.\Generated_Source\PSoC4/PWM.c **** *
 213:.\Generated_Source\PSoC4/PWM.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM.c **** *  None
 215:.\Generated_Source\PSoC4/PWM.c **** *
 216:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 222:.\Generated_Source\PSoC4/PWM.c **** *
 223:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 225:.\Generated_Source\PSoC4/PWM.c **** {
 226:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 227:.\Generated_Source\PSoC4/PWM.c ****     {
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 229:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 230:.\Generated_Source\PSoC4/PWM.c ****     }
 231:.\Generated_Source\PSoC4/PWM.c **** 
 232:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 233:.\Generated_Source\PSoC4/PWM.c **** }
 234:.\Generated_Source\PSoC4/PWM.c **** 
 235:.\Generated_Source\PSoC4/PWM.c **** 
 236:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 238:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 242:.\Generated_Source\PSoC4/PWM.c **** *
 243:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 6


 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM.c **** *  None
 248:.\Generated_Source\PSoC4/PWM.c **** *
 249:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 251:.\Generated_Source\PSoC4/PWM.c **** {
 252:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM.c **** 
 254:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 255:.\Generated_Source\PSoC4/PWM.c **** 
 256:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 259:.\Generated_Source\PSoC4/PWM.c **** }
 260:.\Generated_Source\PSoC4/PWM.c **** 
 261:.\Generated_Source\PSoC4/PWM.c **** 
 262:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 264:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 268:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM.c **** *
 271:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM.c **** *  None
 285:.\Generated_Source\PSoC4/PWM.c **** *
 286:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM.c **** {
 289:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM.c **** 
 291:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 292:.\Generated_Source\PSoC4/PWM.c **** 
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 294:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 295:.\Generated_Source\PSoC4/PWM.c **** 
 296:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 297:.\Generated_Source\PSoC4/PWM.c **** }
 298:.\Generated_Source\PSoC4/PWM.c **** 
 299:.\Generated_Source\PSoC4/PWM.c **** 
 300:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 7


 302:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM.c **** *
 304:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM.c **** *
 308:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM.c **** *
 316:.\Generated_Source\PSoC4/PWM.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM.c **** *  None
 318:.\Generated_Source\PSoC4/PWM.c **** *
 319:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM.c **** {
 322:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM.c **** 
 324:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 325:.\Generated_Source\PSoC4/PWM.c **** 
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 327:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 328:.\Generated_Source\PSoC4/PWM.c **** 
 329:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 330:.\Generated_Source\PSoC4/PWM.c **** }
 331:.\Generated_Source\PSoC4/PWM.c **** 
 332:.\Generated_Source\PSoC4/PWM.c **** 
 333:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM.c **** *
 337:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM.c **** *
 341:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM.c **** *
 353:.\Generated_Source\PSoC4/PWM.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM.c **** *  None
 355:.\Generated_Source\PSoC4/PWM.c **** *
 356:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 8


 359:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM.c **** 
 361:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 362:.\Generated_Source\PSoC4/PWM.c **** 
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 364:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 365:.\Generated_Source\PSoC4/PWM.c **** 
 366:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 367:.\Generated_Source\PSoC4/PWM.c **** }
 368:.\Generated_Source\PSoC4/PWM.c **** 
 369:.\Generated_Source\PSoC4/PWM.c **** 
 370:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 372:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM.c **** *
 374:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 376:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM.c **** *
 385:.\Generated_Source\PSoC4/PWM.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM.c **** *  None
 387:.\Generated_Source\PSoC4/PWM.c **** *
 388:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM.c **** {
 391:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 394:.\Generated_Source\PSoC4/PWM.c **** 
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 396:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 397:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM.c **** 
 399:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 400:.\Generated_Source\PSoC4/PWM.c **** }
 401:.\Generated_Source\PSoC4/PWM.c **** 
 402:.\Generated_Source\PSoC4/PWM.c **** 
 403:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM.c **** *
 407:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM.c **** *
 414:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 9


 416:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM.c **** *
 439:.\Generated_Source\PSoC4/PWM.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM.c **** *  None
 441:.\Generated_Source\PSoC4/PWM.c **** *
 442:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM.c **** {
 445:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 446:.\Generated_Source\PSoC4/PWM.c **** }
 447:.\Generated_Source\PSoC4/PWM.c **** 
 448:.\Generated_Source\PSoC4/PWM.c **** 
 449:.\Generated_Source\PSoC4/PWM.c **** 
 450:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM.c **** *
 454:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM.c **** *
 460:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM.c **** *
 463:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM.c **** 
 468:.\Generated_Source\PSoC4/PWM.c **** *
 469:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 10


 473:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM.c **** *
 475:.\Generated_Source\PSoC4/PWM.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM.c **** *  None
 477:.\Generated_Source\PSoC4/PWM.c **** *
 478:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM.c **** {
 481:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM.c **** 
 483:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 486:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 487:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM.c **** 
 489:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 490:.\Generated_Source\PSoC4/PWM.c **** }
 491:.\Generated_Source\PSoC4/PWM.c **** 
 492:.\Generated_Source\PSoC4/PWM.c **** 
 493:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM.c **** *
 497:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM.c **** *
 502:.\Generated_Source\PSoC4/PWM.c **** *
 503:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM.c **** *
 509:.\Generated_Source\PSoC4/PWM.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM.c **** *  None
 511:.\Generated_Source\PSoC4/PWM.c **** *
 512:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM.c **** {
 515:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM.c **** 
 517:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 518:.\Generated_Source\PSoC4/PWM.c **** 
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 520:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 521:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM.c **** 
 523:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 524:.\Generated_Source\PSoC4/PWM.c **** }
 525:.\Generated_Source\PSoC4/PWM.c **** 
 526:.\Generated_Source\PSoC4/PWM.c **** 
 527:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 11


 530:.\Generated_Source\PSoC4/PWM.c **** *
 531:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM.c **** 
 537:.\Generated_Source\PSoC4/PWM.c **** *
 538:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM.c **** *
 542:.\Generated_Source\PSoC4/PWM.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM.c **** *  None
 544:.\Generated_Source\PSoC4/PWM.c **** *
 545:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM.c **** {
 548:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 551:.\Generated_Source\PSoC4/PWM.c **** 
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 553:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 554:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM.c **** 
 556:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 557:.\Generated_Source\PSoC4/PWM.c **** }
 558:.\Generated_Source\PSoC4/PWM.c **** 
 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM.c **** *
 564:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 565:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM.c **** *
 569:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM.c **** *
 575:.\Generated_Source\PSoC4/PWM.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM.c **** *  None
 577:.\Generated_Source\PSoC4/PWM.c **** *
 578:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM.c **** {
 581:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM.c **** 
 583:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 584:.\Generated_Source\PSoC4/PWM.c **** 
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 586:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 12


 587:.\Generated_Source\PSoC4/PWM.c **** 
 588:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 589:.\Generated_Source\PSoC4/PWM.c **** }
 590:.\Generated_Source\PSoC4/PWM.c **** 
 591:.\Generated_Source\PSoC4/PWM.c **** 
 592:.\Generated_Source\PSoC4/PWM.c **** 
 593:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 595:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM.c **** *
 597:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM.c **** *
 602:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM.c **** *
 605:.\Generated_Source\PSoC4/PWM.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM.c **** *  None
 607:.\Generated_Source\PSoC4/PWM.c **** *
 608:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM.c **** {
 611:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
  42              		.loc 1 611 0
  43 0012 0B49     		ldr	r1, .L2+4
  44 0014 0B4A     		ldr	r2, .L2+8
  45              	.LBE11:
  46              	.LBE10:
 160:.\Generated_Source\PSoC4/PWM.c **** }
  47              		.loc 1 160 0
  48              		@ sp needed
  49              	.LBB13:
  50              	.LBB12:
  51              		.loc 1 611 0
  52 0016 0A60     		str	r2, [r1]
  53              	.LBE12:
  54              	.LBE13:
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
  55              		.loc 1 112 0
  56 0018 1968     		ldr	r1, [r3]
  57 001a 1960     		str	r1, [r3]
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 001c 0A4B     		ldr	r3, .L2+12
  60 001e C321     		mov	r1, #195
  61 0020 8900     		lsl	r1, r1, #2
  62 0022 1960     		str	r1, [r3]
  63              	.LVL1:
  64              	.LBB14:
  65              	.LBB15:
 612:.\Generated_Source\PSoC4/PWM.c **** }
 613:.\Generated_Source\PSoC4/PWM.c **** 
 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 13


 617:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM.c **** {
 631:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 632:.\Generated_Source\PSoC4/PWM.c **** }
 633:.\Generated_Source\PSoC4/PWM.c **** 
 634:.\Generated_Source\PSoC4/PWM.c **** 
 635:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 640:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM.c **** *
 643:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM.c **** *
 654:.\Generated_Source\PSoC4/PWM.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM.c **** *  None
 656:.\Generated_Source\PSoC4/PWM.c **** *
 657:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM.c **** {
 660:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM.c **** 
 662:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 663:.\Generated_Source\PSoC4/PWM.c **** 
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 665:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 666:.\Generated_Source\PSoC4/PWM.c **** 
 667:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 668:.\Generated_Source\PSoC4/PWM.c **** }
 669:.\Generated_Source\PSoC4/PWM.c **** 
 670:.\Generated_Source\PSoC4/PWM.c **** 
 671:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 673:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 14


 674:.\Generated_Source\PSoC4/PWM.c **** *
 675:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM.c **** *
 683:.\Generated_Source\PSoC4/PWM.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM.c **** *  None
 685:.\Generated_Source\PSoC4/PWM.c **** *
 686:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM.c **** {
 689:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 690:.\Generated_Source\PSoC4/PWM.c **** }
 691:.\Generated_Source\PSoC4/PWM.c **** 
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM.c **** {
 709:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 710:.\Generated_Source\PSoC4/PWM.c **** }
 711:.\Generated_Source\PSoC4/PWM.c **** 
 712:.\Generated_Source\PSoC4/PWM.c **** 
 713:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 715:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 15


 731:.\Generated_Source\PSoC4/PWM.c **** *
 732:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM.c **** {
 735:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM.c **** 
 737:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 738:.\Generated_Source\PSoC4/PWM.c **** 
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 740:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 741:.\Generated_Source\PSoC4/PWM.c **** 
 742:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 743:.\Generated_Source\PSoC4/PWM.c **** }
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c **** 
 746:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM.c **** *
 750:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM.c **** *
 753:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM.c **** *
 756:.\Generated_Source\PSoC4/PWM.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM.c **** *  None
 758:.\Generated_Source\PSoC4/PWM.c **** *
 759:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM.c **** {
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 763:.\Generated_Source\PSoC4/PWM.c **** }
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c **** 
 766:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM.c **** {
 782:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 783:.\Generated_Source\PSoC4/PWM.c **** }
 784:.\Generated_Source\PSoC4/PWM.c **** 
 785:.\Generated_Source\PSoC4/PWM.c **** 
 786:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 16


 788:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM.c **** *
 790:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM.c **** *  None
 804:.\Generated_Source\PSoC4/PWM.c **** *
 805:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM.c **** {
 808:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM.c **** 
 810:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 811:.\Generated_Source\PSoC4/PWM.c **** 
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 813:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 814:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM.c **** 
 816:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 817:.\Generated_Source\PSoC4/PWM.c **** }
 818:.\Generated_Source\PSoC4/PWM.c **** 
 819:.\Generated_Source\PSoC4/PWM.c **** 
 820:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 822:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM.c **** *
 824:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM.c **** *
 831:.\Generated_Source\PSoC4/PWM.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM.c **** *  None
 833:.\Generated_Source\PSoC4/PWM.c **** *
 834:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM.c **** {
 837:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM.c **** 
 841:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM.c **** 
 844:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 17


 845:.\Generated_Source\PSoC4/PWM.c ****         {
 846:.\Generated_Source\PSoC4/PWM.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM.c ****         }
 848:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM.c ****         {
 850:.\Generated_Source\PSoC4/PWM.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM.c ****         }
 852:.\Generated_Source\PSoC4/PWM.c ****         else
 853:.\Generated_Source\PSoC4/PWM.c ****         {
 854:.\Generated_Source\PSoC4/PWM.c ****         }
 855:.\Generated_Source\PSoC4/PWM.c ****         
 856:.\Generated_Source\PSoC4/PWM.c ****     
 857:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM.c ****     
 859:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 860:.\Generated_Source\PSoC4/PWM.c **** }
 861:.\Generated_Source\PSoC4/PWM.c **** 
 862:.\Generated_Source\PSoC4/PWM.c **** 
 863:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 865:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM.c **** *
 867:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM.c **** *
 871:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM.c **** *  None
 873:.\Generated_Source\PSoC4/PWM.c **** *
 874:.\Generated_Source\PSoC4/PWM.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM.c **** *
 877:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM.c **** {
 880:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM.c ****         
 888:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM.c ****         
 890:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM.c ****         {
 892:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM.c ****         }
 894:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM.c ****         {
 896:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM.c ****         }
 898:.\Generated_Source\PSoC4/PWM.c ****         else
 899:.\Generated_Source\PSoC4/PWM.c ****         {
 900:.\Generated_Source\PSoC4/PWM.c ****         }
 901:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 18


 902:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM.c ****     #else
 904:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM.c **** }
 907:.\Generated_Source\PSoC4/PWM.c **** 
 908:.\Generated_Source\PSoC4/PWM.c **** 
 909:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM.c **** *
 913:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM.c **** *
 917:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM.c **** *
 920:.\Generated_Source\PSoC4/PWM.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM.c **** *  None
 922:.\Generated_Source\PSoC4/PWM.c **** *
 923:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM.c **** {
 926:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM.c **** 
 930:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM.c **** 
 933:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM.c ****         {
 935:.\Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM.c ****         }
 937:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM.c ****         {
 939:.\Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM.c ****         }
 941:.\Generated_Source\PSoC4/PWM.c ****         else
 942:.\Generated_Source\PSoC4/PWM.c ****         {
 943:.\Generated_Source\PSoC4/PWM.c ****         }
 944:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM.c ****     
 946:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 947:.\Generated_Source\PSoC4/PWM.c **** }
 948:.\Generated_Source\PSoC4/PWM.c **** 
 949:.\Generated_Source\PSoC4/PWM.c **** 
 950:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM.c **** *
 954:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM.c **** *
 958:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 19


 959:.\Generated_Source\PSoC4/PWM.c **** *  None
 960:.\Generated_Source\PSoC4/PWM.c **** *
 961:.\Generated_Source\PSoC4/PWM.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM.c **** *
 964:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM.c **** {
 967:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM.c **** 
 972:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM.c **** 
 975:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM.c ****         
 977:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM.c ****         {
 979:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM.c ****         }
 981:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM.c ****         {
 983:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM.c ****         }
 985:.\Generated_Source\PSoC4/PWM.c ****         else
 986:.\Generated_Source\PSoC4/PWM.c ****         {
 987:.\Generated_Source\PSoC4/PWM.c ****         }
 988:.\Generated_Source\PSoC4/PWM.c **** 
 989:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM.c ****     #else
 991:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 992:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM.c **** }
 994:.\Generated_Source\PSoC4/PWM.c **** 
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 998:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM.c **** *
1000:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM.c **** *
1004:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM.c **** *  None
1006:.\Generated_Source\PSoC4/PWM.c **** *
1007:.\Generated_Source\PSoC4/PWM.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM.c **** *
1010:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM.c **** {
1013:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
1014:.\Generated_Source\PSoC4/PWM.c **** }
1015:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 20


1016:.\Generated_Source\PSoC4/PWM.c **** 
1017:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM.c **** *
1021:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM.c **** *
1025:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM.c **** *  None
1027:.\Generated_Source\PSoC4/PWM.c **** *
1028:.\Generated_Source\PSoC4/PWM.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM.c **** *
1031:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM.c **** {
1034:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1035:.\Generated_Source\PSoC4/PWM.c **** }
1036:.\Generated_Source\PSoC4/PWM.c **** 
1037:.\Generated_Source\PSoC4/PWM.c **** 
1038:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM.c **** *
1042:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM.c **** *
1055:.\Generated_Source\PSoC4/PWM.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM.c **** *  None
1057:.\Generated_Source\PSoC4/PWM.c **** *
1058:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM.c **** {
1061:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1064:.\Generated_Source\PSoC4/PWM.c **** 
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
1066:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
1067:.\Generated_Source\PSoC4/PWM.c **** 
1068:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1069:.\Generated_Source\PSoC4/PWM.c **** }
1070:.\Generated_Source\PSoC4/PWM.c **** 
1071:.\Generated_Source\PSoC4/PWM.c **** 
1072:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 21


1073:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM.c **** *
1076:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM.c **** *
1080:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM.c **** *
1088:.\Generated_Source\PSoC4/PWM.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM.c **** *  None
1090:.\Generated_Source\PSoC4/PWM.c **** *
1091:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM.c **** {
1094:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM.c **** 
1096:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1097:.\Generated_Source\PSoC4/PWM.c **** 
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
1100:.\Generated_Source\PSoC4/PWM.c **** 
1101:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1102:.\Generated_Source\PSoC4/PWM.c **** }
1103:.\Generated_Source\PSoC4/PWM.c **** 
1104:.\Generated_Source\PSoC4/PWM.c **** 
1105:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1107:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM.c **** *
1109:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM.c **** *
1113:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM.c **** *
1121:.\Generated_Source\PSoC4/PWM.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM.c **** *  None
1123:.\Generated_Source\PSoC4/PWM.c **** *
1124:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM.c **** {
1127:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM.c **** 
1129:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 22


1130:.\Generated_Source\PSoC4/PWM.c **** 
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
1133:.\Generated_Source\PSoC4/PWM.c **** 
1134:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1135:.\Generated_Source\PSoC4/PWM.c **** }
1136:.\Generated_Source\PSoC4/PWM.c **** 
1137:.\Generated_Source\PSoC4/PWM.c **** 
1138:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1140:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM.c **** *
1142:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM.c **** *
1145:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM.c **** *
1153:.\Generated_Source\PSoC4/PWM.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM.c **** *  None
1155:.\Generated_Source\PSoC4/PWM.c **** *
1156:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM.c **** {
1159:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1167:.\Generated_Source\PSoC4/PWM.c **** }
1168:.\Generated_Source\PSoC4/PWM.c **** 
1169:.\Generated_Source\PSoC4/PWM.c **** 
1170:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1172:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM.c **** *
1178:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM.c **** *
1186:.\Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 23


1187:.\Generated_Source\PSoC4/PWM.c **** *  None
1188:.\Generated_Source\PSoC4/PWM.c **** *
1189:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM.c **** {
1192:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM.c **** 
1194:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1195:.\Generated_Source\PSoC4/PWM.c **** 
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
1198:.\Generated_Source\PSoC4/PWM.c **** 
1199:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1200:.\Generated_Source\PSoC4/PWM.c **** }
1201:.\Generated_Source\PSoC4/PWM.c **** 
1202:.\Generated_Source\PSoC4/PWM.c **** 
1203:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM.c **** *
1207:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM.c **** *
1212:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM.c **** *  None
1228:.\Generated_Source\PSoC4/PWM.c **** *
1229:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM.c **** {
1232:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM.c **** 
1234:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1235:.\Generated_Source\PSoC4/PWM.c **** 
1236:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1239:.\Generated_Source\PSoC4/PWM.c **** }
1240:.\Generated_Source\PSoC4/PWM.c **** 
1241:.\Generated_Source\PSoC4/PWM.c **** 
1242:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 24


1244:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM.c **** *
1246:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1248:.\Generated_Source\PSoC4/PWM.c **** *
1249:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM.c **** *  None
1251:.\Generated_Source\PSoC4/PWM.c **** *
1252:.\Generated_Source\PSoC4/PWM.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM.c **** *
1258:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM.c **** {
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
1262:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
1263:.\Generated_Source\PSoC4/PWM.c **** }
1264:.\Generated_Source\PSoC4/PWM.c **** 
1265:.\Generated_Source\PSoC4/PWM.c **** 
1266:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM.c **** *
1270:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1277:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM.c **** *
1280:.\Generated_Source\PSoC4/PWM.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM.c **** *  None
1282:.\Generated_Source\PSoC4/PWM.c **** *
1283:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM.c **** {
1286:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
  66              		.loc 1 1286 0
  67 0024 094B     		ldr	r3, .L2+16
  68 0026 0021     		mov	r1, #0
  69 0028 1960     		str	r1, [r3]
  70              	.LBE15:
  71              	.LBE14:
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
  72              		.loc 1 133 0
  73 002a 094B     		ldr	r3, .L2+20
  74 002c 1C21     		mov	r1, #28
  75 002e 1960     		str	r1, [r3]
  76              	.LVL2:
  77              	.LBB16:
  78              	.LBB17:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 25


 689:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
  79              		.loc 1 689 0
  80 0030 084B     		ldr	r3, .L2+24
  81 0032 1A60     		str	r2, [r3]
  82              	.LVL3:
  83              	.LBE17:
  84              	.LBE16:
  85              	.LBB18:
  86              	.LBB19:
 859:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
  87              		.loc 1 859 0
  88 0034 084A     		ldr	r2, .L2+28
  89 0036 094B     		ldr	r3, .L2+32
  90 0038 1A60     		str	r2, [r3]
  91              	.LBE19:
  92              	.LBE18:
 160:.\Generated_Source\PSoC4/PWM.c **** }
  93              		.loc 1 160 0
  94 003a 7047     		bx	lr
  95              	.L3:
  96              		.align	2
  97              	.L2:
  98 003c 00010540 		.word	1074069760
  99 0040 08010540 		.word	1074069768
 100 0044 10270000 		.word	10000
 101 0048 24010540 		.word	1074069796
 102 004c 38010540 		.word	1074069816
 103 0050 28010540 		.word	1074069800
 104 0054 14010540 		.word	1074069780
 105 0058 88130000 		.word	5000
 106 005c 0C010540 		.word	1074069772
 107              		.cfi_endproc
 108              	.LFE0:
 109              		.size	PWM_Init, .-PWM_Init
 110              		.section	.text.PWM_Enable,"ax",%progbits
 111              		.align	1
 112              		.global	PWM_Enable
 113              		.code	16
 114              		.thumb_func
 115              		.type	PWM_Enable, %function
 116              	PWM_Enable:
 117              	.LFB1:
 178:.\Generated_Source\PSoC4/PWM.c **** {
 118              		.loc 1 178 0
 119              		.cfi_startproc
 120 0000 08B5     		push	{r3, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 3, -8
 123              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 124              		.loc 1 181 0
 125 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 126              	.LVL4:
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 127              		.loc 1 182 0
 128 0006 044B     		ldr	r3, .L5
 129 0008 0121     		mov	r1, #1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 26


 130 000a 1A68     		ldr	r2, [r3]
 197:.\Generated_Source\PSoC4/PWM.c **** }
 131              		.loc 1 197 0
 132              		@ sp needed
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 133              		.loc 1 182 0
 134 000c 0A43     		orr	r2, r1
 135 000e 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 136              		.loc 1 183 0
 137 0010 FFF7FEFF 		bl	CyExitCriticalSection
 138              	.LVL5:
 197:.\Generated_Source\PSoC4/PWM.c **** }
 139              		.loc 1 197 0
 140 0014 08BD     		pop	{r3, pc}
 141              	.L6:
 142 0016 C046     		.align	2
 143              	.L5:
 144 0018 00000540 		.word	1074069504
 145              		.cfi_endproc
 146              	.LFE1:
 147              		.size	PWM_Enable, .-PWM_Enable
 148              		.section	.text.PWM_Start,"ax",%progbits
 149              		.align	1
 150              		.global	PWM_Start
 151              		.code	16
 152              		.thumb_func
 153              		.type	PWM_Start, %function
 154              	PWM_Start:
 155              	.LFB2:
 225:.\Generated_Source\PSoC4/PWM.c **** {
 156              		.loc 1 225 0
 157              		.cfi_startproc
 158 0000 10B5     		push	{r4, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 162              		.loc 1 226 0
 163 0002 054C     		ldr	r4, .L10
 164 0004 2378     		ldrb	r3, [r4]
 165 0006 002B     		cmp	r3, #0
 166 0008 03D1     		bne	.L8
 228:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 167              		.loc 1 228 0
 168 000a FFF7FEFF 		bl	PWM_Init
 169              	.LVL6:
 229:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 170              		.loc 1 229 0
 171 000e 0123     		mov	r3, #1
 172 0010 2370     		strb	r3, [r4]
 173              	.L8:
 232:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 174              		.loc 1 232 0
 175 0012 FFF7FEFF 		bl	PWM_Enable
 176              	.LVL7:
 233:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 27


 177              		.loc 1 233 0
 178              		@ sp needed
 179 0016 10BD     		pop	{r4, pc}
 180              	.L11:
 181              		.align	2
 182              	.L10:
 183 0018 00000000 		.word	.LANCHOR0
 184              		.cfi_endproc
 185              	.LFE2:
 186              		.size	PWM_Start, .-PWM_Start
 187              		.section	.text.PWM_Stop,"ax",%progbits
 188              		.align	1
 189              		.global	PWM_Stop
 190              		.code	16
 191              		.thumb_func
 192              		.type	PWM_Stop, %function
 193              	PWM_Stop:
 194              	.LFB3:
 251:.\Generated_Source\PSoC4/PWM.c **** {
 195              		.loc 1 251 0
 196              		.cfi_startproc
 197 0000 08B5     		push	{r3, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 254:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 201              		.loc 1 254 0
 202 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 203              	.LVL8:
 256:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 204              		.loc 1 256 0
 205 0006 044B     		ldr	r3, .L13
 206 0008 0121     		mov	r1, #1
 207 000a 1A68     		ldr	r2, [r3]
 259:.\Generated_Source\PSoC4/PWM.c **** }
 208              		.loc 1 259 0
 209              		@ sp needed
 256:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 210              		.loc 1 256 0
 211 000c 8A43     		bic	r2, r1
 212 000e 1A60     		str	r2, [r3]
 258:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 213              		.loc 1 258 0
 214 0010 FFF7FEFF 		bl	CyExitCriticalSection
 215              	.LVL9:
 259:.\Generated_Source\PSoC4/PWM.c **** }
 216              		.loc 1 259 0
 217 0014 08BD     		pop	{r3, pc}
 218              	.L14:
 219 0016 C046     		.align	2
 220              	.L13:
 221 0018 00000540 		.word	1074069504
 222              		.cfi_endproc
 223              	.LFE3:
 224              		.size	PWM_Stop, .-PWM_Stop
 225              		.section	.text.PWM_SetMode,"ax",%progbits
 226              		.align	1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 28


 227              		.global	PWM_SetMode
 228              		.code	16
 229              		.thumb_func
 230              		.type	PWM_SetMode, %function
 231              	PWM_SetMode:
 232              	.LFB4:
 288:.\Generated_Source\PSoC4/PWM.c **** {
 233              		.loc 1 288 0
 234              		.cfi_startproc
 235              	.LVL10:
 236 0000 10B5     		push	{r4, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 4, -8
 239              		.cfi_offset 14, -4
 288:.\Generated_Source\PSoC4/PWM.c **** {
 240              		.loc 1 288 0
 241 0002 041C     		mov	r4, r0
 291:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 242              		.loc 1 291 0
 243 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 244              	.LVL11:
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 245              		.loc 1 293 0
 246 0008 054B     		ldr	r3, .L16
 247 000a 064A     		ldr	r2, .L16+4
 248 000c 1968     		ldr	r1, [r3]
 297:.\Generated_Source\PSoC4/PWM.c **** }
 249              		.loc 1 297 0
 250              		@ sp needed
 293:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 251              		.loc 1 293 0
 252 000e 0A40     		and	r2, r1
 253 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 254              		.loc 1 294 0
 255 0012 1A68     		ldr	r2, [r3]
 256 0014 1443     		orr	r4, r2
 257              	.LVL12:
 258 0016 1C60     		str	r4, [r3]
 296:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 259              		.loc 1 296 0
 260 0018 FFF7FEFF 		bl	CyExitCriticalSection
 261              	.LVL13:
 297:.\Generated_Source\PSoC4/PWM.c **** }
 262              		.loc 1 297 0
 263 001c 10BD     		pop	{r4, pc}
 264              	.L17:
 265 001e C046     		.align	2
 266              	.L16:
 267 0020 00010540 		.word	1074069760
 268 0024 FFFFFFF8 		.word	-117440513
 269              		.cfi_endproc
 270              	.LFE4:
 271              		.size	PWM_SetMode, .-PWM_SetMode
 272              		.section	.text.PWM_SetQDMode,"ax",%progbits
 273              		.align	1
 274              		.global	PWM_SetQDMode
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 29


 275              		.code	16
 276              		.thumb_func
 277              		.type	PWM_SetQDMode, %function
 278              	PWM_SetQDMode:
 279              	.LFB5:
 321:.\Generated_Source\PSoC4/PWM.c **** {
 280              		.loc 1 321 0
 281              		.cfi_startproc
 282              	.LVL14:
 283 0000 10B5     		push	{r4, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 4, -8
 286              		.cfi_offset 14, -4
 321:.\Generated_Source\PSoC4/PWM.c **** {
 287              		.loc 1 321 0
 288 0002 041C     		mov	r4, r0
 324:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 289              		.loc 1 324 0
 290 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 291              	.LVL15:
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 292              		.loc 1 326 0
 293 0008 054B     		ldr	r3, .L19
 294 000a 064A     		ldr	r2, .L19+4
 295 000c 1968     		ldr	r1, [r3]
 330:.\Generated_Source\PSoC4/PWM.c **** }
 296              		.loc 1 330 0
 297              		@ sp needed
 326:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 298              		.loc 1 326 0
 299 000e 0A40     		and	r2, r1
 300 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 301              		.loc 1 327 0
 302 0012 1A68     		ldr	r2, [r3]
 303 0014 1443     		orr	r4, r2
 304              	.LVL16:
 305 0016 1C60     		str	r4, [r3]
 329:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 306              		.loc 1 329 0
 307 0018 FFF7FEFF 		bl	CyExitCriticalSection
 308              	.LVL17:
 330:.\Generated_Source\PSoC4/PWM.c **** }
 309              		.loc 1 330 0
 310 001c 10BD     		pop	{r4, pc}
 311              	.L20:
 312 001e C046     		.align	2
 313              	.L19:
 314 0020 00010540 		.word	1074069760
 315 0024 FFFF8FFF 		.word	-7340033
 316              		.cfi_endproc
 317              	.LFE5:
 318              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 319              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 320              		.align	1
 321              		.global	PWM_SetPrescaler
 322              		.code	16
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 30


 323              		.thumb_func
 324              		.type	PWM_SetPrescaler, %function
 325              	PWM_SetPrescaler:
 326              	.LFB6:
 358:.\Generated_Source\PSoC4/PWM.c **** {
 327              		.loc 1 358 0
 328              		.cfi_startproc
 329              	.LVL18:
 330 0000 10B5     		push	{r4, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 4, -8
 333              		.cfi_offset 14, -4
 358:.\Generated_Source\PSoC4/PWM.c **** {
 334              		.loc 1 358 0
 335 0002 041C     		mov	r4, r0
 361:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 336              		.loc 1 361 0
 337 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 338              	.LVL19:
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 339              		.loc 1 363 0
 340 0008 054B     		ldr	r3, .L22
 341 000a 064A     		ldr	r2, .L22+4
 342 000c 1968     		ldr	r1, [r3]
 367:.\Generated_Source\PSoC4/PWM.c **** }
 343              		.loc 1 367 0
 344              		@ sp needed
 363:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 345              		.loc 1 363 0
 346 000e 0A40     		and	r2, r1
 347 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 348              		.loc 1 364 0
 349 0012 1A68     		ldr	r2, [r3]
 350 0014 1443     		orr	r4, r2
 351              	.LVL20:
 352 0016 1C60     		str	r4, [r3]
 366:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 353              		.loc 1 366 0
 354 0018 FFF7FEFF 		bl	CyExitCriticalSection
 355              	.LVL21:
 367:.\Generated_Source\PSoC4/PWM.c **** }
 356              		.loc 1 367 0
 357 001c 10BD     		pop	{r4, pc}
 358              	.L23:
 359 001e C046     		.align	2
 360              	.L22:
 361 0020 00010540 		.word	1074069760
 362 0024 FF00FFFF 		.word	-65281
 363              		.cfi_endproc
 364              	.LFE6:
 365              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 366              		.section	.text.PWM_SetOneShot,"ax",%progbits
 367              		.align	1
 368              		.global	PWM_SetOneShot
 369              		.code	16
 370              		.thumb_func
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 31


 371              		.type	PWM_SetOneShot, %function
 372              	PWM_SetOneShot:
 373              	.LFB7:
 390:.\Generated_Source\PSoC4/PWM.c **** {
 374              		.loc 1 390 0
 375              		.cfi_startproc
 376              	.LVL22:
 377 0000 10B5     		push	{r4, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 4, -8
 380              		.cfi_offset 14, -4
 390:.\Generated_Source\PSoC4/PWM.c **** {
 381              		.loc 1 390 0
 382 0002 041C     		mov	r4, r0
 393:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 383              		.loc 1 393 0
 384 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 385              	.LVL23:
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 386              		.loc 1 395 0
 387 0008 064B     		ldr	r3, .L25
 388 000a 074A     		ldr	r2, .L25+4
 389 000c 1968     		ldr	r1, [r3]
 400:.\Generated_Source\PSoC4/PWM.c **** }
 390              		.loc 1 400 0
 391              		@ sp needed
 395:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 392              		.loc 1 395 0
 393 000e 0A40     		and	r2, r1
 394 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 395              		.loc 1 396 0
 396 0012 0121     		mov	r1, #1
 397 0014 1A68     		ldr	r2, [r3]
 398 0016 0C40     		and	r4, r1
 399              	.LVL24:
 400 0018 A404     		lsl	r4, r4, #18
 401 001a 1443     		orr	r4, r2
 402 001c 1C60     		str	r4, [r3]
 399:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 403              		.loc 1 399 0
 404 001e FFF7FEFF 		bl	CyExitCriticalSection
 405              	.LVL25:
 400:.\Generated_Source\PSoC4/PWM.c **** }
 406              		.loc 1 400 0
 407 0022 10BD     		pop	{r4, pc}
 408              	.L26:
 409              		.align	2
 410              	.L25:
 411 0024 00010540 		.word	1074069760
 412 0028 FFFFFBFF 		.word	-262145
 413              		.cfi_endproc
 414              	.LFE7:
 415              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 416              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 417              		.align	1
 418              		.global	PWM_SetPWMMode
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 32


 419              		.code	16
 420              		.thumb_func
 421              		.type	PWM_SetPWMMode, %function
 422              	PWM_SetPWMMode:
 423              	.LFB8:
 444:.\Generated_Source\PSoC4/PWM.c **** {
 424              		.loc 1 444 0
 425              		.cfi_startproc
 426              	.LVL26:
 445:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 427              		.loc 1 445 0
 428 0000 3F23     		mov	r3, #63
 429 0002 1840     		and	r0, r3
 430              	.LVL27:
 431 0004 014B     		ldr	r3, .L28
 446:.\Generated_Source\PSoC4/PWM.c **** }
 432              		.loc 1 446 0
 433              		@ sp needed
 445:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 434              		.loc 1 445 0
 435 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/PWM.c **** }
 436              		.loc 1 446 0
 437 0008 7047     		bx	lr
 438              	.L29:
 439 000a C046     		.align	2
 440              	.L28:
 441 000c 28010540 		.word	1074069800
 442              		.cfi_endproc
 443              	.LFE8:
 444              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 445              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 446              		.align	1
 447              		.global	PWM_SetPWMSyncKill
 448              		.code	16
 449              		.thumb_func
 450              		.type	PWM_SetPWMSyncKill, %function
 451              	PWM_SetPWMSyncKill:
 452              	.LFB9:
 480:.\Generated_Source\PSoC4/PWM.c **** {
 453              		.loc 1 480 0
 454              		.cfi_startproc
 455              	.LVL28:
 456 0000 10B5     		push	{r4, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 4, -8
 459              		.cfi_offset 14, -4
 480:.\Generated_Source\PSoC4/PWM.c **** {
 460              		.loc 1 480 0
 461 0002 041C     		mov	r4, r0
 483:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 462              		.loc 1 483 0
 463 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 464              	.LVL29:
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 465              		.loc 1 485 0
 466 0008 064B     		ldr	r3, .L31
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 33


 467 000a 0421     		mov	r1, #4
 468 000c 1A68     		ldr	r2, [r3]
 490:.\Generated_Source\PSoC4/PWM.c **** }
 469              		.loc 1 490 0
 470              		@ sp needed
 485:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 471              		.loc 1 485 0
 472 000e 8A43     		bic	r2, r1
 473 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 474              		.loc 1 486 0
 475 0012 0121     		mov	r1, #1
 476 0014 1A68     		ldr	r2, [r3]
 477 0016 0C40     		and	r4, r1
 478              	.LVL30:
 479 0018 A400     		lsl	r4, r4, #2
 480 001a 1443     		orr	r4, r2
 481 001c 1C60     		str	r4, [r3]
 489:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 482              		.loc 1 489 0
 483 001e FFF7FEFF 		bl	CyExitCriticalSection
 484              	.LVL31:
 490:.\Generated_Source\PSoC4/PWM.c **** }
 485              		.loc 1 490 0
 486 0022 10BD     		pop	{r4, pc}
 487              	.L32:
 488              		.align	2
 489              	.L31:
 490 0024 00010540 		.word	1074069760
 491              		.cfi_endproc
 492              	.LFE9:
 493              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 494              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 495              		.align	1
 496              		.global	PWM_SetPWMStopOnKill
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_SetPWMStopOnKill, %function
 500              	PWM_SetPWMStopOnKill:
 501              	.LFB10:
 514:.\Generated_Source\PSoC4/PWM.c **** {
 502              		.loc 1 514 0
 503              		.cfi_startproc
 504              	.LVL32:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 514:.\Generated_Source\PSoC4/PWM.c **** {
 509              		.loc 1 514 0
 510 0002 041C     		mov	r4, r0
 517:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 511              		.loc 1 517 0
 512 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 513              	.LVL33:
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 514              		.loc 1 519 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 34


 515 0008 064B     		ldr	r3, .L34
 516 000a 0821     		mov	r1, #8
 517 000c 1A68     		ldr	r2, [r3]
 524:.\Generated_Source\PSoC4/PWM.c **** }
 518              		.loc 1 524 0
 519              		@ sp needed
 519:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 520              		.loc 1 519 0
 521 000e 8A43     		bic	r2, r1
 522 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 523              		.loc 1 520 0
 524 0012 0121     		mov	r1, #1
 525 0014 1A68     		ldr	r2, [r3]
 526 0016 0C40     		and	r4, r1
 527              	.LVL34:
 528 0018 E400     		lsl	r4, r4, #3
 529 001a 1443     		orr	r4, r2
 530 001c 1C60     		str	r4, [r3]
 523:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 531              		.loc 1 523 0
 532 001e FFF7FEFF 		bl	CyExitCriticalSection
 533              	.LVL35:
 524:.\Generated_Source\PSoC4/PWM.c **** }
 534              		.loc 1 524 0
 535 0022 10BD     		pop	{r4, pc}
 536              	.L35:
 537              		.align	2
 538              	.L34:
 539 0024 00010540 		.word	1074069760
 540              		.cfi_endproc
 541              	.LFE10:
 542              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 543              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 544              		.align	1
 545              		.global	PWM_SetPWMDeadTime
 546              		.code	16
 547              		.thumb_func
 548              		.type	PWM_SetPWMDeadTime, %function
 549              	PWM_SetPWMDeadTime:
 550              	.LFB11:
 547:.\Generated_Source\PSoC4/PWM.c **** {
 551              		.loc 1 547 0
 552              		.cfi_startproc
 553              	.LVL36:
 554 0000 10B5     		push	{r4, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 4, -8
 557              		.cfi_offset 14, -4
 547:.\Generated_Source\PSoC4/PWM.c **** {
 558              		.loc 1 547 0
 559 0002 041C     		mov	r4, r0
 550:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 560              		.loc 1 550 0
 561 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 562              	.LVL37:
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 35


 563              		.loc 1 552 0
 564 0008 064B     		ldr	r3, .L37
 565 000a 074A     		ldr	r2, .L37+4
 566 000c 1968     		ldr	r1, [r3]
 553:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 567              		.loc 1 553 0
 568 000e 2406     		lsl	r4, r4, #24
 569              	.LVL38:
 552:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 570              		.loc 1 552 0
 571 0010 0A40     		and	r2, r1
 572 0012 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 573              		.loc 1 553 0
 574 0014 1A68     		ldr	r2, [r3]
 575 0016 240C     		lsr	r4, r4, #16
 576 0018 1443     		orr	r4, r2
 577 001a 1C60     		str	r4, [r3]
 556:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 578              		.loc 1 556 0
 579 001c FFF7FEFF 		bl	CyExitCriticalSection
 580              	.LVL39:
 557:.\Generated_Source\PSoC4/PWM.c **** }
 581              		.loc 1 557 0
 582              		@ sp needed
 583 0020 10BD     		pop	{r4, pc}
 584              	.L38:
 585 0022 C046     		.align	2
 586              	.L37:
 587 0024 00010540 		.word	1074069760
 588 0028 FF00FFFF 		.word	-65281
 589              		.cfi_endproc
 590              	.LFE11:
 591              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 592              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 593              		.align	1
 594              		.global	PWM_SetPWMInvert
 595              		.code	16
 596              		.thumb_func
 597              		.type	PWM_SetPWMInvert, %function
 598              	PWM_SetPWMInvert:
 599              	.LFB12:
 580:.\Generated_Source\PSoC4/PWM.c **** {
 600              		.loc 1 580 0
 601              		.cfi_startproc
 602              	.LVL40:
 603 0000 10B5     		push	{r4, lr}
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 4, -8
 606              		.cfi_offset 14, -4
 580:.\Generated_Source\PSoC4/PWM.c **** {
 607              		.loc 1 580 0
 608 0002 041C     		mov	r4, r0
 583:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 609              		.loc 1 583 0
 610 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 611              	.LVL41:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 36


 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 612              		.loc 1 585 0
 613 0008 054B     		ldr	r3, .L40
 614 000a 064A     		ldr	r2, .L40+4
 615 000c 1968     		ldr	r1, [r3]
 589:.\Generated_Source\PSoC4/PWM.c **** }
 616              		.loc 1 589 0
 617              		@ sp needed
 585:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 618              		.loc 1 585 0
 619 000e 0A40     		and	r2, r1
 620 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 621              		.loc 1 586 0
 622 0012 1A68     		ldr	r2, [r3]
 623 0014 1443     		orr	r4, r2
 624              	.LVL42:
 625 0016 1C60     		str	r4, [r3]
 588:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 626              		.loc 1 588 0
 627 0018 FFF7FEFF 		bl	CyExitCriticalSection
 628              	.LVL43:
 589:.\Generated_Source\PSoC4/PWM.c **** }
 629              		.loc 1 589 0
 630 001c 10BD     		pop	{r4, pc}
 631              	.L41:
 632 001e C046     		.align	2
 633              	.L40:
 634 0020 00010540 		.word	1074069760
 635 0024 FFFFCFFF 		.word	-3145729
 636              		.cfi_endproc
 637              	.LFE12:
 638              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 639              		.section	.text.PWM_WriteCounter,"ax",%progbits
 640              		.align	1
 641              		.global	PWM_WriteCounter
 642              		.code	16
 643              		.thumb_func
 644              		.type	PWM_WriteCounter, %function
 645              	PWM_WriteCounter:
 646              	.LFB13:
 610:.\Generated_Source\PSoC4/PWM.c **** {
 647              		.loc 1 610 0
 648              		.cfi_startproc
 649              	.LVL44:
 611:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 650              		.loc 1 611 0
 651 0000 014B     		ldr	r3, .L43
 652 0002 80B2     		uxth	r0, r0
 653              	.LVL45:
 654 0004 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/PWM.c **** }
 655              		.loc 1 612 0
 656              		@ sp needed
 657 0006 7047     		bx	lr
 658              	.L44:
 659              		.align	2
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 37


 660              	.L43:
 661 0008 08010540 		.word	1074069768
 662              		.cfi_endproc
 663              	.LFE13:
 664              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 665              		.section	.text.PWM_ReadCounter,"ax",%progbits
 666              		.align	1
 667              		.global	PWM_ReadCounter
 668              		.code	16
 669              		.thumb_func
 670              		.type	PWM_ReadCounter, %function
 671              	PWM_ReadCounter:
 672              	.LFB14:
 630:.\Generated_Source\PSoC4/PWM.c **** {
 673              		.loc 1 630 0
 674              		.cfi_startproc
 631:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 675              		.loc 1 631 0
 676 0000 014B     		ldr	r3, .L46
 632:.\Generated_Source\PSoC4/PWM.c **** }
 677              		.loc 1 632 0
 678              		@ sp needed
 631:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 679              		.loc 1 631 0
 680 0002 1868     		ldr	r0, [r3]
 681 0004 80B2     		uxth	r0, r0
 632:.\Generated_Source\PSoC4/PWM.c **** }
 682              		.loc 1 632 0
 683 0006 7047     		bx	lr
 684              	.L47:
 685              		.align	2
 686              	.L46:
 687 0008 08010540 		.word	1074069768
 688              		.cfi_endproc
 689              	.LFE14:
 690              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 691              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 692              		.align	1
 693              		.global	PWM_SetCounterMode
 694              		.code	16
 695              		.thumb_func
 696              		.type	PWM_SetCounterMode, %function
 697              	PWM_SetCounterMode:
 698              	.LFB15:
 659:.\Generated_Source\PSoC4/PWM.c **** {
 699              		.loc 1 659 0
 700              		.cfi_startproc
 701              	.LVL46:
 702 0000 10B5     		push	{r4, lr}
 703              		.cfi_def_cfa_offset 8
 704              		.cfi_offset 4, -8
 705              		.cfi_offset 14, -4
 659:.\Generated_Source\PSoC4/PWM.c **** {
 706              		.loc 1 659 0
 707 0002 041C     		mov	r4, r0
 662:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 708              		.loc 1 662 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 38


 709 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 710              	.LVL47:
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 711              		.loc 1 664 0
 712 0008 054B     		ldr	r3, .L49
 713 000a 064A     		ldr	r2, .L49+4
 714 000c 1968     		ldr	r1, [r3]
 668:.\Generated_Source\PSoC4/PWM.c **** }
 715              		.loc 1 668 0
 716              		@ sp needed
 664:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 717              		.loc 1 664 0
 718 000e 0A40     		and	r2, r1
 719 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 720              		.loc 1 665 0
 721 0012 1A68     		ldr	r2, [r3]
 722 0014 1443     		orr	r4, r2
 723              	.LVL48:
 724 0016 1C60     		str	r4, [r3]
 667:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 725              		.loc 1 667 0
 726 0018 FFF7FEFF 		bl	CyExitCriticalSection
 727              	.LVL49:
 668:.\Generated_Source\PSoC4/PWM.c **** }
 728              		.loc 1 668 0
 729 001c 10BD     		pop	{r4, pc}
 730              	.L50:
 731 001e C046     		.align	2
 732              	.L49:
 733 0020 00010540 		.word	1074069760
 734 0024 FFFFFCFF 		.word	-196609
 735              		.cfi_endproc
 736              	.LFE15:
 737              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 738              		.section	.text.PWM_WritePeriod,"ax",%progbits
 739              		.align	1
 740              		.global	PWM_WritePeriod
 741              		.code	16
 742              		.thumb_func
 743              		.type	PWM_WritePeriod, %function
 744              	PWM_WritePeriod:
 745              	.LFB16:
 688:.\Generated_Source\PSoC4/PWM.c **** {
 746              		.loc 1 688 0
 747              		.cfi_startproc
 748              	.LVL50:
 689:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 749              		.loc 1 689 0
 750 0000 014B     		ldr	r3, .L52
 751 0002 80B2     		uxth	r0, r0
 752              	.LVL51:
 753 0004 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/PWM.c **** }
 754              		.loc 1 690 0
 755              		@ sp needed
 756 0006 7047     		bx	lr
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 39


 757              	.L53:
 758              		.align	2
 759              	.L52:
 760 0008 14010540 		.word	1074069780
 761              		.cfi_endproc
 762              	.LFE16:
 763              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 764              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 765              		.align	1
 766              		.global	PWM_ReadPeriod
 767              		.code	16
 768              		.thumb_func
 769              		.type	PWM_ReadPeriod, %function
 770              	PWM_ReadPeriod:
 771              	.LFB17:
 708:.\Generated_Source\PSoC4/PWM.c **** {
 772              		.loc 1 708 0
 773              		.cfi_startproc
 709:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 774              		.loc 1 709 0
 775 0000 014B     		ldr	r3, .L55
 710:.\Generated_Source\PSoC4/PWM.c **** }
 776              		.loc 1 710 0
 777              		@ sp needed
 709:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 778              		.loc 1 709 0
 779 0002 1868     		ldr	r0, [r3]
 780 0004 80B2     		uxth	r0, r0
 710:.\Generated_Source\PSoC4/PWM.c **** }
 781              		.loc 1 710 0
 782 0006 7047     		bx	lr
 783              	.L56:
 784              		.align	2
 785              	.L55:
 786 0008 14010540 		.word	1074069780
 787              		.cfi_endproc
 788              	.LFE17:
 789              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 790              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 791              		.align	1
 792              		.global	PWM_SetCompareSwap
 793              		.code	16
 794              		.thumb_func
 795              		.type	PWM_SetCompareSwap, %function
 796              	PWM_SetCompareSwap:
 797              	.LFB18:
 734:.\Generated_Source\PSoC4/PWM.c **** {
 798              		.loc 1 734 0
 799              		.cfi_startproc
 800              	.LVL52:
 801 0000 10B5     		push	{r4, lr}
 802              		.cfi_def_cfa_offset 8
 803              		.cfi_offset 4, -8
 804              		.cfi_offset 14, -4
 734:.\Generated_Source\PSoC4/PWM.c **** {
 805              		.loc 1 734 0
 806 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 40


 737:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 807              		.loc 1 737 0
 808 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 809              	.LVL53:
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 810              		.loc 1 739 0
 811 0008 054B     		ldr	r3, .L58
 812 000a 0122     		mov	r2, #1
 813 000c 1968     		ldr	r1, [r3]
 743:.\Generated_Source\PSoC4/PWM.c **** }
 814              		.loc 1 743 0
 815              		@ sp needed
 739:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 816              		.loc 1 739 0
 817 000e 9143     		bic	r1, r2
 818 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 819              		.loc 1 740 0
 820 0012 1968     		ldr	r1, [r3]
 821 0014 2240     		and	r2, r4
 822 0016 0A43     		orr	r2, r1
 823 0018 1A60     		str	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 824              		.loc 1 742 0
 825 001a FFF7FEFF 		bl	CyExitCriticalSection
 826              	.LVL54:
 827              	.LVL55:
 743:.\Generated_Source\PSoC4/PWM.c **** }
 828              		.loc 1 743 0
 829 001e 10BD     		pop	{r4, pc}
 830              	.L59:
 831              		.align	2
 832              	.L58:
 833 0020 00010540 		.word	1074069760
 834              		.cfi_endproc
 835              	.LFE18:
 836              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 837              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 838              		.align	1
 839              		.global	PWM_WritePeriodBuf
 840              		.code	16
 841              		.thumb_func
 842              		.type	PWM_WritePeriodBuf, %function
 843              	PWM_WritePeriodBuf:
 844              	.LFB19:
 761:.\Generated_Source\PSoC4/PWM.c **** {
 845              		.loc 1 761 0
 846              		.cfi_startproc
 847              	.LVL56:
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 848              		.loc 1 762 0
 849 0000 014B     		ldr	r3, .L61
 850 0002 80B2     		uxth	r0, r0
 851              	.LVL57:
 852 0004 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/PWM.c **** }
 853              		.loc 1 763 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 41


 854              		@ sp needed
 855 0006 7047     		bx	lr
 856              	.L62:
 857              		.align	2
 858              	.L61:
 859 0008 18010540 		.word	1074069784
 860              		.cfi_endproc
 861              	.LFE19:
 862              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 863              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 864              		.align	1
 865              		.global	PWM_ReadPeriodBuf
 866              		.code	16
 867              		.thumb_func
 868              		.type	PWM_ReadPeriodBuf, %function
 869              	PWM_ReadPeriodBuf:
 870              	.LFB20:
 781:.\Generated_Source\PSoC4/PWM.c **** {
 871              		.loc 1 781 0
 872              		.cfi_startproc
 782:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 873              		.loc 1 782 0
 874 0000 014B     		ldr	r3, .L64
 783:.\Generated_Source\PSoC4/PWM.c **** }
 875              		.loc 1 783 0
 876              		@ sp needed
 782:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 877              		.loc 1 782 0
 878 0002 1868     		ldr	r0, [r3]
 879 0004 80B2     		uxth	r0, r0
 783:.\Generated_Source\PSoC4/PWM.c **** }
 880              		.loc 1 783 0
 881 0006 7047     		bx	lr
 882              	.L65:
 883              		.align	2
 884              	.L64:
 885 0008 18010540 		.word	1074069784
 886              		.cfi_endproc
 887              	.LFE20:
 888              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 889              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 890              		.align	1
 891              		.global	PWM_SetPeriodSwap
 892              		.code	16
 893              		.thumb_func
 894              		.type	PWM_SetPeriodSwap, %function
 895              	PWM_SetPeriodSwap:
 896              	.LFB21:
 807:.\Generated_Source\PSoC4/PWM.c **** {
 897              		.loc 1 807 0
 898              		.cfi_startproc
 899              	.LVL58:
 900 0000 10B5     		push	{r4, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 4, -8
 903              		.cfi_offset 14, -4
 807:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 42


 904              		.loc 1 807 0
 905 0002 041C     		mov	r4, r0
 810:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 906              		.loc 1 810 0
 907 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 908              	.LVL59:
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 909              		.loc 1 812 0
 910 0008 064B     		ldr	r3, .L67
 911 000a 0221     		mov	r1, #2
 912 000c 1A68     		ldr	r2, [r3]
 817:.\Generated_Source\PSoC4/PWM.c **** }
 913              		.loc 1 817 0
 914              		@ sp needed
 812:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 915              		.loc 1 812 0
 916 000e 8A43     		bic	r2, r1
 917 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 918              		.loc 1 813 0
 919 0012 0121     		mov	r1, #1
 920 0014 1A68     		ldr	r2, [r3]
 921 0016 0C40     		and	r4, r1
 922              	.LVL60:
 923 0018 8C40     		lsl	r4, r4, r1
 924 001a 1443     		orr	r4, r2
 925 001c 1C60     		str	r4, [r3]
 816:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 926              		.loc 1 816 0
 927 001e FFF7FEFF 		bl	CyExitCriticalSection
 928              	.LVL61:
 817:.\Generated_Source\PSoC4/PWM.c **** }
 929              		.loc 1 817 0
 930 0022 10BD     		pop	{r4, pc}
 931              	.L68:
 932              		.align	2
 933              	.L67:
 934 0024 00010540 		.word	1074069760
 935              		.cfi_endproc
 936              	.LFE21:
 937              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 938              		.section	.text.PWM_WriteCompare,"ax",%progbits
 939              		.align	1
 940              		.global	PWM_WriteCompare
 941              		.code	16
 942              		.thumb_func
 943              		.type	PWM_WriteCompare, %function
 944              	PWM_WriteCompare:
 945              	.LFB22:
 836:.\Generated_Source\PSoC4/PWM.c **** {
 946              		.loc 1 836 0
 947              		.cfi_startproc
 948              	.LVL62:
 859:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 949              		.loc 1 859 0
 950 0000 014B     		ldr	r3, .L70
 951 0002 80B2     		uxth	r0, r0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 43


 952              	.LVL63:
 953 0004 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/PWM.c **** }
 954              		.loc 1 860 0
 955              		@ sp needed
 956 0006 7047     		bx	lr
 957              	.L71:
 958              		.align	2
 959              	.L70:
 960 0008 0C010540 		.word	1074069772
 961              		.cfi_endproc
 962              	.LFE22:
 963              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 964              		.section	.text.PWM_ReadCompare,"ax",%progbits
 965              		.align	1
 966              		.global	PWM_ReadCompare
 967              		.code	16
 968              		.thumb_func
 969              		.type	PWM_ReadCompare, %function
 970              	PWM_ReadCompare:
 971              	.LFB23:
 879:.\Generated_Source\PSoC4/PWM.c **** {
 972              		.loc 1 879 0
 973              		.cfi_startproc
 904:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 974              		.loc 1 904 0
 975 0000 014B     		ldr	r3, .L73
 906:.\Generated_Source\PSoC4/PWM.c **** }
 976              		.loc 1 906 0
 977              		@ sp needed
 904:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 978              		.loc 1 904 0
 979 0002 1868     		ldr	r0, [r3]
 980 0004 80B2     		uxth	r0, r0
 906:.\Generated_Source\PSoC4/PWM.c **** }
 981              		.loc 1 906 0
 982 0006 7047     		bx	lr
 983              	.L74:
 984              		.align	2
 985              	.L73:
 986 0008 0C010540 		.word	1074069772
 987              		.cfi_endproc
 988              	.LFE23:
 989              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 990              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 991              		.align	1
 992              		.global	PWM_WriteCompareBuf
 993              		.code	16
 994              		.thumb_func
 995              		.type	PWM_WriteCompareBuf, %function
 996              	PWM_WriteCompareBuf:
 997              	.LFB24:
 925:.\Generated_Source\PSoC4/PWM.c **** {
 998              		.loc 1 925 0
 999              		.cfi_startproc
 1000              	.LVL64:
 946:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 44


 1001              		.loc 1 946 0
 1002 0000 014B     		ldr	r3, .L76
 1003 0002 80B2     		uxth	r0, r0
 1004              	.LVL65:
 1005 0004 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/PWM.c **** }
 1006              		.loc 1 947 0
 1007              		@ sp needed
 1008 0006 7047     		bx	lr
 1009              	.L77:
 1010              		.align	2
 1011              	.L76:
 1012 0008 10010540 		.word	1074069776
 1013              		.cfi_endproc
 1014              	.LFE24:
 1015              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1016              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1017              		.align	1
 1018              		.global	PWM_ReadCompareBuf
 1019              		.code	16
 1020              		.thumb_func
 1021              		.type	PWM_ReadCompareBuf, %function
 1022              	PWM_ReadCompareBuf:
 1023              	.LFB25:
 966:.\Generated_Source\PSoC4/PWM.c **** {
 1024              		.loc 1 966 0
 1025              		.cfi_startproc
 991:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1026              		.loc 1 991 0
 1027 0000 014B     		ldr	r3, .L79
 993:.\Generated_Source\PSoC4/PWM.c **** }
 1028              		.loc 1 993 0
 1029              		@ sp needed
 991:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1030              		.loc 1 991 0
 1031 0002 1868     		ldr	r0, [r3]
 1032 0004 80B2     		uxth	r0, r0
 993:.\Generated_Source\PSoC4/PWM.c **** }
 1033              		.loc 1 993 0
 1034 0006 7047     		bx	lr
 1035              	.L80:
 1036              		.align	2
 1037              	.L79:
 1038 0008 10010540 		.word	1074069776
 1039              		.cfi_endproc
 1040              	.LFE25:
 1041              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1042              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1043              		.align	1
 1044              		.global	PWM_ReadCapture
 1045              		.code	16
 1046              		.thumb_func
 1047              		.type	PWM_ReadCapture, %function
 1048              	PWM_ReadCapture:
 1049              	.LFB26:
1012:.\Generated_Source\PSoC4/PWM.c **** {
 1050              		.loc 1 1012 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 45


 1051              		.cfi_startproc
1013:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1052              		.loc 1 1013 0
 1053 0000 014B     		ldr	r3, .L82
1014:.\Generated_Source\PSoC4/PWM.c **** }
 1054              		.loc 1 1014 0
 1055              		@ sp needed
1013:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1056              		.loc 1 1013 0
 1057 0002 1868     		ldr	r0, [r3]
 1058 0004 80B2     		uxth	r0, r0
1014:.\Generated_Source\PSoC4/PWM.c **** }
 1059              		.loc 1 1014 0
 1060 0006 7047     		bx	lr
 1061              	.L83:
 1062              		.align	2
 1063              	.L82:
 1064 0008 0C010540 		.word	1074069772
 1065              		.cfi_endproc
 1066              	.LFE26:
 1067              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1068              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1069              		.align	1
 1070              		.global	PWM_ReadCaptureBuf
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	PWM_ReadCaptureBuf, %function
 1074              	PWM_ReadCaptureBuf:
 1075              	.LFB27:
1033:.\Generated_Source\PSoC4/PWM.c **** {
 1076              		.loc 1 1033 0
 1077              		.cfi_startproc
1034:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1078              		.loc 1 1034 0
 1079 0000 014B     		ldr	r3, .L85
1035:.\Generated_Source\PSoC4/PWM.c **** }
 1080              		.loc 1 1035 0
 1081              		@ sp needed
1034:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1082              		.loc 1 1034 0
 1083 0002 1868     		ldr	r0, [r3]
 1084 0004 80B2     		uxth	r0, r0
1035:.\Generated_Source\PSoC4/PWM.c **** }
 1085              		.loc 1 1035 0
 1086 0006 7047     		bx	lr
 1087              	.L86:
 1088              		.align	2
 1089              	.L85:
 1090 0008 10010540 		.word	1074069776
 1091              		.cfi_endproc
 1092              	.LFE27:
 1093              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1094              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1095              		.align	1
 1096              		.global	PWM_SetCaptureMode
 1097              		.code	16
 1098              		.thumb_func
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 46


 1099              		.type	PWM_SetCaptureMode, %function
 1100              	PWM_SetCaptureMode:
 1101              	.LFB28:
1060:.\Generated_Source\PSoC4/PWM.c **** {
 1102              		.loc 1 1060 0
 1103              		.cfi_startproc
 1104              	.LVL66:
 1105 0000 10B5     		push	{r4, lr}
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 4, -8
 1108              		.cfi_offset 14, -4
1060:.\Generated_Source\PSoC4/PWM.c **** {
 1109              		.loc 1 1060 0
 1110 0002 041C     		mov	r4, r0
1063:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1111              		.loc 1 1063 0
 1112 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1113              	.LVL67:
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1114              		.loc 1 1065 0
 1115 0008 054B     		ldr	r3, .L88
 1116 000a 0321     		mov	r1, #3
 1117 000c 1A68     		ldr	r2, [r3]
1069:.\Generated_Source\PSoC4/PWM.c **** }
 1118              		.loc 1 1069 0
 1119              		@ sp needed
1065:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1120              		.loc 1 1065 0
 1121 000e 8A43     		bic	r2, r1
 1122 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1123              		.loc 1 1066 0
 1124 0012 1A68     		ldr	r2, [r3]
 1125 0014 1443     		orr	r4, r2
 1126              	.LVL68:
 1127 0016 1C60     		str	r4, [r3]
1068:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1128              		.loc 1 1068 0
 1129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1130              	.LVL69:
1069:.\Generated_Source\PSoC4/PWM.c **** }
 1131              		.loc 1 1069 0
 1132 001c 10BD     		pop	{r4, pc}
 1133              	.L89:
 1134 001e C046     		.align	2
 1135              	.L88:
 1136 0020 24010540 		.word	1074069796
 1137              		.cfi_endproc
 1138              	.LFE28:
 1139              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1140              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1141              		.align	1
 1142              		.global	PWM_SetReloadMode
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	PWM_SetReloadMode, %function
 1146              	PWM_SetReloadMode:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 47


 1147              	.LFB29:
1093:.\Generated_Source\PSoC4/PWM.c **** {
 1148              		.loc 1 1093 0
 1149              		.cfi_startproc
 1150              	.LVL70:
 1151 0000 10B5     		push	{r4, lr}
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 4, -8
 1154              		.cfi_offset 14, -4
1093:.\Generated_Source\PSoC4/PWM.c **** {
 1155              		.loc 1 1093 0
 1156 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1157              		.loc 1 1096 0
 1158 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1159              	.LVL71:
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1160              		.loc 1 1098 0
 1161 0008 054B     		ldr	r3, .L91
 1162 000a 3021     		mov	r1, #48
 1163 000c 1A68     		ldr	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1164              		.loc 1 1099 0
 1165 000e 2401     		lsl	r4, r4, #4
 1166              	.LVL72:
1098:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1167              		.loc 1 1098 0
 1168 0010 8A43     		bic	r2, r1
 1169 0012 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1170              		.loc 1 1099 0
 1171 0014 1A68     		ldr	r2, [r3]
1102:.\Generated_Source\PSoC4/PWM.c **** }
 1172              		.loc 1 1102 0
 1173              		@ sp needed
1099:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1174              		.loc 1 1099 0
 1175 0016 1443     		orr	r4, r2
 1176 0018 1C60     		str	r4, [r3]
1101:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1177              		.loc 1 1101 0
 1178 001a FFF7FEFF 		bl	CyExitCriticalSection
 1179              	.LVL73:
1102:.\Generated_Source\PSoC4/PWM.c **** }
 1180              		.loc 1 1102 0
 1181 001e 10BD     		pop	{r4, pc}
 1182              	.L92:
 1183              		.align	2
 1184              	.L91:
 1185 0020 24010540 		.word	1074069796
 1186              		.cfi_endproc
 1187              	.LFE29:
 1188              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1189              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1190              		.align	1
 1191              		.global	PWM_SetStartMode
 1192              		.code	16
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 48


 1193              		.thumb_func
 1194              		.type	PWM_SetStartMode, %function
 1195              	PWM_SetStartMode:
 1196              	.LFB30:
1126:.\Generated_Source\PSoC4/PWM.c **** {
 1197              		.loc 1 1126 0
 1198              		.cfi_startproc
 1199              	.LVL74:
 1200 0000 10B5     		push	{r4, lr}
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 4, -8
 1203              		.cfi_offset 14, -4
1126:.\Generated_Source\PSoC4/PWM.c **** {
 1204              		.loc 1 1126 0
 1205 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1206              		.loc 1 1129 0
 1207 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1208              	.LVL75:
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1209              		.loc 1 1131 0
 1210 0008 054B     		ldr	r3, .L94
 1211 000a 064A     		ldr	r2, .L94+4
 1212 000c 1968     		ldr	r1, [r3]
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1213              		.loc 1 1132 0
 1214 000e 2402     		lsl	r4, r4, #8
 1215              	.LVL76:
1131:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1216              		.loc 1 1131 0
 1217 0010 0A40     		and	r2, r1
 1218 0012 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1219              		.loc 1 1132 0
 1220 0014 1A68     		ldr	r2, [r3]
1135:.\Generated_Source\PSoC4/PWM.c **** }
 1221              		.loc 1 1135 0
 1222              		@ sp needed
1132:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1223              		.loc 1 1132 0
 1224 0016 1443     		orr	r4, r2
 1225 0018 1C60     		str	r4, [r3]
1134:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1226              		.loc 1 1134 0
 1227 001a FFF7FEFF 		bl	CyExitCriticalSection
 1228              	.LVL77:
1135:.\Generated_Source\PSoC4/PWM.c **** }
 1229              		.loc 1 1135 0
 1230 001e 10BD     		pop	{r4, pc}
 1231              	.L95:
 1232              		.align	2
 1233              	.L94:
 1234 0020 24010540 		.word	1074069796
 1235 0024 FFFCFFFF 		.word	-769
 1236              		.cfi_endproc
 1237              	.LFE30:
 1238              		.size	PWM_SetStartMode, .-PWM_SetStartMode
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 49


 1239              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1240              		.align	1
 1241              		.global	PWM_SetStopMode
 1242              		.code	16
 1243              		.thumb_func
 1244              		.type	PWM_SetStopMode, %function
 1245              	PWM_SetStopMode:
 1246              	.LFB31:
1158:.\Generated_Source\PSoC4/PWM.c **** {
 1247              		.loc 1 1158 0
 1248              		.cfi_startproc
 1249              	.LVL78:
 1250 0000 10B5     		push	{r4, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 4, -8
 1253              		.cfi_offset 14, -4
1158:.\Generated_Source\PSoC4/PWM.c **** {
 1254              		.loc 1 1158 0
 1255 0002 041C     		mov	r4, r0
1161:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1256              		.loc 1 1161 0
 1257 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1258              	.LVL79:
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1259              		.loc 1 1163 0
 1260 0008 054B     		ldr	r3, .L97
 1261 000a C021     		mov	r1, #192
 1262 000c 1A68     		ldr	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1263              		.loc 1 1164 0
 1264 000e A401     		lsl	r4, r4, #6
 1265              	.LVL80:
1163:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1266              		.loc 1 1163 0
 1267 0010 8A43     		bic	r2, r1
 1268 0012 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1269              		.loc 1 1164 0
 1270 0014 1A68     		ldr	r2, [r3]
1167:.\Generated_Source\PSoC4/PWM.c **** }
 1271              		.loc 1 1167 0
 1272              		@ sp needed
1164:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1273              		.loc 1 1164 0
 1274 0016 1443     		orr	r4, r2
 1275 0018 1C60     		str	r4, [r3]
1166:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1276              		.loc 1 1166 0
 1277 001a FFF7FEFF 		bl	CyExitCriticalSection
 1278              	.LVL81:
1167:.\Generated_Source\PSoC4/PWM.c **** }
 1279              		.loc 1 1167 0
 1280 001e 10BD     		pop	{r4, pc}
 1281              	.L98:
 1282              		.align	2
 1283              	.L97:
 1284 0020 24010540 		.word	1074069796
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 50


 1285              		.cfi_endproc
 1286              	.LFE31:
 1287              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1288              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1289              		.align	1
 1290              		.global	PWM_SetCountMode
 1291              		.code	16
 1292              		.thumb_func
 1293              		.type	PWM_SetCountMode, %function
 1294              	PWM_SetCountMode:
 1295              	.LFB32:
1191:.\Generated_Source\PSoC4/PWM.c **** {
 1296              		.loc 1 1191 0
 1297              		.cfi_startproc
 1298              	.LVL82:
 1299 0000 10B5     		push	{r4, lr}
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 4, -8
 1302              		.cfi_offset 14, -4
1191:.\Generated_Source\PSoC4/PWM.c **** {
 1303              		.loc 1 1191 0
 1304 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1305              		.loc 1 1194 0
 1306 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1307              	.LVL83:
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1308              		.loc 1 1196 0
 1309 0008 054B     		ldr	r3, .L100
 1310 000a 0C21     		mov	r1, #12
 1311 000c 1A68     		ldr	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1312              		.loc 1 1197 0
 1313 000e A400     		lsl	r4, r4, #2
 1314              	.LVL84:
1196:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1315              		.loc 1 1196 0
 1316 0010 8A43     		bic	r2, r1
 1317 0012 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1318              		.loc 1 1197 0
 1319 0014 1A68     		ldr	r2, [r3]
1200:.\Generated_Source\PSoC4/PWM.c **** }
 1320              		.loc 1 1200 0
 1321              		@ sp needed
1197:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1322              		.loc 1 1197 0
 1323 0016 1443     		orr	r4, r2
 1324 0018 1C60     		str	r4, [r3]
1199:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1325              		.loc 1 1199 0
 1326 001a FFF7FEFF 		bl	CyExitCriticalSection
 1327              	.LVL85:
1200:.\Generated_Source\PSoC4/PWM.c **** }
 1328              		.loc 1 1200 0
 1329 001e 10BD     		pop	{r4, pc}
 1330              	.L101:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 51


 1331              		.align	2
 1332              	.L100:
 1333 0020 24010540 		.word	1074069796
 1334              		.cfi_endproc
 1335              	.LFE32:
 1336              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1337              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1338              		.align	1
 1339              		.global	PWM_TriggerCommand
 1340              		.code	16
 1341              		.thumb_func
 1342              		.type	PWM_TriggerCommand, %function
 1343              	PWM_TriggerCommand:
 1344              	.LFB33:
1231:.\Generated_Source\PSoC4/PWM.c **** {
 1345              		.loc 1 1231 0
 1346              		.cfi_startproc
 1347              	.LVL86:
 1348 0000 38B5     		push	{r3, r4, r5, lr}
 1349              		.cfi_def_cfa_offset 16
 1350              		.cfi_offset 3, -16
 1351              		.cfi_offset 4, -12
 1352              		.cfi_offset 5, -8
 1353              		.cfi_offset 14, -4
1231:.\Generated_Source\PSoC4/PWM.c **** {
 1354              		.loc 1 1231 0
 1355 0002 0C1C     		mov	r4, r1
 1356 0004 051C     		mov	r5, r0
1234:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1357              		.loc 1 1234 0
 1358 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1359              	.LVL87:
1236:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1360              		.loc 1 1236 0
 1361 000a 034B     		ldr	r3, .L103
 1362 000c A540     		lsl	r5, r5, r4
 1363              	.LVL88:
 1364 000e 1D60     		str	r5, [r3]
1238:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1365              		.loc 1 1238 0
 1366 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1367              	.LVL89:
1239:.\Generated_Source\PSoC4/PWM.c **** }
 1368              		.loc 1 1239 0
 1369              		@ sp needed
 1370              	.LVL90:
 1371 0014 38BD     		pop	{r3, r4, r5, pc}
 1372              	.L104:
 1373 0016 C046     		.align	2
 1374              	.L103:
 1375 0018 08000540 		.word	1074069512
 1376              		.cfi_endproc
 1377              	.LFE33:
 1378              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1379              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1380              		.align	1
 1381              		.global	PWM_ReadStatus
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 52


 1382              		.code	16
 1383              		.thumb_func
 1384              		.type	PWM_ReadStatus, %function
 1385              	PWM_ReadStatus:
 1386              	.LFB34:
1260:.\Generated_Source\PSoC4/PWM.c **** {
 1387              		.loc 1 1260 0
 1388              		.cfi_startproc
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1389              		.loc 1 1261 0
 1390 0000 034B     		ldr	r3, .L106
1263:.\Generated_Source\PSoC4/PWM.c **** }
 1391              		.loc 1 1263 0
 1392              		@ sp needed
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1393              		.loc 1 1261 0
 1394 0002 1A68     		ldr	r2, [r3]
1262:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1395              		.loc 1 1262 0
 1396 0004 1868     		ldr	r0, [r3]
 1397 0006 0123     		mov	r3, #1
 1398 0008 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1399              		.loc 1 1261 0
 1400 000a 930F     		lsr	r3, r2, #30
 1401 000c 1843     		orr	r0, r3
1263:.\Generated_Source\PSoC4/PWM.c **** }
 1402              		.loc 1 1263 0
 1403 000e 7047     		bx	lr
 1404              	.L107:
 1405              		.align	2
 1406              	.L106:
 1407 0010 04010540 		.word	1074069764
 1408              		.cfi_endproc
 1409              	.LFE34:
 1410              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1411              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1412              		.align	1
 1413              		.global	PWM_SetInterruptMode
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	PWM_SetInterruptMode, %function
 1417              	PWM_SetInterruptMode:
 1418              	.LFB35:
1285:.\Generated_Source\PSoC4/PWM.c **** {
 1419              		.loc 1 1285 0
 1420              		.cfi_startproc
 1421              	.LVL91:
 1422              		.loc 1 1286 0
 1423 0000 014B     		ldr	r3, .L109
1287:.\Generated_Source\PSoC4/PWM.c **** }
 1424              		.loc 1 1287 0
 1425              		@ sp needed
1286:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1426              		.loc 1 1286 0
 1427 0002 1860     		str	r0, [r3]
 1428              		.loc 1 1287 0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 53


 1429 0004 7047     		bx	lr
 1430              	.L110:
 1431 0006 C046     		.align	2
 1432              	.L109:
 1433 0008 38010540 		.word	1074069816
 1434              		.cfi_endproc
 1435              	.LFE35:
 1436              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1437              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1438              		.align	1
 1439              		.global	PWM_GetInterruptSourceMasked
 1440              		.code	16
 1441              		.thumb_func
 1442              		.type	PWM_GetInterruptSourceMasked, %function
 1443              	PWM_GetInterruptSourceMasked:
 1444              	.LFB36:
1288:.\Generated_Source\PSoC4/PWM.c **** 
1289:.\Generated_Source\PSoC4/PWM.c **** 
1290:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM.c **** *
1294:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM.c **** *   None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM.c **** *
1306:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM.c **** {
 1445              		.loc 1 1308 0
 1446              		.cfi_startproc
1309:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1447              		.loc 1 1309 0
 1448 0000 014B     		ldr	r3, .L112
1310:.\Generated_Source\PSoC4/PWM.c **** }
 1449              		.loc 1 1310 0
 1450              		@ sp needed
1309:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1451              		.loc 1 1309 0
 1452 0002 1868     		ldr	r0, [r3]
 1453              		.loc 1 1310 0
 1454 0004 7047     		bx	lr
 1455              	.L113:
 1456 0006 C046     		.align	2
 1457              	.L112:
 1458 0008 3C010540 		.word	1074069820
 1459              		.cfi_endproc
 1460              	.LFE36:
 1461              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 54


 1462              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1463              		.align	1
 1464              		.global	PWM_GetInterruptSource
 1465              		.code	16
 1466              		.thumb_func
 1467              		.type	PWM_GetInterruptSource, %function
 1468              	PWM_GetInterruptSource:
 1469              	.LFB37:
1311:.\Generated_Source\PSoC4/PWM.c **** 
1312:.\Generated_Source\PSoC4/PWM.c **** 
1313:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM.c **** *
1317:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM.c **** *
1320:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM.c **** *  None
1322:.\Generated_Source\PSoC4/PWM.c **** *
1323:.\Generated_Source\PSoC4/PWM.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM.c **** *
1329:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM.c **** {
 1470              		.loc 1 1331 0
 1471              		.cfi_startproc
1332:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1472              		.loc 1 1332 0
 1473 0000 014B     		ldr	r3, .L115
1333:.\Generated_Source\PSoC4/PWM.c **** }
 1474              		.loc 1 1333 0
 1475              		@ sp needed
1332:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1476              		.loc 1 1332 0
 1477 0002 1868     		ldr	r0, [r3]
 1478              		.loc 1 1333 0
 1479 0004 7047     		bx	lr
 1480              	.L116:
 1481 0006 C046     		.align	2
 1482              	.L115:
 1483 0008 30010540 		.word	1074069808
 1484              		.cfi_endproc
 1485              	.LFE37:
 1486              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1487              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1488              		.align	1
 1489              		.global	PWM_ClearInterrupt
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	PWM_ClearInterrupt, %function
 1493              	PWM_ClearInterrupt:
 1494              	.LFB38:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 55


1334:.\Generated_Source\PSoC4/PWM.c **** 
1335:.\Generated_Source\PSoC4/PWM.c **** 
1336:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM.c **** *
1340:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM.c **** *
1343:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM.c **** *
1349:.\Generated_Source\PSoC4/PWM.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM.c **** *  None
1351:.\Generated_Source\PSoC4/PWM.c **** *
1352:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM.c **** {
 1495              		.loc 1 1354 0
 1496              		.cfi_startproc
 1497              	.LVL92:
1355:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1498              		.loc 1 1355 0
 1499 0000 014B     		ldr	r3, .L118
1356:.\Generated_Source\PSoC4/PWM.c **** }
 1500              		.loc 1 1356 0
 1501              		@ sp needed
1355:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1502              		.loc 1 1355 0
 1503 0002 1860     		str	r0, [r3]
 1504              		.loc 1 1356 0
 1505 0004 7047     		bx	lr
 1506              	.L119:
 1507 0006 C046     		.align	2
 1508              	.L118:
 1509 0008 30010540 		.word	1074069808
 1510              		.cfi_endproc
 1511              	.LFE38:
 1512              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1513              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1514              		.align	1
 1515              		.global	PWM_SetInterrupt
 1516              		.code	16
 1517              		.thumb_func
 1518              		.type	PWM_SetInterrupt, %function
 1519              	PWM_SetInterrupt:
 1520              	.LFB39:
1357:.\Generated_Source\PSoC4/PWM.c **** 
1358:.\Generated_Source\PSoC4/PWM.c **** 
1359:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM.c **** *
1363:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 56


1364:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM.c **** *
1366:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM.c **** *
1372:.\Generated_Source\PSoC4/PWM.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM.c **** *  None
1374:.\Generated_Source\PSoC4/PWM.c **** *
1375:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM.c **** {
 1521              		.loc 1 1377 0
 1522              		.cfi_startproc
 1523              	.LVL93:
1378:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1524              		.loc 1 1378 0
 1525 0000 014B     		ldr	r3, .L121
1379:.\Generated_Source\PSoC4/PWM.c **** }
 1526              		.loc 1 1379 0
 1527              		@ sp needed
1378:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1528              		.loc 1 1378 0
 1529 0002 1860     		str	r0, [r3]
 1530              		.loc 1 1379 0
 1531 0004 7047     		bx	lr
 1532              	.L122:
 1533 0006 C046     		.align	2
 1534              	.L121:
 1535 0008 34010540 		.word	1074069812
 1536              		.cfi_endproc
 1537              	.LFE39:
 1538              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1539              		.global	PWM_initVar
 1540              		.bss
 1541              		.set	.LANCHOR0,. + 0
 1542              		.type	PWM_initVar, %object
 1543              		.size	PWM_initVar, 1
 1544              	PWM_initVar:
 1545 0000 00       		.space	1
 1546              		.text
 1547              	.Letext0:
 1548              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1549              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1550              		.section	.debug_info,"",%progbits
 1551              	.Ldebug_info0:
 1552 0000 45090000 		.4byte	0x945
 1553 0004 0400     		.2byte	0x4
 1554 0006 00000000 		.4byte	.Ldebug_abbrev0
 1555 000a 04       		.byte	0x4
 1556 000b 01       		.uleb128 0x1
 1557 000c CF030000 		.4byte	.LASF76
 1558 0010 01       		.byte	0x1
 1559 0011 E9000000 		.4byte	.LASF77
 1560 0015 BC020000 		.4byte	.LASF78
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 57


 1561 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1562 001d 00000000 		.4byte	0
 1563 0021 00000000 		.4byte	.Ldebug_line0
 1564 0025 02       		.uleb128 0x2
 1565 0026 01       		.byte	0x1
 1566 0027 06       		.byte	0x6
 1567 0028 A1000000 		.4byte	.LASF0
 1568 002c 02       		.uleb128 0x2
 1569 002d 01       		.byte	0x1
 1570 002e 08       		.byte	0x8
 1571 002f 27030000 		.4byte	.LASF1
 1572 0033 02       		.uleb128 0x2
 1573 0034 02       		.byte	0x2
 1574 0035 05       		.byte	0x5
 1575 0036 5E030000 		.4byte	.LASF2
 1576 003a 02       		.uleb128 0x2
 1577 003b 02       		.byte	0x2
 1578 003c 07       		.byte	0x7
 1579 003d 09020000 		.4byte	.LASF3
 1580 0041 02       		.uleb128 0x2
 1581 0042 04       		.byte	0x4
 1582 0043 05       		.byte	0x5
 1583 0044 08010000 		.4byte	.LASF4
 1584 0048 02       		.uleb128 0x2
 1585 0049 04       		.byte	0x4
 1586 004a 07       		.byte	0x7
 1587 004b D7010000 		.4byte	.LASF5
 1588 004f 02       		.uleb128 0x2
 1589 0050 08       		.byte	0x8
 1590 0051 05       		.byte	0x5
 1591 0052 93000000 		.4byte	.LASF6
 1592 0056 02       		.uleb128 0x2
 1593 0057 08       		.byte	0x8
 1594 0058 07       		.byte	0x7
 1595 0059 41000000 		.4byte	.LASF7
 1596 005d 03       		.uleb128 0x3
 1597 005e 04       		.byte	0x4
 1598 005f 05       		.byte	0x5
 1599 0060 696E7400 		.ascii	"int\000"
 1600 0064 02       		.uleb128 0x2
 1601 0065 04       		.byte	0x4
 1602 0066 07       		.byte	0x7
 1603 0067 AF010000 		.4byte	.LASF8
 1604 006b 04       		.uleb128 0x4
 1605 006c 11010000 		.4byte	.LASF9
 1606 0070 02       		.byte	0x2
 1607 0071 A1       		.byte	0xa1
 1608 0072 2C000000 		.4byte	0x2c
 1609 0076 04       		.uleb128 0x4
 1610 0077 5E010000 		.4byte	.LASF10
 1611 007b 02       		.byte	0x2
 1612 007c A3       		.byte	0xa3
 1613 007d 48000000 		.4byte	0x48
 1614 0081 02       		.uleb128 0x2
 1615 0082 04       		.byte	0x4
 1616 0083 04       		.byte	0x4
 1617 0084 F5020000 		.4byte	.LASF11
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 58


 1618 0088 02       		.uleb128 0x2
 1619 0089 08       		.byte	0x8
 1620 008a 04       		.byte	0x4
 1621 008b 17010000 		.4byte	.LASF12
 1622 008f 02       		.uleb128 0x2
 1623 0090 01       		.byte	0x1
 1624 0091 08       		.byte	0x8
 1625 0092 B4030000 		.4byte	.LASF13
 1626 0096 05       		.uleb128 0x5
 1627 0097 5A020000 		.4byte	.LASF14
 1628 009b 02       		.byte	0x2
 1629 009c 4D01     		.2byte	0x14d
 1630 009e A2000000 		.4byte	0xa2
 1631 00a2 06       		.uleb128 0x6
 1632 00a3 76000000 		.4byte	0x76
 1633 00a7 02       		.uleb128 0x2
 1634 00a8 04       		.byte	0x4
 1635 00a9 07       		.byte	0x7
 1636 00aa 7B020000 		.4byte	.LASF15
 1637 00ae 07       		.uleb128 0x7
 1638 00af 72000000 		.4byte	.LASF16
 1639 00b3 01       		.byte	0x1
 1640 00b4 6102     		.2byte	0x261
 1641 00b6 01       		.byte	0x1
 1642 00b7 C8000000 		.4byte	0xc8
 1643 00bb 08       		.uleb128 0x8
 1644 00bc 00000000 		.4byte	.LASF18
 1645 00c0 01       		.byte	0x1
 1646 00c1 6102     		.2byte	0x261
 1647 00c3 76000000 		.4byte	0x76
 1648 00c7 00       		.byte	0
 1649 00c8 07       		.uleb128 0x7
 1650 00c9 C1000000 		.4byte	.LASF17
 1651 00cd 01       		.byte	0x1
 1652 00ce 0405     		.2byte	0x504
 1653 00d0 01       		.byte	0x1
 1654 00d1 E2000000 		.4byte	0xe2
 1655 00d5 08       		.uleb128 0x8
 1656 00d6 85030000 		.4byte	.LASF19
 1657 00da 01       		.byte	0x1
 1658 00db 0405     		.2byte	0x504
 1659 00dd 76000000 		.4byte	0x76
 1660 00e1 00       		.byte	0
 1661 00e2 07       		.uleb128 0x7
 1662 00e3 4A020000 		.4byte	.LASF20
 1663 00e7 01       		.byte	0x1
 1664 00e8 AF02     		.2byte	0x2af
 1665 00ea 01       		.byte	0x1
 1666 00eb FC000000 		.4byte	0xfc
 1667 00ef 08       		.uleb128 0x8
 1668 00f0 3A000000 		.4byte	.LASF21
 1669 00f4 01       		.byte	0x1
 1670 00f5 AF02     		.2byte	0x2af
 1671 00f7 76000000 		.4byte	0x76
 1672 00fb 00       		.byte	0
 1673 00fc 07       		.uleb128 0x7
 1674 00fd 17050000 		.4byte	.LASF22
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 59


 1675 0101 01       		.byte	0x1
 1676 0102 4303     		.2byte	0x343
 1677 0104 01       		.byte	0x1
 1678 0105 16010000 		.4byte	0x116
 1679 0109 08       		.uleb128 0x8
 1680 010a 93020000 		.4byte	.LASF23
 1681 010e 01       		.byte	0x1
 1682 010f 4303     		.2byte	0x343
 1683 0111 76000000 		.4byte	0x76
 1684 0115 00       		.byte	0
 1685 0116 09       		.uleb128 0x9
 1686 0117 35030000 		.4byte	.LASF24
 1687 011b 01       		.byte	0x1
 1688 011c 26       		.byte	0x26
 1689 011d 00000000 		.4byte	.LFB0
 1690 0121 60000000 		.4byte	.LFE0-.LFB0
 1691 0125 01       		.uleb128 0x1
 1692 0126 9C       		.byte	0x9c
 1693 0127 93010000 		.4byte	0x193
 1694 012b 0A       		.uleb128 0xa
 1695 012c AE000000 		.4byte	0xae
 1696 0130 12000000 		.4byte	.LBB10
 1697 0134 00000000 		.4byte	.Ldebug_ranges0+0
 1698 0138 01       		.byte	0x1
 1699 0139 65       		.byte	0x65
 1700 013a 46010000 		.4byte	0x146
 1701 013e 0B       		.uleb128 0xb
 1702 013f BB000000 		.4byte	0xbb
 1703 0143 1027     		.2byte	0x2710
 1704 0145 00       		.byte	0
 1705 0146 0C       		.uleb128 0xc
 1706 0147 C8000000 		.4byte	0xc8
 1707 014b 24000000 		.4byte	.LBB14
 1708 014f 06000000 		.4byte	.LBE14-.LBB14
 1709 0153 01       		.byte	0x1
 1710 0154 77       		.byte	0x77
 1711 0155 60010000 		.4byte	0x160
 1712 0159 0D       		.uleb128 0xd
 1713 015a D5000000 		.4byte	0xd5
 1714 015e 00       		.byte	0
 1715 015f 00       		.byte	0
 1716 0160 0C       		.uleb128 0xc
 1717 0161 E2000000 		.4byte	0xe2
 1718 0165 30000000 		.4byte	.LBB16
 1719 0169 04000000 		.4byte	.LBE16-.LBB16
 1720 016d 01       		.byte	0x1
 1721 016e 92       		.byte	0x92
 1722 016f 7B010000 		.4byte	0x17b
 1723 0173 0B       		.uleb128 0xb
 1724 0174 EF000000 		.4byte	0xef
 1725 0178 1027     		.2byte	0x2710
 1726 017a 00       		.byte	0
 1727 017b 0E       		.uleb128 0xe
 1728 017c FC000000 		.4byte	0xfc
 1729 0180 34000000 		.4byte	.LBB18
 1730 0184 06000000 		.4byte	.LBE18-.LBB18
 1731 0188 01       		.byte	0x1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 60


 1732 0189 93       		.byte	0x93
 1733 018a 0B       		.uleb128 0xb
 1734 018b 09010000 		.4byte	0x109
 1735 018f 8813     		.2byte	0x1388
 1736 0191 00       		.byte	0
 1737 0192 00       		.byte	0
 1738 0193 09       		.uleb128 0x9
 1739 0194 06000000 		.4byte	.LASF25
 1740 0198 01       		.byte	0x1
 1741 0199 B1       		.byte	0xb1
 1742 019a 00000000 		.4byte	.LFB1
 1743 019e 1C000000 		.4byte	.LFE1-.LFB1
 1744 01a2 01       		.uleb128 0x1
 1745 01a3 9C       		.byte	0x9c
 1746 01a4 CA010000 		.4byte	0x1ca
 1747 01a8 0F       		.uleb128 0xf
 1748 01a9 91040000 		.4byte	.LASF28
 1749 01ad 01       		.byte	0x1
 1750 01ae B3       		.byte	0xb3
 1751 01af 6B000000 		.4byte	0x6b
 1752 01b3 00000000 		.4byte	.LLST0
 1753 01b7 10       		.uleb128 0x10
 1754 01b8 06000000 		.4byte	.LVL4
 1755 01bc 30090000 		.4byte	0x930
 1756 01c0 10       		.uleb128 0x10
 1757 01c1 14000000 		.4byte	.LVL5
 1758 01c5 3B090000 		.4byte	0x93b
 1759 01c9 00       		.byte	0
 1760 01ca 09       		.uleb128 0x9
 1761 01cb 2D020000 		.4byte	.LASF26
 1762 01cf 01       		.byte	0x1
 1763 01d0 E0       		.byte	0xe0
 1764 01d1 00000000 		.4byte	.LFB2
 1765 01d5 1C000000 		.4byte	.LFE2-.LFB2
 1766 01d9 01       		.uleb128 0x1
 1767 01da 9C       		.byte	0x9c
 1768 01db F2010000 		.4byte	0x1f2
 1769 01df 10       		.uleb128 0x10
 1770 01e0 0E000000 		.4byte	.LVL6
 1771 01e4 16010000 		.4byte	0x116
 1772 01e8 10       		.uleb128 0x10
 1773 01e9 16000000 		.4byte	.LVL7
 1774 01ed 93010000 		.4byte	0x193
 1775 01f1 00       		.byte	0
 1776 01f2 09       		.uleb128 0x9
 1777 01f3 44010000 		.4byte	.LASF27
 1778 01f7 01       		.byte	0x1
 1779 01f8 FA       		.byte	0xfa
 1780 01f9 00000000 		.4byte	.LFB3
 1781 01fd 1C000000 		.4byte	.LFE3-.LFB3
 1782 0201 01       		.uleb128 0x1
 1783 0202 9C       		.byte	0x9c
 1784 0203 29020000 		.4byte	0x229
 1785 0207 0F       		.uleb128 0xf
 1786 0208 91040000 		.4byte	.LASF28
 1787 020c 01       		.byte	0x1
 1788 020d FC       		.byte	0xfc
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 61


 1789 020e 6B000000 		.4byte	0x6b
 1790 0212 13000000 		.4byte	.LLST1
 1791 0216 10       		.uleb128 0x10
 1792 0217 06000000 		.4byte	.LVL8
 1793 021b 30090000 		.4byte	0x930
 1794 021f 10       		.uleb128 0x10
 1795 0220 14000000 		.4byte	.LVL9
 1796 0224 3B090000 		.4byte	0x93b
 1797 0228 00       		.byte	0
 1798 0229 11       		.uleb128 0x11
 1799 022a C1040000 		.4byte	.LASF29
 1800 022e 01       		.byte	0x1
 1801 022f 1F01     		.2byte	0x11f
 1802 0231 00000000 		.4byte	.LFB4
 1803 0235 28000000 		.4byte	.LFE4-.LFB4
 1804 0239 01       		.uleb128 0x1
 1805 023a 9C       		.byte	0x9c
 1806 023b 72020000 		.4byte	0x272
 1807 023f 12       		.uleb128 0x12
 1808 0240 B9030000 		.4byte	.LASF31
 1809 0244 01       		.byte	0x1
 1810 0245 1F01     		.2byte	0x11f
 1811 0247 76000000 		.4byte	0x76
 1812 024b 26000000 		.4byte	.LLST2
 1813 024f 13       		.uleb128 0x13
 1814 0250 91040000 		.4byte	.LASF28
 1815 0254 01       		.byte	0x1
 1816 0255 2101     		.2byte	0x121
 1817 0257 6B000000 		.4byte	0x6b
 1818 025b 52000000 		.4byte	.LLST3
 1819 025f 10       		.uleb128 0x10
 1820 0260 08000000 		.4byte	.LVL11
 1821 0264 30090000 		.4byte	0x930
 1822 0268 10       		.uleb128 0x10
 1823 0269 1C000000 		.4byte	.LVL13
 1824 026d 3B090000 		.4byte	0x93b
 1825 0271 00       		.byte	0
 1826 0272 11       		.uleb128 0x11
 1827 0273 A6030000 		.4byte	.LASF30
 1828 0277 01       		.byte	0x1
 1829 0278 4001     		.2byte	0x140
 1830 027a 00000000 		.4byte	.LFB5
 1831 027e 28000000 		.4byte	.LFE5-.LFB5
 1832 0282 01       		.uleb128 0x1
 1833 0283 9C       		.byte	0x9c
 1834 0284 BB020000 		.4byte	0x2bb
 1835 0288 12       		.uleb128 0x12
 1836 0289 6B000000 		.4byte	.LASF32
 1837 028d 01       		.byte	0x1
 1838 028e 4001     		.2byte	0x140
 1839 0290 76000000 		.4byte	0x76
 1840 0294 65000000 		.4byte	.LLST4
 1841 0298 13       		.uleb128 0x13
 1842 0299 91040000 		.4byte	.LASF28
 1843 029d 01       		.byte	0x1
 1844 029e 4201     		.2byte	0x142
 1845 02a0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 62


 1846 02a4 91000000 		.4byte	.LLST5
 1847 02a8 10       		.uleb128 0x10
 1848 02a9 08000000 		.4byte	.LVL15
 1849 02ad 30090000 		.4byte	0x930
 1850 02b1 10       		.uleb128 0x10
 1851 02b2 1C000000 		.4byte	.LVL17
 1852 02b6 3B090000 		.4byte	0x93b
 1853 02ba 00       		.byte	0
 1854 02bb 11       		.uleb128 0x11
 1855 02bc 1C020000 		.4byte	.LASF33
 1856 02c0 01       		.byte	0x1
 1857 02c1 6501     		.2byte	0x165
 1858 02c3 00000000 		.4byte	.LFB6
 1859 02c7 28000000 		.4byte	.LFE6-.LFB6
 1860 02cb 01       		.uleb128 0x1
 1861 02cc 9C       		.byte	0x9c
 1862 02cd 04030000 		.4byte	0x304
 1863 02d1 12       		.uleb128 0x12
 1864 02d2 FB020000 		.4byte	.LASF34
 1865 02d6 01       		.byte	0x1
 1866 02d7 6501     		.2byte	0x165
 1867 02d9 76000000 		.4byte	0x76
 1868 02dd A4000000 		.4byte	.LLST6
 1869 02e1 13       		.uleb128 0x13
 1870 02e2 91040000 		.4byte	.LASF28
 1871 02e6 01       		.byte	0x1
 1872 02e7 6701     		.2byte	0x167
 1873 02e9 6B000000 		.4byte	0x6b
 1874 02ed D0000000 		.4byte	.LLST7
 1875 02f1 10       		.uleb128 0x10
 1876 02f2 08000000 		.4byte	.LVL19
 1877 02f6 30090000 		.4byte	0x930
 1878 02fa 10       		.uleb128 0x10
 1879 02fb 1C000000 		.4byte	.LVL21
 1880 02ff 3B090000 		.4byte	0x93b
 1881 0303 00       		.byte	0
 1882 0304 11       		.uleb128 0x11
 1883 0305 9B020000 		.4byte	.LASF35
 1884 0309 01       		.byte	0x1
 1885 030a 8501     		.2byte	0x185
 1886 030c 00000000 		.4byte	.LFB7
 1887 0310 2C000000 		.4byte	.LFE7-.LFB7
 1888 0314 01       		.uleb128 0x1
 1889 0315 9C       		.byte	0x9c
 1890 0316 4D030000 		.4byte	0x34d
 1891 031a 12       		.uleb128 0x12
 1892 031b B3040000 		.4byte	.LASF36
 1893 031f 01       		.byte	0x1
 1894 0320 8501     		.2byte	0x185
 1895 0322 76000000 		.4byte	0x76
 1896 0326 E3000000 		.4byte	.LLST8
 1897 032a 13       		.uleb128 0x13
 1898 032b 91040000 		.4byte	.LASF28
 1899 032f 01       		.byte	0x1
 1900 0330 8701     		.2byte	0x187
 1901 0332 6B000000 		.4byte	0x6b
 1902 0336 0F010000 		.4byte	.LLST9
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 63


 1903 033a 10       		.uleb128 0x10
 1904 033b 08000000 		.4byte	.LVL23
 1905 033f 30090000 		.4byte	0x930
 1906 0343 10       		.uleb128 0x10
 1907 0344 22000000 		.4byte	.LVL25
 1908 0348 3B090000 		.4byte	0x93b
 1909 034c 00       		.byte	0
 1910 034d 11       		.uleb128 0x11
 1911 034e 4F030000 		.4byte	.LASF37
 1912 0352 01       		.byte	0x1
 1913 0353 BB01     		.2byte	0x1bb
 1914 0355 00000000 		.4byte	.LFB8
 1915 0359 10000000 		.4byte	.LFE8-.LFB8
 1916 035d 01       		.uleb128 0x1
 1917 035e 9C       		.byte	0x9c
 1918 035f 74030000 		.4byte	0x374
 1919 0363 12       		.uleb128 0x12
 1920 0364 E9010000 		.4byte	.LASF38
 1921 0368 01       		.byte	0x1
 1922 0369 BB01     		.2byte	0x1bb
 1923 036b 76000000 		.4byte	0x76
 1924 036f 22010000 		.4byte	.LLST10
 1925 0373 00       		.byte	0
 1926 0374 11       		.uleb128 0x11
 1927 0375 27000000 		.4byte	.LASF39
 1928 0379 01       		.byte	0x1
 1929 037a DF01     		.2byte	0x1df
 1930 037c 00000000 		.4byte	.LFB9
 1931 0380 28000000 		.4byte	.LFE9-.LFB9
 1932 0384 01       		.uleb128 0x1
 1933 0385 9C       		.byte	0x9c
 1934 0386 BD030000 		.4byte	0x3bd
 1935 038a 12       		.uleb128 0x12
 1936 038b 84020000 		.4byte	.LASF40
 1937 038f 01       		.byte	0x1
 1938 0390 DF01     		.2byte	0x1df
 1939 0392 76000000 		.4byte	0x76
 1940 0396 43010000 		.4byte	.LLST11
 1941 039a 13       		.uleb128 0x13
 1942 039b 91040000 		.4byte	.LASF28
 1943 039f 01       		.byte	0x1
 1944 03a0 E101     		.2byte	0x1e1
 1945 03a2 6B000000 		.4byte	0x6b
 1946 03a6 6F010000 		.4byte	.LLST12
 1947 03aa 10       		.uleb128 0x10
 1948 03ab 08000000 		.4byte	.LVL29
 1949 03af 30090000 		.4byte	0x930
 1950 03b3 10       		.uleb128 0x10
 1951 03b4 22000000 		.4byte	.LVL31
 1952 03b8 3B090000 		.4byte	0x93b
 1953 03bc 00       		.byte	0
 1954 03bd 11       		.uleb128 0x11
 1955 03be CD040000 		.4byte	.LASF41
 1956 03c2 01       		.byte	0x1
 1957 03c3 0102     		.2byte	0x201
 1958 03c5 00000000 		.4byte	.LFB10
 1959 03c9 28000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 64


 1960 03cd 01       		.uleb128 0x1
 1961 03ce 9C       		.byte	0x9c
 1962 03cf 06040000 		.4byte	0x406
 1963 03d3 12       		.uleb128 0x12
 1964 03d4 3E030000 		.4byte	.LASF42
 1965 03d8 01       		.byte	0x1
 1966 03d9 0102     		.2byte	0x201
 1967 03db 76000000 		.4byte	0x76
 1968 03df 82010000 		.4byte	.LLST13
 1969 03e3 13       		.uleb128 0x13
 1970 03e4 91040000 		.4byte	.LASF28
 1971 03e8 01       		.byte	0x1
 1972 03e9 0302     		.2byte	0x203
 1973 03eb 6B000000 		.4byte	0x6b
 1974 03ef AE010000 		.4byte	.LLST14
 1975 03f3 10       		.uleb128 0x10
 1976 03f4 08000000 		.4byte	.LVL33
 1977 03f8 30090000 		.4byte	0x930
 1978 03fc 10       		.uleb128 0x10
 1979 03fd 22000000 		.4byte	.LVL35
 1980 0401 3B090000 		.4byte	0x93b
 1981 0405 00       		.byte	0
 1982 0406 11       		.uleb128 0x11
 1983 0407 BC010000 		.4byte	.LASF43
 1984 040b 01       		.byte	0x1
 1985 040c 2202     		.2byte	0x222
 1986 040e 00000000 		.4byte	.LFB11
 1987 0412 2C000000 		.4byte	.LFE11-.LFB11
 1988 0416 01       		.uleb128 0x1
 1989 0417 9C       		.byte	0x9c
 1990 0418 4F040000 		.4byte	0x44f
 1991 041c 12       		.uleb128 0x12
 1992 041d 96010000 		.4byte	.LASF44
 1993 0421 01       		.byte	0x1
 1994 0422 2202     		.2byte	0x222
 1995 0424 76000000 		.4byte	0x76
 1996 0428 C1010000 		.4byte	.LLST15
 1997 042c 13       		.uleb128 0x13
 1998 042d 91040000 		.4byte	.LASF28
 1999 0431 01       		.byte	0x1
 2000 0432 2402     		.2byte	0x224
 2001 0434 6B000000 		.4byte	0x6b
 2002 0438 ED010000 		.4byte	.LLST16
 2003 043c 10       		.uleb128 0x10
 2004 043d 08000000 		.4byte	.LVL37
 2005 0441 30090000 		.4byte	0x930
 2006 0445 10       		.uleb128 0x10
 2007 0446 20000000 		.4byte	.LVL39
 2008 044a 3B090000 		.4byte	0x93b
 2009 044e 00       		.byte	0
 2010 044f 11       		.uleb128 0x11
 2011 0450 4D010000 		.4byte	.LASF45
 2012 0454 01       		.byte	0x1
 2013 0455 4302     		.2byte	0x243
 2014 0457 00000000 		.4byte	.LFB12
 2015 045b 28000000 		.4byte	.LFE12-.LFB12
 2016 045f 01       		.uleb128 0x1
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 65


 2017 0460 9C       		.byte	0x9c
 2018 0461 98040000 		.4byte	0x498
 2019 0465 12       		.uleb128 0x12
 2020 0466 82010000 		.4byte	.LASF46
 2021 046a 01       		.byte	0x1
 2022 046b 4302     		.2byte	0x243
 2023 046d 76000000 		.4byte	0x76
 2024 0471 00020000 		.4byte	.LLST17
 2025 0475 13       		.uleb128 0x13
 2026 0476 91040000 		.4byte	.LASF28
 2027 047a 01       		.byte	0x1
 2028 047b 4502     		.2byte	0x245
 2029 047d 6B000000 		.4byte	0x6b
 2030 0481 2C020000 		.4byte	.LLST18
 2031 0485 10       		.uleb128 0x10
 2032 0486 08000000 		.4byte	.LVL41
 2033 048a 30090000 		.4byte	0x930
 2034 048e 10       		.uleb128 0x10
 2035 048f 1C000000 		.4byte	.LVL43
 2036 0493 3B090000 		.4byte	0x93b
 2037 0497 00       		.byte	0
 2038 0498 14       		.uleb128 0x14
 2039 0499 AE000000 		.4byte	0xae
 2040 049d 00000000 		.4byte	.LFB13
 2041 04a1 0C000000 		.4byte	.LFE13-.LFB13
 2042 04a5 01       		.uleb128 0x1
 2043 04a6 9C       		.byte	0x9c
 2044 04a7 B5040000 		.4byte	0x4b5
 2045 04ab 15       		.uleb128 0x15
 2046 04ac BB000000 		.4byte	0xbb
 2047 04b0 3F020000 		.4byte	.LLST19
 2048 04b4 00       		.byte	0
 2049 04b5 16       		.uleb128 0x16
 2050 04b6 83000000 		.4byte	.LASF49
 2051 04ba 01       		.byte	0x1
 2052 04bb 7502     		.2byte	0x275
 2053 04bd 76000000 		.4byte	0x76
 2054 04c1 00000000 		.4byte	.LFB14
 2055 04c5 0C000000 		.4byte	.LFE14-.LFB14
 2056 04c9 01       		.uleb128 0x1
 2057 04ca 9C       		.byte	0x9c
 2058 04cb 11       		.uleb128 0x11
 2059 04cc E2040000 		.4byte	.LASF47
 2060 04d0 01       		.byte	0x1
 2061 04d1 9202     		.2byte	0x292
 2062 04d3 00000000 		.4byte	.LFB15
 2063 04d7 28000000 		.4byte	.LFE15-.LFB15
 2064 04db 01       		.uleb128 0x1
 2065 04dc 9C       		.byte	0x9c
 2066 04dd 14050000 		.4byte	0x514
 2067 04e1 12       		.uleb128 0x12
 2068 04e2 5D040000 		.4byte	.LASF48
 2069 04e6 01       		.byte	0x1
 2070 04e7 9202     		.2byte	0x292
 2071 04e9 76000000 		.4byte	0x76
 2072 04ed 60020000 		.4byte	.LLST20
 2073 04f1 13       		.uleb128 0x13
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 66


 2074 04f2 91040000 		.4byte	.LASF28
 2075 04f6 01       		.byte	0x1
 2076 04f7 9402     		.2byte	0x294
 2077 04f9 6B000000 		.4byte	0x6b
 2078 04fd 8C020000 		.4byte	.LLST21
 2079 0501 10       		.uleb128 0x10
 2080 0502 08000000 		.4byte	.LVL47
 2081 0506 30090000 		.4byte	0x930
 2082 050a 10       		.uleb128 0x10
 2083 050b 1C000000 		.4byte	.LVL49
 2084 050f 3B090000 		.4byte	0x93b
 2085 0513 00       		.byte	0
 2086 0514 14       		.uleb128 0x14
 2087 0515 E2000000 		.4byte	0xe2
 2088 0519 00000000 		.4byte	.LFB16
 2089 051d 0C000000 		.4byte	.LFE16-.LFB16
 2090 0521 01       		.uleb128 0x1
 2091 0522 9C       		.byte	0x9c
 2092 0523 31050000 		.4byte	0x531
 2093 0527 15       		.uleb128 0x15
 2094 0528 EF000000 		.4byte	0xef
 2095 052c 9F020000 		.4byte	.LLST22
 2096 0530 00       		.byte	0
 2097 0531 16       		.uleb128 0x16
 2098 0532 6C020000 		.4byte	.LASF50
 2099 0536 01       		.byte	0x1
 2100 0537 C302     		.2byte	0x2c3
 2101 0539 76000000 		.4byte	0x76
 2102 053d 00000000 		.4byte	.LFB17
 2103 0541 0C000000 		.4byte	.LFE17-.LFB17
 2104 0545 01       		.uleb128 0x1
 2105 0546 9C       		.byte	0x9c
 2106 0547 11       		.uleb128 0x11
 2107 0548 31010000 		.4byte	.LASF51
 2108 054c 01       		.byte	0x1
 2109 054d DD02     		.2byte	0x2dd
 2110 054f 00000000 		.4byte	.LFB18
 2111 0553 24000000 		.4byte	.LFE18-.LFB18
 2112 0557 01       		.uleb128 0x1
 2113 0558 9C       		.byte	0x9c
 2114 0559 90050000 		.4byte	0x590
 2115 055d 12       		.uleb128 0x12
 2116 055e F5040000 		.4byte	.LASF52
 2117 0562 01       		.byte	0x1
 2118 0563 DD02     		.2byte	0x2dd
 2119 0565 76000000 		.4byte	0x76
 2120 0569 C0020000 		.4byte	.LLST23
 2121 056d 13       		.uleb128 0x13
 2122 056e 91040000 		.4byte	.LASF28
 2123 0572 01       		.byte	0x1
 2124 0573 DF02     		.2byte	0x2df
 2125 0575 6B000000 		.4byte	0x6b
 2126 0579 EC020000 		.4byte	.LLST24
 2127 057d 10       		.uleb128 0x10
 2128 057e 08000000 		.4byte	.LVL53
 2129 0582 30090000 		.4byte	0x930
 2130 0586 10       		.uleb128 0x10
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 67


 2131 0587 1E000000 		.4byte	.LVL54
 2132 058b 3B090000 		.4byte	0x93b
 2133 058f 00       		.byte	0
 2134 0590 11       		.uleb128 0x11
 2135 0591 93030000 		.4byte	.LASF53
 2136 0595 01       		.byte	0x1
 2137 0596 F802     		.2byte	0x2f8
 2138 0598 00000000 		.4byte	.LFB19
 2139 059c 0C000000 		.4byte	.LFE19-.LFB19
 2140 05a0 01       		.uleb128 0x1
 2141 05a1 9C       		.byte	0x9c
 2142 05a2 B7050000 		.4byte	0x5b7
 2143 05a6 12       		.uleb128 0x12
 2144 05a7 74040000 		.4byte	.LASF54
 2145 05ab 01       		.byte	0x1
 2146 05ac F802     		.2byte	0x2f8
 2147 05ae 76000000 		.4byte	0x76
 2148 05b2 FF020000 		.4byte	.LLST25
 2149 05b6 00       		.byte	0
 2150 05b7 16       		.uleb128 0x16
 2151 05b8 AA020000 		.4byte	.LASF55
 2152 05bc 01       		.byte	0x1
 2153 05bd 0C03     		.2byte	0x30c
 2154 05bf 76000000 		.4byte	0x76
 2155 05c3 00000000 		.4byte	.LFB20
 2156 05c7 0C000000 		.4byte	.LFE20-.LFB20
 2157 05cb 01       		.uleb128 0x1
 2158 05cc 9C       		.byte	0x9c
 2159 05cd 11       		.uleb128 0x11
 2160 05ce 15030000 		.4byte	.LASF56
 2161 05d2 01       		.byte	0x1
 2162 05d3 2603     		.2byte	0x326
 2163 05d5 00000000 		.4byte	.LFB21
 2164 05d9 28000000 		.4byte	.LFE21-.LFB21
 2165 05dd 01       		.uleb128 0x1
 2166 05de 9C       		.byte	0x9c
 2167 05df 16060000 		.4byte	0x616
 2168 05e3 12       		.uleb128 0x12
 2169 05e4 F5040000 		.4byte	.LASF52
 2170 05e8 01       		.byte	0x1
 2171 05e9 2603     		.2byte	0x326
 2172 05eb 76000000 		.4byte	0x76
 2173 05ef 20030000 		.4byte	.LLST26
 2174 05f3 13       		.uleb128 0x13
 2175 05f4 91040000 		.4byte	.LASF28
 2176 05f8 01       		.byte	0x1
 2177 05f9 2803     		.2byte	0x328
 2178 05fb 6B000000 		.4byte	0x6b
 2179 05ff 4C030000 		.4byte	.LLST27
 2180 0603 10       		.uleb128 0x10
 2181 0604 08000000 		.4byte	.LVL59
 2182 0608 30090000 		.4byte	0x930
 2183 060c 10       		.uleb128 0x10
 2184 060d 22000000 		.4byte	.LVL61
 2185 0611 3B090000 		.4byte	0x93b
 2186 0615 00       		.byte	0
 2187 0616 14       		.uleb128 0x14
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 68


 2188 0617 FC000000 		.4byte	0xfc
 2189 061b 00000000 		.4byte	.LFB22
 2190 061f 0C000000 		.4byte	.LFE22-.LFB22
 2191 0623 01       		.uleb128 0x1
 2192 0624 9C       		.byte	0x9c
 2193 0625 33060000 		.4byte	0x633
 2194 0629 15       		.uleb128 0x15
 2195 062a 09010000 		.4byte	0x109
 2196 062e 5F030000 		.4byte	.LLST28
 2197 0632 00       		.byte	0
 2198 0633 16       		.uleb128 0x16
 2199 0634 28050000 		.4byte	.LASF57
 2200 0638 01       		.byte	0x1
 2201 0639 6E03     		.2byte	0x36e
 2202 063b 76000000 		.4byte	0x76
 2203 063f 00000000 		.4byte	.LFB23
 2204 0643 0C000000 		.4byte	.LFE23-.LFB23
 2205 0647 01       		.uleb128 0x1
 2206 0648 9C       		.byte	0x9c
 2207 0649 11       		.uleb128 0x11
 2208 064a AD000000 		.4byte	.LASF58
 2209 064e 01       		.byte	0x1
 2210 064f 9C03     		.2byte	0x39c
 2211 0651 00000000 		.4byte	.LFB24
 2212 0655 0C000000 		.4byte	.LFE24-.LFB24
 2213 0659 01       		.uleb128 0x1
 2214 065a 9C       		.byte	0x9c
 2215 065b 70060000 		.4byte	0x670
 2216 065f 12       		.uleb128 0x12
 2217 0660 69040000 		.4byte	.LASF59
 2218 0664 01       		.byte	0x1
 2219 0665 9C03     		.2byte	0x39c
 2220 0667 76000000 		.4byte	0x76
 2221 066b 80030000 		.4byte	.LLST29
 2222 066f 00       		.byte	0
 2223 0670 16       		.uleb128 0x16
 2224 0671 1E010000 		.4byte	.LASF60
 2225 0675 01       		.byte	0x1
 2226 0676 C503     		.2byte	0x3c5
 2227 0678 76000000 		.4byte	0x76
 2228 067c 00000000 		.4byte	.LFB25
 2229 0680 0C000000 		.4byte	.LFE25-.LFB25
 2230 0684 01       		.uleb128 0x1
 2231 0685 9C       		.byte	0x9c
 2232 0686 16       		.uleb128 0x16
 2233 0687 05030000 		.4byte	.LASF61
 2234 068b 01       		.byte	0x1
 2235 068c F303     		.2byte	0x3f3
 2236 068e 76000000 		.4byte	0x76
 2237 0692 00000000 		.4byte	.LFB26
 2238 0696 0C000000 		.4byte	.LFE26-.LFB26
 2239 069a 01       		.uleb128 0x1
 2240 069b 9C       		.byte	0x9c
 2241 069c 16       		.uleb128 0x16
 2242 069d 7E040000 		.4byte	.LASF62
 2243 06a1 01       		.byte	0x1
 2244 06a2 0804     		.2byte	0x408
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 69


 2245 06a4 76000000 		.4byte	0x76
 2246 06a8 00000000 		.4byte	.LFB27
 2247 06ac 0C000000 		.4byte	.LFE27-.LFB27
 2248 06b0 01       		.uleb128 0x1
 2249 06b1 9C       		.byte	0x9c
 2250 06b2 11       		.uleb128 0x11
 2251 06b3 58000000 		.4byte	.LASF63
 2252 06b7 01       		.byte	0x1
 2253 06b8 2304     		.2byte	0x423
 2254 06ba 00000000 		.4byte	.LFB28
 2255 06be 24000000 		.4byte	.LFE28-.LFB28
 2256 06c2 01       		.uleb128 0x1
 2257 06c3 9C       		.byte	0x9c
 2258 06c4 FB060000 		.4byte	0x6fb
 2259 06c8 12       		.uleb128 0x12
 2260 06c9 76010000 		.4byte	.LASF64
 2261 06cd 01       		.byte	0x1
 2262 06ce 2304     		.2byte	0x423
 2263 06d0 76000000 		.4byte	0x76
 2264 06d4 A1030000 		.4byte	.LLST30
 2265 06d8 13       		.uleb128 0x13
 2266 06d9 91040000 		.4byte	.LASF28
 2267 06dd 01       		.byte	0x1
 2268 06de 2504     		.2byte	0x425
 2269 06e0 6B000000 		.4byte	0x6b
 2270 06e4 CD030000 		.4byte	.LLST31
 2271 06e8 10       		.uleb128 0x10
 2272 06e9 08000000 		.4byte	.LVL67
 2273 06ed 30090000 		.4byte	0x930
 2274 06f1 10       		.uleb128 0x10
 2275 06f2 1C000000 		.4byte	.LVL69
 2276 06f6 3B090000 		.4byte	0x93b
 2277 06fa 00       		.byte	0
 2278 06fb 11       		.uleb128 0x11
 2279 06fc 4B040000 		.4byte	.LASF65
 2280 0700 01       		.byte	0x1
 2281 0701 4404     		.2byte	0x444
 2282 0703 00000000 		.4byte	.LFB29
 2283 0707 24000000 		.4byte	.LFE29-.LFB29
 2284 070b 01       		.uleb128 0x1
 2285 070c 9C       		.byte	0x9c
 2286 070d 44070000 		.4byte	0x744
 2287 0711 12       		.uleb128 0x12
 2288 0712 76010000 		.4byte	.LASF64
 2289 0716 01       		.byte	0x1
 2290 0717 4404     		.2byte	0x444
 2291 0719 76000000 		.4byte	0x76
 2292 071d E0030000 		.4byte	.LLST32
 2293 0721 13       		.uleb128 0x13
 2294 0722 91040000 		.4byte	.LASF28
 2295 0726 01       		.byte	0x1
 2296 0727 4604     		.2byte	0x446
 2297 0729 6B000000 		.4byte	0x6b
 2298 072d 0C040000 		.4byte	.LLST33
 2299 0731 10       		.uleb128 0x10
 2300 0732 08000000 		.4byte	.LVL71
 2301 0736 30090000 		.4byte	0x930
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 70


 2302 073a 10       		.uleb128 0x10
 2303 073b 1E000000 		.4byte	.LVL73
 2304 073f 3B090000 		.4byte	0x93b
 2305 0743 00       		.byte	0
 2306 0744 11       		.uleb128 0x11
 2307 0745 65010000 		.4byte	.LASF66
 2308 0749 01       		.byte	0x1
 2309 074a 6504     		.2byte	0x465
 2310 074c 00000000 		.4byte	.LFB30
 2311 0750 28000000 		.4byte	.LFE30-.LFB30
 2312 0754 01       		.uleb128 0x1
 2313 0755 9C       		.byte	0x9c
 2314 0756 8D070000 		.4byte	0x78d
 2315 075a 12       		.uleb128 0x12
 2316 075b 76010000 		.4byte	.LASF64
 2317 075f 01       		.byte	0x1
 2318 0760 6504     		.2byte	0x465
 2319 0762 76000000 		.4byte	0x76
 2320 0766 1F040000 		.4byte	.LLST34
 2321 076a 13       		.uleb128 0x13
 2322 076b 91040000 		.4byte	.LASF28
 2323 076f 01       		.byte	0x1
 2324 0770 6704     		.2byte	0x467
 2325 0772 6B000000 		.4byte	0x6b
 2326 0776 4B040000 		.4byte	.LLST35
 2327 077a 10       		.uleb128 0x10
 2328 077b 08000000 		.4byte	.LVL75
 2329 077f 30090000 		.4byte	0x930
 2330 0783 10       		.uleb128 0x10
 2331 0784 1E000000 		.4byte	.LVL77
 2332 0788 3B090000 		.4byte	0x93b
 2333 078c 00       		.byte	0
 2334 078d 11       		.uleb128 0x11
 2335 078e 9F010000 		.4byte	.LASF67
 2336 0792 01       		.byte	0x1
 2337 0793 8504     		.2byte	0x485
 2338 0795 00000000 		.4byte	.LFB31
 2339 0799 24000000 		.4byte	.LFE31-.LFB31
 2340 079d 01       		.uleb128 0x1
 2341 079e 9C       		.byte	0x9c
 2342 079f D6070000 		.4byte	0x7d6
 2343 07a3 12       		.uleb128 0x12
 2344 07a4 76010000 		.4byte	.LASF64
 2345 07a8 01       		.byte	0x1
 2346 07a9 8504     		.2byte	0x485
 2347 07ab 76000000 		.4byte	0x76
 2348 07af 5E040000 		.4byte	.LLST36
 2349 07b3 13       		.uleb128 0x13
 2350 07b4 91040000 		.4byte	.LASF28
 2351 07b8 01       		.byte	0x1
 2352 07b9 8704     		.2byte	0x487
 2353 07bb 6B000000 		.4byte	0x6b
 2354 07bf 8A040000 		.4byte	.LLST37
 2355 07c3 10       		.uleb128 0x10
 2356 07c4 08000000 		.4byte	.LVL79
 2357 07c8 30090000 		.4byte	0x930
 2358 07cc 10       		.uleb128 0x10
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 71


 2359 07cd 1E000000 		.4byte	.LVL81
 2360 07d1 3B090000 		.4byte	0x93b
 2361 07d5 00       		.byte	0
 2362 07d6 11       		.uleb128 0x11
 2363 07d7 A2040000 		.4byte	.LASF68
 2364 07db 01       		.byte	0x1
 2365 07dc A604     		.2byte	0x4a6
 2366 07de 00000000 		.4byte	.LFB32
 2367 07e2 24000000 		.4byte	.LFE32-.LFB32
 2368 07e6 01       		.uleb128 0x1
 2369 07e7 9C       		.byte	0x9c
 2370 07e8 1F080000 		.4byte	0x81f
 2371 07ec 12       		.uleb128 0x12
 2372 07ed 76010000 		.4byte	.LASF64
 2373 07f1 01       		.byte	0x1
 2374 07f2 A604     		.2byte	0x4a6
 2375 07f4 76000000 		.4byte	0x76
 2376 07f8 9D040000 		.4byte	.LLST38
 2377 07fc 13       		.uleb128 0x13
 2378 07fd 91040000 		.4byte	.LASF28
 2379 0801 01       		.byte	0x1
 2380 0802 A804     		.2byte	0x4a8
 2381 0804 6B000000 		.4byte	0x6b
 2382 0808 C9040000 		.4byte	.LLST39
 2383 080c 10       		.uleb128 0x10
 2384 080d 08000000 		.4byte	.LVL83
 2385 0811 30090000 		.4byte	0x930
 2386 0815 10       		.uleb128 0x10
 2387 0816 1E000000 		.4byte	.LVL85
 2388 081a 3B090000 		.4byte	0x93b
 2389 081e 00       		.byte	0
 2390 081f 11       		.uleb128 0x11
 2391 0820 37020000 		.4byte	.LASF69
 2392 0824 01       		.byte	0x1
 2393 0825 CE04     		.2byte	0x4ce
 2394 0827 00000000 		.4byte	.LFB33
 2395 082b 1C000000 		.4byte	.LFE33-.LFB33
 2396 082f 01       		.uleb128 0x1
 2397 0830 9C       		.byte	0x9c
 2398 0831 78080000 		.4byte	0x878
 2399 0835 12       		.uleb128 0x12
 2400 0836 82010000 		.4byte	.LASF46
 2401 083a 01       		.byte	0x1
 2402 083b CE04     		.2byte	0x4ce
 2403 083d 76000000 		.4byte	0x76
 2404 0841 DC040000 		.4byte	.LLST40
 2405 0845 12       		.uleb128 0x12
 2406 0846 CF010000 		.4byte	.LASF70
 2407 084a 01       		.byte	0x1
 2408 084b CE04     		.2byte	0x4ce
 2409 084d 76000000 		.4byte	0x76
 2410 0851 08050000 		.4byte	.LLST41
 2411 0855 13       		.uleb128 0x13
 2412 0856 91040000 		.4byte	.LASF28
 2413 085a 01       		.byte	0x1
 2414 085b D004     		.2byte	0x4d0
 2415 085d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 72


 2416 0861 34050000 		.4byte	.LLST42
 2417 0865 10       		.uleb128 0x10
 2418 0866 0A000000 		.4byte	.LVL87
 2419 086a 30090000 		.4byte	0x930
 2420 086e 10       		.uleb128 0x10
 2421 086f 14000000 		.4byte	.LVL89
 2422 0873 3B090000 		.4byte	0x93b
 2423 0877 00       		.byte	0
 2424 0878 16       		.uleb128 0x16
 2425 0879 87010000 		.4byte	.LASF71
 2426 087d 01       		.byte	0x1
 2427 087e EB04     		.2byte	0x4eb
 2428 0880 76000000 		.4byte	0x76
 2429 0884 00000000 		.4byte	.LFB34
 2430 0888 14000000 		.4byte	.LFE34-.LFB34
 2431 088c 01       		.uleb128 0x1
 2432 088d 9C       		.byte	0x9c
 2433 088e 14       		.uleb128 0x14
 2434 088f C8000000 		.4byte	0xc8
 2435 0893 00000000 		.4byte	.LFB35
 2436 0897 0C000000 		.4byte	.LFE35-.LFB35
 2437 089b 01       		.uleb128 0x1
 2438 089c 9C       		.byte	0x9c
 2439 089d A9080000 		.4byte	0x8a9
 2440 08a1 17       		.uleb128 0x17
 2441 08a2 D5000000 		.4byte	0xd5
 2442 08a6 01       		.uleb128 0x1
 2443 08a7 50       		.byte	0x50
 2444 08a8 00       		.byte	0
 2445 08a9 16       		.uleb128 0x16
 2446 08aa 68030000 		.4byte	.LASF72
 2447 08ae 01       		.byte	0x1
 2448 08af 1B05     		.2byte	0x51b
 2449 08b1 76000000 		.4byte	0x76
 2450 08b5 00000000 		.4byte	.LFB36
 2451 08b9 0C000000 		.4byte	.LFE36-.LFB36
 2452 08bd 01       		.uleb128 0x1
 2453 08be 9C       		.byte	0x9c
 2454 08bf 16       		.uleb128 0x16
 2455 08c0 00050000 		.4byte	.LASF73
 2456 08c4 01       		.byte	0x1
 2457 08c5 3205     		.2byte	0x532
 2458 08c7 76000000 		.4byte	0x76
 2459 08cb 00000000 		.4byte	.LFB37
 2460 08cf 0C000000 		.4byte	.LFE37-.LFB37
 2461 08d3 01       		.uleb128 0x1
 2462 08d4 9C       		.byte	0x9c
 2463 08d5 11       		.uleb128 0x11
 2464 08d6 D6000000 		.4byte	.LASF74
 2465 08da 01       		.byte	0x1
 2466 08db 4905     		.2byte	0x549
 2467 08dd 00000000 		.4byte	.LFB38
 2468 08e1 0C000000 		.4byte	.LFE38-.LFB38
 2469 08e5 01       		.uleb128 0x1
 2470 08e6 9C       		.byte	0x9c
 2471 08e7 FA080000 		.4byte	0x8fa
 2472 08eb 18       		.uleb128 0x18
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 73


 2473 08ec 85030000 		.4byte	.LASF19
 2474 08f0 01       		.byte	0x1
 2475 08f1 4905     		.2byte	0x549
 2476 08f3 76000000 		.4byte	0x76
 2477 08f7 01       		.uleb128 0x1
 2478 08f8 50       		.byte	0x50
 2479 08f9 00       		.byte	0
 2480 08fa 11       		.uleb128 0x11
 2481 08fb BE030000 		.4byte	.LASF75
 2482 08ff 01       		.byte	0x1
 2483 0900 6005     		.2byte	0x560
 2484 0902 00000000 		.4byte	.LFB39
 2485 0906 0C000000 		.4byte	.LFE39-.LFB39
 2486 090a 01       		.uleb128 0x1
 2487 090b 9C       		.byte	0x9c
 2488 090c 1F090000 		.4byte	0x91f
 2489 0910 18       		.uleb128 0x18
 2490 0911 85030000 		.4byte	.LASF19
 2491 0915 01       		.byte	0x1
 2492 0916 6005     		.2byte	0x560
 2493 0918 76000000 		.4byte	0x76
 2494 091c 01       		.uleb128 0x1
 2495 091d 50       		.byte	0x50
 2496 091e 00       		.byte	0
 2497 091f 19       		.uleb128 0x19
 2498 0920 60020000 		.4byte	.LASF79
 2499 0924 01       		.byte	0x1
 2500 0925 15       		.byte	0x15
 2501 0926 6B000000 		.4byte	0x6b
 2502 092a 05       		.uleb128 0x5
 2503 092b 03       		.byte	0x3
 2504 092c 00000000 		.4byte	PWM_initVar
 2505 0930 1A       		.uleb128 0x1a
 2506 0931 F2010000 		.4byte	.LASF80
 2507 0935 03       		.byte	0x3
 2508 0936 82       		.byte	0x82
 2509 0937 6B000000 		.4byte	0x6b
 2510 093b 1B       		.uleb128 0x1b
 2511 093c 11000000 		.4byte	.LASF81
 2512 0940 03       		.byte	0x3
 2513 0941 83       		.byte	0x83
 2514 0942 1C       		.uleb128 0x1c
 2515 0943 6B000000 		.4byte	0x6b
 2516 0947 00       		.byte	0
 2517 0948 00       		.byte	0
 2518              		.section	.debug_abbrev,"",%progbits
 2519              	.Ldebug_abbrev0:
 2520 0000 01       		.uleb128 0x1
 2521 0001 11       		.uleb128 0x11
 2522 0002 01       		.byte	0x1
 2523 0003 25       		.uleb128 0x25
 2524 0004 0E       		.uleb128 0xe
 2525 0005 13       		.uleb128 0x13
 2526 0006 0B       		.uleb128 0xb
 2527 0007 03       		.uleb128 0x3
 2528 0008 0E       		.uleb128 0xe
 2529 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 74


 2530 000a 0E       		.uleb128 0xe
 2531 000b 55       		.uleb128 0x55
 2532 000c 17       		.uleb128 0x17
 2533 000d 11       		.uleb128 0x11
 2534 000e 01       		.uleb128 0x1
 2535 000f 10       		.uleb128 0x10
 2536 0010 17       		.uleb128 0x17
 2537 0011 00       		.byte	0
 2538 0012 00       		.byte	0
 2539 0013 02       		.uleb128 0x2
 2540 0014 24       		.uleb128 0x24
 2541 0015 00       		.byte	0
 2542 0016 0B       		.uleb128 0xb
 2543 0017 0B       		.uleb128 0xb
 2544 0018 3E       		.uleb128 0x3e
 2545 0019 0B       		.uleb128 0xb
 2546 001a 03       		.uleb128 0x3
 2547 001b 0E       		.uleb128 0xe
 2548 001c 00       		.byte	0
 2549 001d 00       		.byte	0
 2550 001e 03       		.uleb128 0x3
 2551 001f 24       		.uleb128 0x24
 2552 0020 00       		.byte	0
 2553 0021 0B       		.uleb128 0xb
 2554 0022 0B       		.uleb128 0xb
 2555 0023 3E       		.uleb128 0x3e
 2556 0024 0B       		.uleb128 0xb
 2557 0025 03       		.uleb128 0x3
 2558 0026 08       		.uleb128 0x8
 2559 0027 00       		.byte	0
 2560 0028 00       		.byte	0
 2561 0029 04       		.uleb128 0x4
 2562 002a 16       		.uleb128 0x16
 2563 002b 00       		.byte	0
 2564 002c 03       		.uleb128 0x3
 2565 002d 0E       		.uleb128 0xe
 2566 002e 3A       		.uleb128 0x3a
 2567 002f 0B       		.uleb128 0xb
 2568 0030 3B       		.uleb128 0x3b
 2569 0031 0B       		.uleb128 0xb
 2570 0032 49       		.uleb128 0x49
 2571 0033 13       		.uleb128 0x13
 2572 0034 00       		.byte	0
 2573 0035 00       		.byte	0
 2574 0036 05       		.uleb128 0x5
 2575 0037 16       		.uleb128 0x16
 2576 0038 00       		.byte	0
 2577 0039 03       		.uleb128 0x3
 2578 003a 0E       		.uleb128 0xe
 2579 003b 3A       		.uleb128 0x3a
 2580 003c 0B       		.uleb128 0xb
 2581 003d 3B       		.uleb128 0x3b
 2582 003e 05       		.uleb128 0x5
 2583 003f 49       		.uleb128 0x49
 2584 0040 13       		.uleb128 0x13
 2585 0041 00       		.byte	0
 2586 0042 00       		.byte	0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 75


 2587 0043 06       		.uleb128 0x6
 2588 0044 35       		.uleb128 0x35
 2589 0045 00       		.byte	0
 2590 0046 49       		.uleb128 0x49
 2591 0047 13       		.uleb128 0x13
 2592 0048 00       		.byte	0
 2593 0049 00       		.byte	0
 2594 004a 07       		.uleb128 0x7
 2595 004b 2E       		.uleb128 0x2e
 2596 004c 01       		.byte	0x1
 2597 004d 3F       		.uleb128 0x3f
 2598 004e 19       		.uleb128 0x19
 2599 004f 03       		.uleb128 0x3
 2600 0050 0E       		.uleb128 0xe
 2601 0051 3A       		.uleb128 0x3a
 2602 0052 0B       		.uleb128 0xb
 2603 0053 3B       		.uleb128 0x3b
 2604 0054 05       		.uleb128 0x5
 2605 0055 27       		.uleb128 0x27
 2606 0056 19       		.uleb128 0x19
 2607 0057 20       		.uleb128 0x20
 2608 0058 0B       		.uleb128 0xb
 2609 0059 01       		.uleb128 0x1
 2610 005a 13       		.uleb128 0x13
 2611 005b 00       		.byte	0
 2612 005c 00       		.byte	0
 2613 005d 08       		.uleb128 0x8
 2614 005e 05       		.uleb128 0x5
 2615 005f 00       		.byte	0
 2616 0060 03       		.uleb128 0x3
 2617 0061 0E       		.uleb128 0xe
 2618 0062 3A       		.uleb128 0x3a
 2619 0063 0B       		.uleb128 0xb
 2620 0064 3B       		.uleb128 0x3b
 2621 0065 05       		.uleb128 0x5
 2622 0066 49       		.uleb128 0x49
 2623 0067 13       		.uleb128 0x13
 2624 0068 00       		.byte	0
 2625 0069 00       		.byte	0
 2626 006a 09       		.uleb128 0x9
 2627 006b 2E       		.uleb128 0x2e
 2628 006c 01       		.byte	0x1
 2629 006d 3F       		.uleb128 0x3f
 2630 006e 19       		.uleb128 0x19
 2631 006f 03       		.uleb128 0x3
 2632 0070 0E       		.uleb128 0xe
 2633 0071 3A       		.uleb128 0x3a
 2634 0072 0B       		.uleb128 0xb
 2635 0073 3B       		.uleb128 0x3b
 2636 0074 0B       		.uleb128 0xb
 2637 0075 27       		.uleb128 0x27
 2638 0076 19       		.uleb128 0x19
 2639 0077 11       		.uleb128 0x11
 2640 0078 01       		.uleb128 0x1
 2641 0079 12       		.uleb128 0x12
 2642 007a 06       		.uleb128 0x6
 2643 007b 40       		.uleb128 0x40
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 76


 2644 007c 18       		.uleb128 0x18
 2645 007d 9742     		.uleb128 0x2117
 2646 007f 19       		.uleb128 0x19
 2647 0080 01       		.uleb128 0x1
 2648 0081 13       		.uleb128 0x13
 2649 0082 00       		.byte	0
 2650 0083 00       		.byte	0
 2651 0084 0A       		.uleb128 0xa
 2652 0085 1D       		.uleb128 0x1d
 2653 0086 01       		.byte	0x1
 2654 0087 31       		.uleb128 0x31
 2655 0088 13       		.uleb128 0x13
 2656 0089 52       		.uleb128 0x52
 2657 008a 01       		.uleb128 0x1
 2658 008b 55       		.uleb128 0x55
 2659 008c 17       		.uleb128 0x17
 2660 008d 58       		.uleb128 0x58
 2661 008e 0B       		.uleb128 0xb
 2662 008f 59       		.uleb128 0x59
 2663 0090 0B       		.uleb128 0xb
 2664 0091 01       		.uleb128 0x1
 2665 0092 13       		.uleb128 0x13
 2666 0093 00       		.byte	0
 2667 0094 00       		.byte	0
 2668 0095 0B       		.uleb128 0xb
 2669 0096 05       		.uleb128 0x5
 2670 0097 00       		.byte	0
 2671 0098 31       		.uleb128 0x31
 2672 0099 13       		.uleb128 0x13
 2673 009a 1C       		.uleb128 0x1c
 2674 009b 05       		.uleb128 0x5
 2675 009c 00       		.byte	0
 2676 009d 00       		.byte	0
 2677 009e 0C       		.uleb128 0xc
 2678 009f 1D       		.uleb128 0x1d
 2679 00a0 01       		.byte	0x1
 2680 00a1 31       		.uleb128 0x31
 2681 00a2 13       		.uleb128 0x13
 2682 00a3 11       		.uleb128 0x11
 2683 00a4 01       		.uleb128 0x1
 2684 00a5 12       		.uleb128 0x12
 2685 00a6 06       		.uleb128 0x6
 2686 00a7 58       		.uleb128 0x58
 2687 00a8 0B       		.uleb128 0xb
 2688 00a9 59       		.uleb128 0x59
 2689 00aa 0B       		.uleb128 0xb
 2690 00ab 01       		.uleb128 0x1
 2691 00ac 13       		.uleb128 0x13
 2692 00ad 00       		.byte	0
 2693 00ae 00       		.byte	0
 2694 00af 0D       		.uleb128 0xd
 2695 00b0 05       		.uleb128 0x5
 2696 00b1 00       		.byte	0
 2697 00b2 31       		.uleb128 0x31
 2698 00b3 13       		.uleb128 0x13
 2699 00b4 1C       		.uleb128 0x1c
 2700 00b5 0B       		.uleb128 0xb
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 77


 2701 00b6 00       		.byte	0
 2702 00b7 00       		.byte	0
 2703 00b8 0E       		.uleb128 0xe
 2704 00b9 1D       		.uleb128 0x1d
 2705 00ba 01       		.byte	0x1
 2706 00bb 31       		.uleb128 0x31
 2707 00bc 13       		.uleb128 0x13
 2708 00bd 11       		.uleb128 0x11
 2709 00be 01       		.uleb128 0x1
 2710 00bf 12       		.uleb128 0x12
 2711 00c0 06       		.uleb128 0x6
 2712 00c1 58       		.uleb128 0x58
 2713 00c2 0B       		.uleb128 0xb
 2714 00c3 59       		.uleb128 0x59
 2715 00c4 0B       		.uleb128 0xb
 2716 00c5 00       		.byte	0
 2717 00c6 00       		.byte	0
 2718 00c7 0F       		.uleb128 0xf
 2719 00c8 34       		.uleb128 0x34
 2720 00c9 00       		.byte	0
 2721 00ca 03       		.uleb128 0x3
 2722 00cb 0E       		.uleb128 0xe
 2723 00cc 3A       		.uleb128 0x3a
 2724 00cd 0B       		.uleb128 0xb
 2725 00ce 3B       		.uleb128 0x3b
 2726 00cf 0B       		.uleb128 0xb
 2727 00d0 49       		.uleb128 0x49
 2728 00d1 13       		.uleb128 0x13
 2729 00d2 02       		.uleb128 0x2
 2730 00d3 17       		.uleb128 0x17
 2731 00d4 00       		.byte	0
 2732 00d5 00       		.byte	0
 2733 00d6 10       		.uleb128 0x10
 2734 00d7 898201   		.uleb128 0x4109
 2735 00da 00       		.byte	0
 2736 00db 11       		.uleb128 0x11
 2737 00dc 01       		.uleb128 0x1
 2738 00dd 31       		.uleb128 0x31
 2739 00de 13       		.uleb128 0x13
 2740 00df 00       		.byte	0
 2741 00e0 00       		.byte	0
 2742 00e1 11       		.uleb128 0x11
 2743 00e2 2E       		.uleb128 0x2e
 2744 00e3 01       		.byte	0x1
 2745 00e4 3F       		.uleb128 0x3f
 2746 00e5 19       		.uleb128 0x19
 2747 00e6 03       		.uleb128 0x3
 2748 00e7 0E       		.uleb128 0xe
 2749 00e8 3A       		.uleb128 0x3a
 2750 00e9 0B       		.uleb128 0xb
 2751 00ea 3B       		.uleb128 0x3b
 2752 00eb 05       		.uleb128 0x5
 2753 00ec 27       		.uleb128 0x27
 2754 00ed 19       		.uleb128 0x19
 2755 00ee 11       		.uleb128 0x11
 2756 00ef 01       		.uleb128 0x1
 2757 00f0 12       		.uleb128 0x12
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 78


 2758 00f1 06       		.uleb128 0x6
 2759 00f2 40       		.uleb128 0x40
 2760 00f3 18       		.uleb128 0x18
 2761 00f4 9742     		.uleb128 0x2117
 2762 00f6 19       		.uleb128 0x19
 2763 00f7 01       		.uleb128 0x1
 2764 00f8 13       		.uleb128 0x13
 2765 00f9 00       		.byte	0
 2766 00fa 00       		.byte	0
 2767 00fb 12       		.uleb128 0x12
 2768 00fc 05       		.uleb128 0x5
 2769 00fd 00       		.byte	0
 2770 00fe 03       		.uleb128 0x3
 2771 00ff 0E       		.uleb128 0xe
 2772 0100 3A       		.uleb128 0x3a
 2773 0101 0B       		.uleb128 0xb
 2774 0102 3B       		.uleb128 0x3b
 2775 0103 05       		.uleb128 0x5
 2776 0104 49       		.uleb128 0x49
 2777 0105 13       		.uleb128 0x13
 2778 0106 02       		.uleb128 0x2
 2779 0107 17       		.uleb128 0x17
 2780 0108 00       		.byte	0
 2781 0109 00       		.byte	0
 2782 010a 13       		.uleb128 0x13
 2783 010b 34       		.uleb128 0x34
 2784 010c 00       		.byte	0
 2785 010d 03       		.uleb128 0x3
 2786 010e 0E       		.uleb128 0xe
 2787 010f 3A       		.uleb128 0x3a
 2788 0110 0B       		.uleb128 0xb
 2789 0111 3B       		.uleb128 0x3b
 2790 0112 05       		.uleb128 0x5
 2791 0113 49       		.uleb128 0x49
 2792 0114 13       		.uleb128 0x13
 2793 0115 02       		.uleb128 0x2
 2794 0116 17       		.uleb128 0x17
 2795 0117 00       		.byte	0
 2796 0118 00       		.byte	0
 2797 0119 14       		.uleb128 0x14
 2798 011a 2E       		.uleb128 0x2e
 2799 011b 01       		.byte	0x1
 2800 011c 31       		.uleb128 0x31
 2801 011d 13       		.uleb128 0x13
 2802 011e 11       		.uleb128 0x11
 2803 011f 01       		.uleb128 0x1
 2804 0120 12       		.uleb128 0x12
 2805 0121 06       		.uleb128 0x6
 2806 0122 40       		.uleb128 0x40
 2807 0123 18       		.uleb128 0x18
 2808 0124 9742     		.uleb128 0x2117
 2809 0126 19       		.uleb128 0x19
 2810 0127 01       		.uleb128 0x1
 2811 0128 13       		.uleb128 0x13
 2812 0129 00       		.byte	0
 2813 012a 00       		.byte	0
 2814 012b 15       		.uleb128 0x15
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 79


 2815 012c 05       		.uleb128 0x5
 2816 012d 00       		.byte	0
 2817 012e 31       		.uleb128 0x31
 2818 012f 13       		.uleb128 0x13
 2819 0130 02       		.uleb128 0x2
 2820 0131 17       		.uleb128 0x17
 2821 0132 00       		.byte	0
 2822 0133 00       		.byte	0
 2823 0134 16       		.uleb128 0x16
 2824 0135 2E       		.uleb128 0x2e
 2825 0136 00       		.byte	0
 2826 0137 3F       		.uleb128 0x3f
 2827 0138 19       		.uleb128 0x19
 2828 0139 03       		.uleb128 0x3
 2829 013a 0E       		.uleb128 0xe
 2830 013b 3A       		.uleb128 0x3a
 2831 013c 0B       		.uleb128 0xb
 2832 013d 3B       		.uleb128 0x3b
 2833 013e 05       		.uleb128 0x5
 2834 013f 27       		.uleb128 0x27
 2835 0140 19       		.uleb128 0x19
 2836 0141 49       		.uleb128 0x49
 2837 0142 13       		.uleb128 0x13
 2838 0143 11       		.uleb128 0x11
 2839 0144 01       		.uleb128 0x1
 2840 0145 12       		.uleb128 0x12
 2841 0146 06       		.uleb128 0x6
 2842 0147 40       		.uleb128 0x40
 2843 0148 18       		.uleb128 0x18
 2844 0149 9742     		.uleb128 0x2117
 2845 014b 19       		.uleb128 0x19
 2846 014c 00       		.byte	0
 2847 014d 00       		.byte	0
 2848 014e 17       		.uleb128 0x17
 2849 014f 05       		.uleb128 0x5
 2850 0150 00       		.byte	0
 2851 0151 31       		.uleb128 0x31
 2852 0152 13       		.uleb128 0x13
 2853 0153 02       		.uleb128 0x2
 2854 0154 18       		.uleb128 0x18
 2855 0155 00       		.byte	0
 2856 0156 00       		.byte	0
 2857 0157 18       		.uleb128 0x18
 2858 0158 05       		.uleb128 0x5
 2859 0159 00       		.byte	0
 2860 015a 03       		.uleb128 0x3
 2861 015b 0E       		.uleb128 0xe
 2862 015c 3A       		.uleb128 0x3a
 2863 015d 0B       		.uleb128 0xb
 2864 015e 3B       		.uleb128 0x3b
 2865 015f 05       		.uleb128 0x5
 2866 0160 49       		.uleb128 0x49
 2867 0161 13       		.uleb128 0x13
 2868 0162 02       		.uleb128 0x2
 2869 0163 18       		.uleb128 0x18
 2870 0164 00       		.byte	0
 2871 0165 00       		.byte	0
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 80


 2872 0166 19       		.uleb128 0x19
 2873 0167 34       		.uleb128 0x34
 2874 0168 00       		.byte	0
 2875 0169 03       		.uleb128 0x3
 2876 016a 0E       		.uleb128 0xe
 2877 016b 3A       		.uleb128 0x3a
 2878 016c 0B       		.uleb128 0xb
 2879 016d 3B       		.uleb128 0x3b
 2880 016e 0B       		.uleb128 0xb
 2881 016f 49       		.uleb128 0x49
 2882 0170 13       		.uleb128 0x13
 2883 0171 3F       		.uleb128 0x3f
 2884 0172 19       		.uleb128 0x19
 2885 0173 02       		.uleb128 0x2
 2886 0174 18       		.uleb128 0x18
 2887 0175 00       		.byte	0
 2888 0176 00       		.byte	0
 2889 0177 1A       		.uleb128 0x1a
 2890 0178 2E       		.uleb128 0x2e
 2891 0179 00       		.byte	0
 2892 017a 3F       		.uleb128 0x3f
 2893 017b 19       		.uleb128 0x19
 2894 017c 03       		.uleb128 0x3
 2895 017d 0E       		.uleb128 0xe
 2896 017e 3A       		.uleb128 0x3a
 2897 017f 0B       		.uleb128 0xb
 2898 0180 3B       		.uleb128 0x3b
 2899 0181 0B       		.uleb128 0xb
 2900 0182 27       		.uleb128 0x27
 2901 0183 19       		.uleb128 0x19
 2902 0184 49       		.uleb128 0x49
 2903 0185 13       		.uleb128 0x13
 2904 0186 3C       		.uleb128 0x3c
 2905 0187 19       		.uleb128 0x19
 2906 0188 00       		.byte	0
 2907 0189 00       		.byte	0
 2908 018a 1B       		.uleb128 0x1b
 2909 018b 2E       		.uleb128 0x2e
 2910 018c 01       		.byte	0x1
 2911 018d 3F       		.uleb128 0x3f
 2912 018e 19       		.uleb128 0x19
 2913 018f 03       		.uleb128 0x3
 2914 0190 0E       		.uleb128 0xe
 2915 0191 3A       		.uleb128 0x3a
 2916 0192 0B       		.uleb128 0xb
 2917 0193 3B       		.uleb128 0x3b
 2918 0194 0B       		.uleb128 0xb
 2919 0195 27       		.uleb128 0x27
 2920 0196 19       		.uleb128 0x19
 2921 0197 3C       		.uleb128 0x3c
 2922 0198 19       		.uleb128 0x19
 2923 0199 00       		.byte	0
 2924 019a 00       		.byte	0
 2925 019b 1C       		.uleb128 0x1c
 2926 019c 05       		.uleb128 0x5
 2927 019d 00       		.byte	0
 2928 019e 49       		.uleb128 0x49
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 81


 2929 019f 13       		.uleb128 0x13
 2930 01a0 00       		.byte	0
 2931 01a1 00       		.byte	0
 2932 01a2 00       		.byte	0
 2933              		.section	.debug_loc,"",%progbits
 2934              	.Ldebug_loc0:
 2935              	.LLST0:
 2936 0000 06000000 		.4byte	.LVL4
 2937 0004 13000000 		.4byte	.LVL5-1
 2938 0008 0100     		.2byte	0x1
 2939 000a 50       		.byte	0x50
 2940 000b 00000000 		.4byte	0
 2941 000f 00000000 		.4byte	0
 2942              	.LLST1:
 2943 0013 06000000 		.4byte	.LVL8
 2944 0017 13000000 		.4byte	.LVL9-1
 2945 001b 0100     		.2byte	0x1
 2946 001d 50       		.byte	0x50
 2947 001e 00000000 		.4byte	0
 2948 0022 00000000 		.4byte	0
 2949              	.LLST2:
 2950 0026 00000000 		.4byte	.LVL10
 2951 002a 07000000 		.4byte	.LVL11-1
 2952 002e 0100     		.2byte	0x1
 2953 0030 50       		.byte	0x50
 2954 0031 07000000 		.4byte	.LVL11-1
 2955 0035 16000000 		.4byte	.LVL12
 2956 0039 0100     		.2byte	0x1
 2957 003b 54       		.byte	0x54
 2958 003c 16000000 		.4byte	.LVL12
 2959 0040 28000000 		.4byte	.LFE4
 2960 0044 0400     		.2byte	0x4
 2961 0046 F3       		.byte	0xf3
 2962 0047 01       		.uleb128 0x1
 2963 0048 50       		.byte	0x50
 2964 0049 9F       		.byte	0x9f
 2965 004a 00000000 		.4byte	0
 2966 004e 00000000 		.4byte	0
 2967              	.LLST3:
 2968 0052 08000000 		.4byte	.LVL11
 2969 0056 1B000000 		.4byte	.LVL13-1
 2970 005a 0100     		.2byte	0x1
 2971 005c 50       		.byte	0x50
 2972 005d 00000000 		.4byte	0
 2973 0061 00000000 		.4byte	0
 2974              	.LLST4:
 2975 0065 00000000 		.4byte	.LVL14
 2976 0069 07000000 		.4byte	.LVL15-1
 2977 006d 0100     		.2byte	0x1
 2978 006f 50       		.byte	0x50
 2979 0070 07000000 		.4byte	.LVL15-1
 2980 0074 16000000 		.4byte	.LVL16
 2981 0078 0100     		.2byte	0x1
 2982 007a 54       		.byte	0x54
 2983 007b 16000000 		.4byte	.LVL16
 2984 007f 28000000 		.4byte	.LFE5
 2985 0083 0400     		.2byte	0x4
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 82


 2986 0085 F3       		.byte	0xf3
 2987 0086 01       		.uleb128 0x1
 2988 0087 50       		.byte	0x50
 2989 0088 9F       		.byte	0x9f
 2990 0089 00000000 		.4byte	0
 2991 008d 00000000 		.4byte	0
 2992              	.LLST5:
 2993 0091 08000000 		.4byte	.LVL15
 2994 0095 1B000000 		.4byte	.LVL17-1
 2995 0099 0100     		.2byte	0x1
 2996 009b 50       		.byte	0x50
 2997 009c 00000000 		.4byte	0
 2998 00a0 00000000 		.4byte	0
 2999              	.LLST6:
 3000 00a4 00000000 		.4byte	.LVL18
 3001 00a8 07000000 		.4byte	.LVL19-1
 3002 00ac 0100     		.2byte	0x1
 3003 00ae 50       		.byte	0x50
 3004 00af 07000000 		.4byte	.LVL19-1
 3005 00b3 16000000 		.4byte	.LVL20
 3006 00b7 0100     		.2byte	0x1
 3007 00b9 54       		.byte	0x54
 3008 00ba 16000000 		.4byte	.LVL20
 3009 00be 28000000 		.4byte	.LFE6
 3010 00c2 0400     		.2byte	0x4
 3011 00c4 F3       		.byte	0xf3
 3012 00c5 01       		.uleb128 0x1
 3013 00c6 50       		.byte	0x50
 3014 00c7 9F       		.byte	0x9f
 3015 00c8 00000000 		.4byte	0
 3016 00cc 00000000 		.4byte	0
 3017              	.LLST7:
 3018 00d0 08000000 		.4byte	.LVL19
 3019 00d4 1B000000 		.4byte	.LVL21-1
 3020 00d8 0100     		.2byte	0x1
 3021 00da 50       		.byte	0x50
 3022 00db 00000000 		.4byte	0
 3023 00df 00000000 		.4byte	0
 3024              	.LLST8:
 3025 00e3 00000000 		.4byte	.LVL22
 3026 00e7 07000000 		.4byte	.LVL23-1
 3027 00eb 0100     		.2byte	0x1
 3028 00ed 50       		.byte	0x50
 3029 00ee 07000000 		.4byte	.LVL23-1
 3030 00f2 18000000 		.4byte	.LVL24
 3031 00f6 0100     		.2byte	0x1
 3032 00f8 54       		.byte	0x54
 3033 00f9 18000000 		.4byte	.LVL24
 3034 00fd 2C000000 		.4byte	.LFE7
 3035 0101 0400     		.2byte	0x4
 3036 0103 F3       		.byte	0xf3
 3037 0104 01       		.uleb128 0x1
 3038 0105 50       		.byte	0x50
 3039 0106 9F       		.byte	0x9f
 3040 0107 00000000 		.4byte	0
 3041 010b 00000000 		.4byte	0
 3042              	.LLST9:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 83


 3043 010f 08000000 		.4byte	.LVL23
 3044 0113 21000000 		.4byte	.LVL25-1
 3045 0117 0100     		.2byte	0x1
 3046 0119 50       		.byte	0x50
 3047 011a 00000000 		.4byte	0
 3048 011e 00000000 		.4byte	0
 3049              	.LLST10:
 3050 0122 00000000 		.4byte	.LVL26
 3051 0126 04000000 		.4byte	.LVL27
 3052 012a 0100     		.2byte	0x1
 3053 012c 50       		.byte	0x50
 3054 012d 04000000 		.4byte	.LVL27
 3055 0131 10000000 		.4byte	.LFE8
 3056 0135 0400     		.2byte	0x4
 3057 0137 F3       		.byte	0xf3
 3058 0138 01       		.uleb128 0x1
 3059 0139 50       		.byte	0x50
 3060 013a 9F       		.byte	0x9f
 3061 013b 00000000 		.4byte	0
 3062 013f 00000000 		.4byte	0
 3063              	.LLST11:
 3064 0143 00000000 		.4byte	.LVL28
 3065 0147 07000000 		.4byte	.LVL29-1
 3066 014b 0100     		.2byte	0x1
 3067 014d 50       		.byte	0x50
 3068 014e 07000000 		.4byte	.LVL29-1
 3069 0152 18000000 		.4byte	.LVL30
 3070 0156 0100     		.2byte	0x1
 3071 0158 54       		.byte	0x54
 3072 0159 18000000 		.4byte	.LVL30
 3073 015d 28000000 		.4byte	.LFE9
 3074 0161 0400     		.2byte	0x4
 3075 0163 F3       		.byte	0xf3
 3076 0164 01       		.uleb128 0x1
 3077 0165 50       		.byte	0x50
 3078 0166 9F       		.byte	0x9f
 3079 0167 00000000 		.4byte	0
 3080 016b 00000000 		.4byte	0
 3081              	.LLST12:
 3082 016f 08000000 		.4byte	.LVL29
 3083 0173 21000000 		.4byte	.LVL31-1
 3084 0177 0100     		.2byte	0x1
 3085 0179 50       		.byte	0x50
 3086 017a 00000000 		.4byte	0
 3087 017e 00000000 		.4byte	0
 3088              	.LLST13:
 3089 0182 00000000 		.4byte	.LVL32
 3090 0186 07000000 		.4byte	.LVL33-1
 3091 018a 0100     		.2byte	0x1
 3092 018c 50       		.byte	0x50
 3093 018d 07000000 		.4byte	.LVL33-1
 3094 0191 18000000 		.4byte	.LVL34
 3095 0195 0100     		.2byte	0x1
 3096 0197 54       		.byte	0x54
 3097 0198 18000000 		.4byte	.LVL34
 3098 019c 28000000 		.4byte	.LFE10
 3099 01a0 0400     		.2byte	0x4
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 84


 3100 01a2 F3       		.byte	0xf3
 3101 01a3 01       		.uleb128 0x1
 3102 01a4 50       		.byte	0x50
 3103 01a5 9F       		.byte	0x9f
 3104 01a6 00000000 		.4byte	0
 3105 01aa 00000000 		.4byte	0
 3106              	.LLST14:
 3107 01ae 08000000 		.4byte	.LVL33
 3108 01b2 21000000 		.4byte	.LVL35-1
 3109 01b6 0100     		.2byte	0x1
 3110 01b8 50       		.byte	0x50
 3111 01b9 00000000 		.4byte	0
 3112 01bd 00000000 		.4byte	0
 3113              	.LLST15:
 3114 01c1 00000000 		.4byte	.LVL36
 3115 01c5 07000000 		.4byte	.LVL37-1
 3116 01c9 0100     		.2byte	0x1
 3117 01cb 50       		.byte	0x50
 3118 01cc 07000000 		.4byte	.LVL37-1
 3119 01d0 10000000 		.4byte	.LVL38
 3120 01d4 0100     		.2byte	0x1
 3121 01d6 54       		.byte	0x54
 3122 01d7 10000000 		.4byte	.LVL38
 3123 01db 2C000000 		.4byte	.LFE11
 3124 01df 0400     		.2byte	0x4
 3125 01e1 F3       		.byte	0xf3
 3126 01e2 01       		.uleb128 0x1
 3127 01e3 50       		.byte	0x50
 3128 01e4 9F       		.byte	0x9f
 3129 01e5 00000000 		.4byte	0
 3130 01e9 00000000 		.4byte	0
 3131              	.LLST16:
 3132 01ed 08000000 		.4byte	.LVL37
 3133 01f1 1F000000 		.4byte	.LVL39-1
 3134 01f5 0100     		.2byte	0x1
 3135 01f7 50       		.byte	0x50
 3136 01f8 00000000 		.4byte	0
 3137 01fc 00000000 		.4byte	0
 3138              	.LLST17:
 3139 0200 00000000 		.4byte	.LVL40
 3140 0204 07000000 		.4byte	.LVL41-1
 3141 0208 0100     		.2byte	0x1
 3142 020a 50       		.byte	0x50
 3143 020b 07000000 		.4byte	.LVL41-1
 3144 020f 16000000 		.4byte	.LVL42
 3145 0213 0100     		.2byte	0x1
 3146 0215 54       		.byte	0x54
 3147 0216 16000000 		.4byte	.LVL42
 3148 021a 28000000 		.4byte	.LFE12
 3149 021e 0400     		.2byte	0x4
 3150 0220 F3       		.byte	0xf3
 3151 0221 01       		.uleb128 0x1
 3152 0222 50       		.byte	0x50
 3153 0223 9F       		.byte	0x9f
 3154 0224 00000000 		.4byte	0
 3155 0228 00000000 		.4byte	0
 3156              	.LLST18:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 85


 3157 022c 08000000 		.4byte	.LVL41
 3158 0230 1B000000 		.4byte	.LVL43-1
 3159 0234 0100     		.2byte	0x1
 3160 0236 50       		.byte	0x50
 3161 0237 00000000 		.4byte	0
 3162 023b 00000000 		.4byte	0
 3163              	.LLST19:
 3164 023f 00000000 		.4byte	.LVL44
 3165 0243 04000000 		.4byte	.LVL45
 3166 0247 0100     		.2byte	0x1
 3167 0249 50       		.byte	0x50
 3168 024a 04000000 		.4byte	.LVL45
 3169 024e 0C000000 		.4byte	.LFE13
 3170 0252 0400     		.2byte	0x4
 3171 0254 F3       		.byte	0xf3
 3172 0255 01       		.uleb128 0x1
 3173 0256 50       		.byte	0x50
 3174 0257 9F       		.byte	0x9f
 3175 0258 00000000 		.4byte	0
 3176 025c 00000000 		.4byte	0
 3177              	.LLST20:
 3178 0260 00000000 		.4byte	.LVL46
 3179 0264 07000000 		.4byte	.LVL47-1
 3180 0268 0100     		.2byte	0x1
 3181 026a 50       		.byte	0x50
 3182 026b 07000000 		.4byte	.LVL47-1
 3183 026f 16000000 		.4byte	.LVL48
 3184 0273 0100     		.2byte	0x1
 3185 0275 54       		.byte	0x54
 3186 0276 16000000 		.4byte	.LVL48
 3187 027a 28000000 		.4byte	.LFE15
 3188 027e 0400     		.2byte	0x4
 3189 0280 F3       		.byte	0xf3
 3190 0281 01       		.uleb128 0x1
 3191 0282 50       		.byte	0x50
 3192 0283 9F       		.byte	0x9f
 3193 0284 00000000 		.4byte	0
 3194 0288 00000000 		.4byte	0
 3195              	.LLST21:
 3196 028c 08000000 		.4byte	.LVL47
 3197 0290 1B000000 		.4byte	.LVL49-1
 3198 0294 0100     		.2byte	0x1
 3199 0296 50       		.byte	0x50
 3200 0297 00000000 		.4byte	0
 3201 029b 00000000 		.4byte	0
 3202              	.LLST22:
 3203 029f 00000000 		.4byte	.LVL50
 3204 02a3 04000000 		.4byte	.LVL51
 3205 02a7 0100     		.2byte	0x1
 3206 02a9 50       		.byte	0x50
 3207 02aa 04000000 		.4byte	.LVL51
 3208 02ae 0C000000 		.4byte	.LFE16
 3209 02b2 0400     		.2byte	0x4
 3210 02b4 F3       		.byte	0xf3
 3211 02b5 01       		.uleb128 0x1
 3212 02b6 50       		.byte	0x50
 3213 02b7 9F       		.byte	0x9f
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 86


 3214 02b8 00000000 		.4byte	0
 3215 02bc 00000000 		.4byte	0
 3216              	.LLST23:
 3217 02c0 00000000 		.4byte	.LVL52
 3218 02c4 07000000 		.4byte	.LVL53-1
 3219 02c8 0100     		.2byte	0x1
 3220 02ca 50       		.byte	0x50
 3221 02cb 07000000 		.4byte	.LVL53-1
 3222 02cf 1E000000 		.4byte	.LVL55
 3223 02d3 0100     		.2byte	0x1
 3224 02d5 54       		.byte	0x54
 3225 02d6 1E000000 		.4byte	.LVL55
 3226 02da 24000000 		.4byte	.LFE18
 3227 02de 0400     		.2byte	0x4
 3228 02e0 F3       		.byte	0xf3
 3229 02e1 01       		.uleb128 0x1
 3230 02e2 50       		.byte	0x50
 3231 02e3 9F       		.byte	0x9f
 3232 02e4 00000000 		.4byte	0
 3233 02e8 00000000 		.4byte	0
 3234              	.LLST24:
 3235 02ec 08000000 		.4byte	.LVL53
 3236 02f0 1D000000 		.4byte	.LVL54-1
 3237 02f4 0100     		.2byte	0x1
 3238 02f6 50       		.byte	0x50
 3239 02f7 00000000 		.4byte	0
 3240 02fb 00000000 		.4byte	0
 3241              	.LLST25:
 3242 02ff 00000000 		.4byte	.LVL56
 3243 0303 04000000 		.4byte	.LVL57
 3244 0307 0100     		.2byte	0x1
 3245 0309 50       		.byte	0x50
 3246 030a 04000000 		.4byte	.LVL57
 3247 030e 0C000000 		.4byte	.LFE19
 3248 0312 0400     		.2byte	0x4
 3249 0314 F3       		.byte	0xf3
 3250 0315 01       		.uleb128 0x1
 3251 0316 50       		.byte	0x50
 3252 0317 9F       		.byte	0x9f
 3253 0318 00000000 		.4byte	0
 3254 031c 00000000 		.4byte	0
 3255              	.LLST26:
 3256 0320 00000000 		.4byte	.LVL58
 3257 0324 07000000 		.4byte	.LVL59-1
 3258 0328 0100     		.2byte	0x1
 3259 032a 50       		.byte	0x50
 3260 032b 07000000 		.4byte	.LVL59-1
 3261 032f 18000000 		.4byte	.LVL60
 3262 0333 0100     		.2byte	0x1
 3263 0335 54       		.byte	0x54
 3264 0336 18000000 		.4byte	.LVL60
 3265 033a 28000000 		.4byte	.LFE21
 3266 033e 0400     		.2byte	0x4
 3267 0340 F3       		.byte	0xf3
 3268 0341 01       		.uleb128 0x1
 3269 0342 50       		.byte	0x50
 3270 0343 9F       		.byte	0x9f
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 87


 3271 0344 00000000 		.4byte	0
 3272 0348 00000000 		.4byte	0
 3273              	.LLST27:
 3274 034c 08000000 		.4byte	.LVL59
 3275 0350 21000000 		.4byte	.LVL61-1
 3276 0354 0100     		.2byte	0x1
 3277 0356 50       		.byte	0x50
 3278 0357 00000000 		.4byte	0
 3279 035b 00000000 		.4byte	0
 3280              	.LLST28:
 3281 035f 00000000 		.4byte	.LVL62
 3282 0363 04000000 		.4byte	.LVL63
 3283 0367 0100     		.2byte	0x1
 3284 0369 50       		.byte	0x50
 3285 036a 04000000 		.4byte	.LVL63
 3286 036e 0C000000 		.4byte	.LFE22
 3287 0372 0400     		.2byte	0x4
 3288 0374 F3       		.byte	0xf3
 3289 0375 01       		.uleb128 0x1
 3290 0376 50       		.byte	0x50
 3291 0377 9F       		.byte	0x9f
 3292 0378 00000000 		.4byte	0
 3293 037c 00000000 		.4byte	0
 3294              	.LLST29:
 3295 0380 00000000 		.4byte	.LVL64
 3296 0384 04000000 		.4byte	.LVL65
 3297 0388 0100     		.2byte	0x1
 3298 038a 50       		.byte	0x50
 3299 038b 04000000 		.4byte	.LVL65
 3300 038f 0C000000 		.4byte	.LFE24
 3301 0393 0400     		.2byte	0x4
 3302 0395 F3       		.byte	0xf3
 3303 0396 01       		.uleb128 0x1
 3304 0397 50       		.byte	0x50
 3305 0398 9F       		.byte	0x9f
 3306 0399 00000000 		.4byte	0
 3307 039d 00000000 		.4byte	0
 3308              	.LLST30:
 3309 03a1 00000000 		.4byte	.LVL66
 3310 03a5 07000000 		.4byte	.LVL67-1
 3311 03a9 0100     		.2byte	0x1
 3312 03ab 50       		.byte	0x50
 3313 03ac 07000000 		.4byte	.LVL67-1
 3314 03b0 16000000 		.4byte	.LVL68
 3315 03b4 0100     		.2byte	0x1
 3316 03b6 54       		.byte	0x54
 3317 03b7 16000000 		.4byte	.LVL68
 3318 03bb 24000000 		.4byte	.LFE28
 3319 03bf 0400     		.2byte	0x4
 3320 03c1 F3       		.byte	0xf3
 3321 03c2 01       		.uleb128 0x1
 3322 03c3 50       		.byte	0x50
 3323 03c4 9F       		.byte	0x9f
 3324 03c5 00000000 		.4byte	0
 3325 03c9 00000000 		.4byte	0
 3326              	.LLST31:
 3327 03cd 08000000 		.4byte	.LVL67
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 88


 3328 03d1 1B000000 		.4byte	.LVL69-1
 3329 03d5 0100     		.2byte	0x1
 3330 03d7 50       		.byte	0x50
 3331 03d8 00000000 		.4byte	0
 3332 03dc 00000000 		.4byte	0
 3333              	.LLST32:
 3334 03e0 00000000 		.4byte	.LVL70
 3335 03e4 07000000 		.4byte	.LVL71-1
 3336 03e8 0100     		.2byte	0x1
 3337 03ea 50       		.byte	0x50
 3338 03eb 07000000 		.4byte	.LVL71-1
 3339 03ef 10000000 		.4byte	.LVL72
 3340 03f3 0100     		.2byte	0x1
 3341 03f5 54       		.byte	0x54
 3342 03f6 10000000 		.4byte	.LVL72
 3343 03fa 24000000 		.4byte	.LFE29
 3344 03fe 0400     		.2byte	0x4
 3345 0400 F3       		.byte	0xf3
 3346 0401 01       		.uleb128 0x1
 3347 0402 50       		.byte	0x50
 3348 0403 9F       		.byte	0x9f
 3349 0404 00000000 		.4byte	0
 3350 0408 00000000 		.4byte	0
 3351              	.LLST33:
 3352 040c 08000000 		.4byte	.LVL71
 3353 0410 1D000000 		.4byte	.LVL73-1
 3354 0414 0100     		.2byte	0x1
 3355 0416 50       		.byte	0x50
 3356 0417 00000000 		.4byte	0
 3357 041b 00000000 		.4byte	0
 3358              	.LLST34:
 3359 041f 00000000 		.4byte	.LVL74
 3360 0423 07000000 		.4byte	.LVL75-1
 3361 0427 0100     		.2byte	0x1
 3362 0429 50       		.byte	0x50
 3363 042a 07000000 		.4byte	.LVL75-1
 3364 042e 10000000 		.4byte	.LVL76
 3365 0432 0100     		.2byte	0x1
 3366 0434 54       		.byte	0x54
 3367 0435 10000000 		.4byte	.LVL76
 3368 0439 28000000 		.4byte	.LFE30
 3369 043d 0400     		.2byte	0x4
 3370 043f F3       		.byte	0xf3
 3371 0440 01       		.uleb128 0x1
 3372 0441 50       		.byte	0x50
 3373 0442 9F       		.byte	0x9f
 3374 0443 00000000 		.4byte	0
 3375 0447 00000000 		.4byte	0
 3376              	.LLST35:
 3377 044b 08000000 		.4byte	.LVL75
 3378 044f 1D000000 		.4byte	.LVL77-1
 3379 0453 0100     		.2byte	0x1
 3380 0455 50       		.byte	0x50
 3381 0456 00000000 		.4byte	0
 3382 045a 00000000 		.4byte	0
 3383              	.LLST36:
 3384 045e 00000000 		.4byte	.LVL78
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 89


 3385 0462 07000000 		.4byte	.LVL79-1
 3386 0466 0100     		.2byte	0x1
 3387 0468 50       		.byte	0x50
 3388 0469 07000000 		.4byte	.LVL79-1
 3389 046d 10000000 		.4byte	.LVL80
 3390 0471 0100     		.2byte	0x1
 3391 0473 54       		.byte	0x54
 3392 0474 10000000 		.4byte	.LVL80
 3393 0478 24000000 		.4byte	.LFE31
 3394 047c 0400     		.2byte	0x4
 3395 047e F3       		.byte	0xf3
 3396 047f 01       		.uleb128 0x1
 3397 0480 50       		.byte	0x50
 3398 0481 9F       		.byte	0x9f
 3399 0482 00000000 		.4byte	0
 3400 0486 00000000 		.4byte	0
 3401              	.LLST37:
 3402 048a 08000000 		.4byte	.LVL79
 3403 048e 1D000000 		.4byte	.LVL81-1
 3404 0492 0100     		.2byte	0x1
 3405 0494 50       		.byte	0x50
 3406 0495 00000000 		.4byte	0
 3407 0499 00000000 		.4byte	0
 3408              	.LLST38:
 3409 049d 00000000 		.4byte	.LVL82
 3410 04a1 07000000 		.4byte	.LVL83-1
 3411 04a5 0100     		.2byte	0x1
 3412 04a7 50       		.byte	0x50
 3413 04a8 07000000 		.4byte	.LVL83-1
 3414 04ac 10000000 		.4byte	.LVL84
 3415 04b0 0100     		.2byte	0x1
 3416 04b2 54       		.byte	0x54
 3417 04b3 10000000 		.4byte	.LVL84
 3418 04b7 24000000 		.4byte	.LFE32
 3419 04bb 0400     		.2byte	0x4
 3420 04bd F3       		.byte	0xf3
 3421 04be 01       		.uleb128 0x1
 3422 04bf 50       		.byte	0x50
 3423 04c0 9F       		.byte	0x9f
 3424 04c1 00000000 		.4byte	0
 3425 04c5 00000000 		.4byte	0
 3426              	.LLST39:
 3427 04c9 08000000 		.4byte	.LVL83
 3428 04cd 1D000000 		.4byte	.LVL85-1
 3429 04d1 0100     		.2byte	0x1
 3430 04d3 50       		.byte	0x50
 3431 04d4 00000000 		.4byte	0
 3432 04d8 00000000 		.4byte	0
 3433              	.LLST40:
 3434 04dc 00000000 		.4byte	.LVL86
 3435 04e0 09000000 		.4byte	.LVL87-1
 3436 04e4 0100     		.2byte	0x1
 3437 04e6 50       		.byte	0x50
 3438 04e7 09000000 		.4byte	.LVL87-1
 3439 04eb 0E000000 		.4byte	.LVL88
 3440 04ef 0100     		.2byte	0x1
 3441 04f1 55       		.byte	0x55
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 90


 3442 04f2 0E000000 		.4byte	.LVL88
 3443 04f6 1C000000 		.4byte	.LFE33
 3444 04fa 0400     		.2byte	0x4
 3445 04fc F3       		.byte	0xf3
 3446 04fd 01       		.uleb128 0x1
 3447 04fe 50       		.byte	0x50
 3448 04ff 9F       		.byte	0x9f
 3449 0500 00000000 		.4byte	0
 3450 0504 00000000 		.4byte	0
 3451              	.LLST41:
 3452 0508 00000000 		.4byte	.LVL86
 3453 050c 09000000 		.4byte	.LVL87-1
 3454 0510 0100     		.2byte	0x1
 3455 0512 51       		.byte	0x51
 3456 0513 09000000 		.4byte	.LVL87-1
 3457 0517 14000000 		.4byte	.LVL90
 3458 051b 0100     		.2byte	0x1
 3459 051d 54       		.byte	0x54
 3460 051e 14000000 		.4byte	.LVL90
 3461 0522 1C000000 		.4byte	.LFE33
 3462 0526 0400     		.2byte	0x4
 3463 0528 F3       		.byte	0xf3
 3464 0529 01       		.uleb128 0x1
 3465 052a 51       		.byte	0x51
 3466 052b 9F       		.byte	0x9f
 3467 052c 00000000 		.4byte	0
 3468 0530 00000000 		.4byte	0
 3469              	.LLST42:
 3470 0534 0A000000 		.4byte	.LVL87
 3471 0538 13000000 		.4byte	.LVL89-1
 3472 053c 0100     		.2byte	0x1
 3473 053e 50       		.byte	0x50
 3474 053f 00000000 		.4byte	0
 3475 0543 00000000 		.4byte	0
 3476              		.section	.debug_aranges,"",%progbits
 3477 0000 54010000 		.4byte	0x154
 3478 0004 0200     		.2byte	0x2
 3479 0006 00000000 		.4byte	.Ldebug_info0
 3480 000a 04       		.byte	0x4
 3481 000b 00       		.byte	0
 3482 000c 0000     		.2byte	0
 3483 000e 0000     		.2byte	0
 3484 0010 00000000 		.4byte	.LFB0
 3485 0014 60000000 		.4byte	.LFE0-.LFB0
 3486 0018 00000000 		.4byte	.LFB1
 3487 001c 1C000000 		.4byte	.LFE1-.LFB1
 3488 0020 00000000 		.4byte	.LFB2
 3489 0024 1C000000 		.4byte	.LFE2-.LFB2
 3490 0028 00000000 		.4byte	.LFB3
 3491 002c 1C000000 		.4byte	.LFE3-.LFB3
 3492 0030 00000000 		.4byte	.LFB4
 3493 0034 28000000 		.4byte	.LFE4-.LFB4
 3494 0038 00000000 		.4byte	.LFB5
 3495 003c 28000000 		.4byte	.LFE5-.LFB5
 3496 0040 00000000 		.4byte	.LFB6
 3497 0044 28000000 		.4byte	.LFE6-.LFB6
 3498 0048 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 91


 3499 004c 2C000000 		.4byte	.LFE7-.LFB7
 3500 0050 00000000 		.4byte	.LFB8
 3501 0054 10000000 		.4byte	.LFE8-.LFB8
 3502 0058 00000000 		.4byte	.LFB9
 3503 005c 28000000 		.4byte	.LFE9-.LFB9
 3504 0060 00000000 		.4byte	.LFB10
 3505 0064 28000000 		.4byte	.LFE10-.LFB10
 3506 0068 00000000 		.4byte	.LFB11
 3507 006c 2C000000 		.4byte	.LFE11-.LFB11
 3508 0070 00000000 		.4byte	.LFB12
 3509 0074 28000000 		.4byte	.LFE12-.LFB12
 3510 0078 00000000 		.4byte	.LFB13
 3511 007c 0C000000 		.4byte	.LFE13-.LFB13
 3512 0080 00000000 		.4byte	.LFB14
 3513 0084 0C000000 		.4byte	.LFE14-.LFB14
 3514 0088 00000000 		.4byte	.LFB15
 3515 008c 28000000 		.4byte	.LFE15-.LFB15
 3516 0090 00000000 		.4byte	.LFB16
 3517 0094 0C000000 		.4byte	.LFE16-.LFB16
 3518 0098 00000000 		.4byte	.LFB17
 3519 009c 0C000000 		.4byte	.LFE17-.LFB17
 3520 00a0 00000000 		.4byte	.LFB18
 3521 00a4 24000000 		.4byte	.LFE18-.LFB18
 3522 00a8 00000000 		.4byte	.LFB19
 3523 00ac 0C000000 		.4byte	.LFE19-.LFB19
 3524 00b0 00000000 		.4byte	.LFB20
 3525 00b4 0C000000 		.4byte	.LFE20-.LFB20
 3526 00b8 00000000 		.4byte	.LFB21
 3527 00bc 28000000 		.4byte	.LFE21-.LFB21
 3528 00c0 00000000 		.4byte	.LFB22
 3529 00c4 0C000000 		.4byte	.LFE22-.LFB22
 3530 00c8 00000000 		.4byte	.LFB23
 3531 00cc 0C000000 		.4byte	.LFE23-.LFB23
 3532 00d0 00000000 		.4byte	.LFB24
 3533 00d4 0C000000 		.4byte	.LFE24-.LFB24
 3534 00d8 00000000 		.4byte	.LFB25
 3535 00dc 0C000000 		.4byte	.LFE25-.LFB25
 3536 00e0 00000000 		.4byte	.LFB26
 3537 00e4 0C000000 		.4byte	.LFE26-.LFB26
 3538 00e8 00000000 		.4byte	.LFB27
 3539 00ec 0C000000 		.4byte	.LFE27-.LFB27
 3540 00f0 00000000 		.4byte	.LFB28
 3541 00f4 24000000 		.4byte	.LFE28-.LFB28
 3542 00f8 00000000 		.4byte	.LFB29
 3543 00fc 24000000 		.4byte	.LFE29-.LFB29
 3544 0100 00000000 		.4byte	.LFB30
 3545 0104 28000000 		.4byte	.LFE30-.LFB30
 3546 0108 00000000 		.4byte	.LFB31
 3547 010c 24000000 		.4byte	.LFE31-.LFB31
 3548 0110 00000000 		.4byte	.LFB32
 3549 0114 24000000 		.4byte	.LFE32-.LFB32
 3550 0118 00000000 		.4byte	.LFB33
 3551 011c 1C000000 		.4byte	.LFE33-.LFB33
 3552 0120 00000000 		.4byte	.LFB34
 3553 0124 14000000 		.4byte	.LFE34-.LFB34
 3554 0128 00000000 		.4byte	.LFB35
 3555 012c 0C000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 92


 3556 0130 00000000 		.4byte	.LFB36
 3557 0134 0C000000 		.4byte	.LFE36-.LFB36
 3558 0138 00000000 		.4byte	.LFB37
 3559 013c 0C000000 		.4byte	.LFE37-.LFB37
 3560 0140 00000000 		.4byte	.LFB38
 3561 0144 0C000000 		.4byte	.LFE38-.LFB38
 3562 0148 00000000 		.4byte	.LFB39
 3563 014c 0C000000 		.4byte	.LFE39-.LFB39
 3564 0150 00000000 		.4byte	0
 3565 0154 00000000 		.4byte	0
 3566              		.section	.debug_ranges,"",%progbits
 3567              	.Ldebug_ranges0:
 3568 0000 12000000 		.4byte	.LBB10
 3569 0004 16000000 		.4byte	.LBE10
 3570 0008 16000000 		.4byte	.LBB13
 3571 000c 18000000 		.4byte	.LBE13
 3572 0010 00000000 		.4byte	0
 3573 0014 00000000 		.4byte	0
 3574 0018 00000000 		.4byte	.LFB0
 3575 001c 60000000 		.4byte	.LFE0
 3576 0020 00000000 		.4byte	.LFB1
 3577 0024 1C000000 		.4byte	.LFE1
 3578 0028 00000000 		.4byte	.LFB2
 3579 002c 1C000000 		.4byte	.LFE2
 3580 0030 00000000 		.4byte	.LFB3
 3581 0034 1C000000 		.4byte	.LFE3
 3582 0038 00000000 		.4byte	.LFB4
 3583 003c 28000000 		.4byte	.LFE4
 3584 0040 00000000 		.4byte	.LFB5
 3585 0044 28000000 		.4byte	.LFE5
 3586 0048 00000000 		.4byte	.LFB6
 3587 004c 28000000 		.4byte	.LFE6
 3588 0050 00000000 		.4byte	.LFB7
 3589 0054 2C000000 		.4byte	.LFE7
 3590 0058 00000000 		.4byte	.LFB8
 3591 005c 10000000 		.4byte	.LFE8
 3592 0060 00000000 		.4byte	.LFB9
 3593 0064 28000000 		.4byte	.LFE9
 3594 0068 00000000 		.4byte	.LFB10
 3595 006c 28000000 		.4byte	.LFE10
 3596 0070 00000000 		.4byte	.LFB11
 3597 0074 2C000000 		.4byte	.LFE11
 3598 0078 00000000 		.4byte	.LFB12
 3599 007c 28000000 		.4byte	.LFE12
 3600 0080 00000000 		.4byte	.LFB13
 3601 0084 0C000000 		.4byte	.LFE13
 3602 0088 00000000 		.4byte	.LFB14
 3603 008c 0C000000 		.4byte	.LFE14
 3604 0090 00000000 		.4byte	.LFB15
 3605 0094 28000000 		.4byte	.LFE15
 3606 0098 00000000 		.4byte	.LFB16
 3607 009c 0C000000 		.4byte	.LFE16
 3608 00a0 00000000 		.4byte	.LFB17
 3609 00a4 0C000000 		.4byte	.LFE17
 3610 00a8 00000000 		.4byte	.LFB18
 3611 00ac 24000000 		.4byte	.LFE18
 3612 00b0 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 93


 3613 00b4 0C000000 		.4byte	.LFE19
 3614 00b8 00000000 		.4byte	.LFB20
 3615 00bc 0C000000 		.4byte	.LFE20
 3616 00c0 00000000 		.4byte	.LFB21
 3617 00c4 28000000 		.4byte	.LFE21
 3618 00c8 00000000 		.4byte	.LFB22
 3619 00cc 0C000000 		.4byte	.LFE22
 3620 00d0 00000000 		.4byte	.LFB23
 3621 00d4 0C000000 		.4byte	.LFE23
 3622 00d8 00000000 		.4byte	.LFB24
 3623 00dc 0C000000 		.4byte	.LFE24
 3624 00e0 00000000 		.4byte	.LFB25
 3625 00e4 0C000000 		.4byte	.LFE25
 3626 00e8 00000000 		.4byte	.LFB26
 3627 00ec 0C000000 		.4byte	.LFE26
 3628 00f0 00000000 		.4byte	.LFB27
 3629 00f4 0C000000 		.4byte	.LFE27
 3630 00f8 00000000 		.4byte	.LFB28
 3631 00fc 24000000 		.4byte	.LFE28
 3632 0100 00000000 		.4byte	.LFB29
 3633 0104 24000000 		.4byte	.LFE29
 3634 0108 00000000 		.4byte	.LFB30
 3635 010c 28000000 		.4byte	.LFE30
 3636 0110 00000000 		.4byte	.LFB31
 3637 0114 24000000 		.4byte	.LFE31
 3638 0118 00000000 		.4byte	.LFB32
 3639 011c 24000000 		.4byte	.LFE32
 3640 0120 00000000 		.4byte	.LFB33
 3641 0124 1C000000 		.4byte	.LFE33
 3642 0128 00000000 		.4byte	.LFB34
 3643 012c 14000000 		.4byte	.LFE34
 3644 0130 00000000 		.4byte	.LFB35
 3645 0134 0C000000 		.4byte	.LFE35
 3646 0138 00000000 		.4byte	.LFB36
 3647 013c 0C000000 		.4byte	.LFE36
 3648 0140 00000000 		.4byte	.LFB37
 3649 0144 0C000000 		.4byte	.LFE37
 3650 0148 00000000 		.4byte	.LFB38
 3651 014c 0C000000 		.4byte	.LFE38
 3652 0150 00000000 		.4byte	.LFB39
 3653 0154 0C000000 		.4byte	.LFE39
 3654 0158 00000000 		.4byte	0
 3655 015c 00000000 		.4byte	0
 3656              		.section	.debug_line,"",%progbits
 3657              	.Ldebug_line0:
 3658 0000 EB030000 		.section	.debug_str,"MS",%progbits,1
 3658      02004D00 
 3658      00000201 
 3658      FB0E0D00 
 3658      01010101 
 3659              	.LASF18:
 3660 0000 636F756E 		.ascii	"count\000"
 3660      7400
 3661              	.LASF25:
 3662 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3662      456E6162 
 3662      6C6500
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 94


 3663              	.LASF81:
 3664 0011 43794578 		.ascii	"CyExitCriticalSection\000"
 3664      69744372 
 3664      69746963 
 3664      616C5365 
 3664      6374696F 
 3665              	.LASF39:
 3666 0027 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3666      53657450 
 3666      574D5379 
 3666      6E634B69 
 3666      6C6C00
 3667              	.LASF21:
 3668 003a 70657269 		.ascii	"period\000"
 3668      6F6400
 3669              	.LASF7:
 3670 0041 6C6F6E67 		.ascii	"long long unsigned int\000"
 3670      206C6F6E 
 3670      6720756E 
 3670      7369676E 
 3670      65642069 
 3671              	.LASF63:
 3672 0058 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3672      53657443 
 3672      61707475 
 3672      72654D6F 
 3672      646500
 3673              	.LASF32:
 3674 006b 71644D6F 		.ascii	"qdMode\000"
 3674      646500
 3675              	.LASF16:
 3676 0072 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3676      57726974 
 3676      65436F75 
 3676      6E746572 
 3676      00
 3677              	.LASF49:
 3678 0083 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3678      52656164 
 3678      436F756E 
 3678      74657200 
 3679              	.LASF6:
 3680 0093 6C6F6E67 		.ascii	"long long int\000"
 3680      206C6F6E 
 3680      6720696E 
 3680      7400
 3681              	.LASF0:
 3682 00a1 7369676E 		.ascii	"signed char\000"
 3682      65642063 
 3682      68617200 
 3683              	.LASF58:
 3684 00ad 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3684      57726974 
 3684      65436F6D 
 3684      70617265 
 3684      42756600 
 3685              	.LASF17:
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 95


 3686 00c1 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3686      53657449 
 3686      6E746572 
 3686      72757074 
 3686      4D6F6465 
 3687              	.LASF74:
 3688 00d6 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3688      436C6561 
 3688      72496E74 
 3688      65727275 
 3688      707400
 3689              	.LASF77:
 3690 00e9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3690      6E657261 
 3690      7465645F 
 3690      536F7572 
 3690      63655C50 
 3691              	.LASF4:
 3692 0108 6C6F6E67 		.ascii	"long int\000"
 3692      20696E74 
 3692      00
 3693              	.LASF9:
 3694 0111 75696E74 		.ascii	"uint8\000"
 3694      3800
 3695              	.LASF12:
 3696 0117 646F7562 		.ascii	"double\000"
 3696      6C6500
 3697              	.LASF60:
 3698 011e 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3698      52656164 
 3698      436F6D70 
 3698      61726542 
 3698      756600
 3699              	.LASF51:
 3700 0131 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3700      53657443 
 3700      6F6D7061 
 3700      72655377 
 3700      617000
 3701              	.LASF27:
 3702 0144 50574D5F 		.ascii	"PWM_Stop\000"
 3702      53746F70 
 3702      00
 3703              	.LASF45:
 3704 014d 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3704      53657450 
 3704      574D496E 
 3704      76657274 
 3704      00
 3705              	.LASF10:
 3706 015e 75696E74 		.ascii	"uint32\000"
 3706      333200
 3707              	.LASF66:
 3708 0165 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3708      53657453 
 3708      74617274 
 3708      4D6F6465 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 96


 3708      00
 3709              	.LASF64:
 3710 0176 74726967 		.ascii	"triggerMode\000"
 3710      6765724D 
 3710      6F646500 
 3711              	.LASF46:
 3712 0182 6D61736B 		.ascii	"mask\000"
 3712      00
 3713              	.LASF71:
 3714 0187 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3714      52656164 
 3714      53746174 
 3714      757300
 3715              	.LASF44:
 3716 0196 64656164 		.ascii	"deadTime\000"
 3716      54696D65 
 3716      00
 3717              	.LASF67:
 3718 019f 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3718      53657453 
 3718      746F704D 
 3718      6F646500 
 3719              	.LASF8:
 3720 01af 756E7369 		.ascii	"unsigned int\000"
 3720      676E6564 
 3720      20696E74 
 3720      00
 3721              	.LASF43:
 3722 01bc 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3722      53657450 
 3722      574D4465 
 3722      61645469 
 3722      6D6500
 3723              	.LASF70:
 3724 01cf 636F6D6D 		.ascii	"command\000"
 3724      616E6400 
 3725              	.LASF5:
 3726 01d7 6C6F6E67 		.ascii	"long unsigned int\000"
 3726      20756E73 
 3726      69676E65 
 3726      6420696E 
 3726      7400
 3727              	.LASF38:
 3728 01e9 6D6F6465 		.ascii	"modeMask\000"
 3728      4D61736B 
 3728      00
 3729              	.LASF80:
 3730 01f2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3730      74657243 
 3730      72697469 
 3730      63616C53 
 3730      65637469 
 3731              	.LASF3:
 3732 0209 73686F72 		.ascii	"short unsigned int\000"
 3732      7420756E 
 3732      7369676E 
 3732      65642069 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 97


 3732      6E7400
 3733              	.LASF33:
 3734 021c 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3734      53657450 
 3734      72657363 
 3734      616C6572 
 3734      00
 3735              	.LASF26:
 3736 022d 50574D5F 		.ascii	"PWM_Start\000"
 3736      53746172 
 3736      7400
 3737              	.LASF69:
 3738 0237 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3738      54726967 
 3738      67657243 
 3738      6F6D6D61 
 3738      6E6400
 3739              	.LASF20:
 3740 024a 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3740      57726974 
 3740      65506572 
 3740      696F6400 
 3741              	.LASF14:
 3742 025a 72656733 		.ascii	"reg32\000"
 3742      3200
 3743              	.LASF79:
 3744 0260 50574D5F 		.ascii	"PWM_initVar\000"
 3744      696E6974 
 3744      56617200 
 3745              	.LASF50:
 3746 026c 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3746      52656164 
 3746      50657269 
 3746      6F6400
 3747              	.LASF15:
 3748 027b 73697A65 		.ascii	"sizetype\000"
 3748      74797065 
 3748      00
 3749              	.LASF40:
 3750 0284 73796E63 		.ascii	"syncKillEnable\000"
 3750      4B696C6C 
 3750      456E6162 
 3750      6C6500
 3751              	.LASF23:
 3752 0293 636F6D70 		.ascii	"compare\000"
 3752      61726500 
 3753              	.LASF35:
 3754 029b 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3754      5365744F 
 3754      6E655368 
 3754      6F7400
 3755              	.LASF55:
 3756 02aa 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3756      52656164 
 3756      50657269 
 3756      6F644275 
 3756      6600
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 98


 3757              	.LASF78:
 3758 02bc 433A5C57 		.ascii	"C:\\WORKS\\WS\\WS_PSoC\\SCB_Bootloader\\UART_Bootlo"
 3758      4F524B53 
 3758      5C57535C 
 3758      57535F50 
 3758      536F435C 
 3759 02ea 61646572 		.ascii	"ader.cydsn\000"
 3759      2E637964 
 3759      736E00
 3760              	.LASF11:
 3761 02f5 666C6F61 		.ascii	"float\000"
 3761      7400
 3762              	.LASF34:
 3763 02fb 70726573 		.ascii	"prescaler\000"
 3763      63616C65 
 3763      7200
 3764              	.LASF61:
 3765 0305 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3765      52656164 
 3765      43617074 
 3765      75726500 
 3766              	.LASF56:
 3767 0315 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3767      53657450 
 3767      6572696F 
 3767      64537761 
 3767      7000
 3768              	.LASF1:
 3769 0327 756E7369 		.ascii	"unsigned char\000"
 3769      676E6564 
 3769      20636861 
 3769      7200
 3770              	.LASF24:
 3771 0335 50574D5F 		.ascii	"PWM_Init\000"
 3771      496E6974 
 3771      00
 3772              	.LASF42:
 3773 033e 73746F70 		.ascii	"stopOnKillEnable\000"
 3773      4F6E4B69 
 3773      6C6C456E 
 3773      61626C65 
 3773      00
 3774              	.LASF37:
 3775 034f 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3775      53657450 
 3775      574D4D6F 
 3775      646500
 3776              	.LASF2:
 3777 035e 73686F72 		.ascii	"short int\000"
 3777      7420696E 
 3777      7400
 3778              	.LASF72:
 3779 0368 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3779      47657449 
 3779      6E746572 
 3779      72757074 
 3779      536F7572 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 99


 3780              	.LASF19:
 3781 0385 696E7465 		.ascii	"interruptMask\000"
 3781      72727570 
 3781      744D6173 
 3781      6B00
 3782              	.LASF53:
 3783 0393 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3783      57726974 
 3783      65506572 
 3783      696F6442 
 3783      756600
 3784              	.LASF30:
 3785 03a6 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3785      53657451 
 3785      444D6F64 
 3785      6500
 3786              	.LASF13:
 3787 03b4 63686172 		.ascii	"char\000"
 3787      00
 3788              	.LASF31:
 3789 03b9 6D6F6465 		.ascii	"mode\000"
 3789      00
 3790              	.LASF75:
 3791 03be 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3791      53657449 
 3791      6E746572 
 3791      72757074 
 3791      00
 3792              	.LASF76:
 3793 03cf 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3793      4320342E 
 3793      382E3420 
 3793      32303134 
 3793      30353236 
 3794 0402 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3794      20726576 
 3794      6973696F 
 3794      6E203231 
 3794      31333538 
 3795 0435 73202D66 		.ascii	"s -ffunction-sections\000"
 3795      66756E63 
 3795      74696F6E 
 3795      2D736563 
 3795      74696F6E 
 3796              	.LASF65:
 3797 044b 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3797      53657452 
 3797      656C6F61 
 3797      644D6F64 
 3797      6500
 3798              	.LASF48:
 3799 045d 636F756E 		.ascii	"counterMode\000"
 3799      7465724D 
 3799      6F646500 
 3800              	.LASF59:
 3801 0469 636F6D70 		.ascii	"compareBuf\000"
 3801      61726542 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 100


 3801      756600
 3802              	.LASF54:
 3803 0474 70657269 		.ascii	"periodBuf\000"
 3803      6F644275 
 3803      6600
 3804              	.LASF62:
 3805 047e 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3805      52656164 
 3805      43617074 
 3805      75726542 
 3805      756600
 3806              	.LASF28:
 3807 0491 656E6162 		.ascii	"enableInterrupts\000"
 3807      6C65496E 
 3807      74657272 
 3807      75707473 
 3807      00
 3808              	.LASF68:
 3809 04a2 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3809      53657443 
 3809      6F756E74 
 3809      4D6F6465 
 3809      00
 3810              	.LASF36:
 3811 04b3 6F6E6553 		.ascii	"oneShotEnable\000"
 3811      686F7445 
 3811      6E61626C 
 3811      6500
 3812              	.LASF29:
 3813 04c1 50574D5F 		.ascii	"PWM_SetMode\000"
 3813      5365744D 
 3813      6F646500 
 3814              	.LASF41:
 3815 04cd 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3815      53657450 
 3815      574D5374 
 3815      6F704F6E 
 3815      4B696C6C 
 3816              	.LASF47:
 3817 04e2 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3817      53657443 
 3817      6F756E74 
 3817      65724D6F 
 3817      646500
 3818              	.LASF52:
 3819 04f5 73776170 		.ascii	"swapEnable\000"
 3819      456E6162 
 3819      6C6500
 3820              	.LASF73:
 3821 0500 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3821      47657449 
 3821      6E746572 
 3821      72757074 
 3821      536F7572 
 3822              	.LASF22:
 3823 0517 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3823      57726974 
ARM GAS  C:\Users\kbuchi\AppData\Local\Temp\ccgVvzBo.s 			page 101


 3823      65436F6D 
 3823      70617265 
 3823      00
 3824              	.LASF57:
 3825 0528 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3825      52656164 
 3825      436F6D70 
 3825      61726500 
 3826              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
